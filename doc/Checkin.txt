Checkins

Monday, 4/9/01 5:55pm (most of this code was done on Friday 4/6/01)
+ Added many constants, including weapon names and entity names
+ Added new spawning system including the concept of the ready room and alien/marine spawns.  Added concept of teams.
+ Added new entities: avh_ready_room, avh_marine_start, avh_alien_start, avh_join_marines, avh_join_aliens, avh_join_autoassign, avh_leave_game and other unimplemented entities
+ Added Aliens-esque green teletype for the message of the day.  When you connect to a server, you immediately spawn in the ready room and see the MOTD type out, then fade away
+ Added spectator mode (like CS/TFC, spectator is a dynamic light right now, for fun).  Hitting enter will spawn you back in the ready room.
+ Reworked and simplified game rules, including tournament/casual mode.  Setting mp_tournament mode is all it takes. (rippled a bit through chain of command). Removed now-outdated AvHCOCRuleset.cpp.
+ Added ability to "purchase reinforcements" from the pie menu, which spawns a spectator in on your side (needs more work at high-level)
+ Added translation hack to let UIManager coexist peacefully with teamfortress_viewport UI elements.  This probably won't be needed because of the new spawning model.  I'm going to attempt to not use any interactive UI elements outside the pie menu.
+ Gamma stuff is no longer on by default so I can debug in windowed mode without garish artifacts
+ Chat should no longer work between the play area and non play area
+ Added mp_allowspectators and mp_tournamentmode
+ Added HUD ammo elements again, so I could choose items from a menu (probably not needed long-term)

Tag: Alpha1
Monday, 4/16/01 11:39am (Was doing taxes and sick a lot of this last week so didn't get much done)
+ new music system (plays randomly .mp3s out of your music dir, pauses between songs, volume control)
+ spectator mode (free roaming, lock, free-look)
+ reinforcements (paying to spawn your friends in while they're in observer mode)
+ a resource entity that you "build" (by holding use) then it gives your team points
+ resource injections every so often
+ all weapons cost points now
+ respawning costs points, if you can't pay it, you are made a potential reinforcement
+ experimented with making the machine gun pause after emptying its clip, new sounds
+ You can only die (or suicide) when playing, not in ready room or observer
+ Joining a team when a game is in progress makes you a reinforcement
+ The ability to have marines play marines, or aliens play aliens
+ Checking for victory (a team has no bases)
+ Lots more little stuff
+ Added avh_deathmatchmode for demoing regular maps and just running around and shooting each other
+ Precached weaponbox so a player could drop their weapons on death
+ Added UTIL_Teletype, UTIL_Tutorial and UTIL_Error (they don't work quite right yet tho)
+ Players in reinforcement mode should now only be able to view members of their team (untested)
+ All text file assets are in CVS and are copied into the game dir as part of the build (hl and cl_dll, all configs)
+ Added server variables for all weapon costs, resource injection times/amounts, pregame time, reinforcement cost and more 
+ Added new avh_resource entity.  Starts off half-transparent, then when you +use it for awhile, it builds up, fading into view.  When fully built, starts humming.

Wednesday, 4/18/01 10:47am
+ Added the concept of player roles.  It's propagated to the client.
+ New ASSERT support (already found one two bugs with it!)
+ Support for different pie menus for soldier, leader and commander
+ Reworked pie menus.  They look great now.  They fade in and out better, don't have an image background (ie, no more vgui+impulse+white bug). They also show real+time point costs next to purchasable items, and nodes are disabled if you don't have the points to spend.  Pie menus now have separate x and y spacing. Pie menus now resize all nodes to be as big as the largest node needs to be to contain all the text. Tons more fixes. 
+ FadingImageLabel is now really a fading panel (haven't renamed yet). Fixed lots of bugs and inconsistencies
+ Added ability to "hide" components by translating them away.  This is needed to have overlapping, hidden components (ie, three pie menus)

Tag: Alpha2
Wednesday, 4/25/01 10:24am
+ Final phase of pie menus.  They have been further refined for speed and efficiency, using feedback from a Live Person (Matt).  They rock now!!
+ Added support for longer HUD messages (it was hardcoded at 80 per line)
+ Changed default music setting to 0 for testing
+ Added cl_quickselecttime for piemenu speed selection
+ Projects now copy config.cfg, server.cfg and listenserver.cfg as part of build
+ Music now starts when you start playing, not when you enter the ready room.  When you leave the play area, it stops again (observer mode, reinforcement mode, etc)
+ Purchasing upgrades and equipment
+ Upgrades are now screened by role type
+ Concept of ammo 
+ New message system for giving hints and instructions to players
+ Team now stored in pev+>team instead of player
+ Dropping items and inventory selection (toggle weapon now works right)
+ Added localized messages that display when your playmode changes or when your role changes
+ New weight system that changes your current speed depending on marine/alien and amount and type of weaponry/ammo you're holding
+ Hitting a mouse button in the ready room displays instructions (before you have a weapon or pie menu)
+ Ripped out weapons-class macro crap.
+ Weapons report info correctly including clip size, slot position, ammo type, total ammo allowed, etc.
+ Added mines!
+ Added buildable turrets!
+ Added droppable generic ammo packs that get added as a full clip to whatever weapon you're holding!
+ Weight system
+ Ammo no longer respawns automatically
+ Allowed to join teams whenever when cheats enabled
+ Added spawnenemy command (not sure if it works right)
+ Added equip1, equip2 and equip3 commands
+ Weapons allowed/disallowed for various roles
+ Support for weapons to decide what they do when they run out of ammo

Tag: Alpha3
Saturday, 4/28/01 1:01am
+ Ripped out weapon factory and WeaponInfo and made weapons normal, non+generic classes
+ All weapons are now predicted on the client
+ Changed many includes and broke out much duplicated HL code as part of weapon prediction work
+ Many new sounds for weapons
+ Added countdown clock to automatically start game
+ Alien idle and movement sounds that play depending on how frantically you're moving, also individual death, pain and wound sounds
+ New sound list manager that makes it easy to manage a list of sounds in a directory, without having to manually precache or choose one randomly
+ Added concept of team upgrades
+ Added pie nodes that upgrade along a path (they change upgrade values, then reset at the start of the match)
+ Renamed and/or removed most upgrades
+ Reworked pie menu again to reflect complete and utter lack of marine roles (I think it's for the best for now)
+ The pie menu now uses localized text from titles.txt
+ Turrets stop firing better
+ Pinging sound is softer and fades off faster 
+ Fixed team chat and regular chat so they work from the menu
+ Added tons of titles


Tag: None
Monday, 4/30/01 10:07am
+ Tried to get release config to build but stopped
+ Removed old weapons factory files and includes (this wasn't caught before, I had to do a full rebuild)
+ Removed outdated variable code
+ Added avh_alienspawncost
+ Added concept of illegal observer mode.  The screen goes black when you have no targets you're allowed to watch.
+ New client+side jetpack effects for all players!  Creates dynamic lights and they stay updated with player positions as they're using jetpacks.  All creates jetpack sound that is updated.  Lights are killed when the jetpack is turned off.  Happens client+side, then propagated to everyone else, beautiful!
+ Hooks for propagating jetpack events to everyone
+ Awarding points to players when they, or their turret or landmine, gets a kill
+ Point calculation for a player
+ Check for team victory!

Tag: None
Tuesday, 5/8/01  6:44pm
+ Added drawing of health on hud
+ Added weapon switching, including using the standard half+life weapon switch icons (after much fighting)
+ Finished up the particle system!  Working pretty darned well now.  Entities in Worldcraft work, then can be toggled on and off.  Tons of new parameters.
+ Now AvH supports playing on Counter+strike maps!  It will try to play a map as AvH but if it can't, it tries as a CS map, if it can't, it will try as a DM map.  Means you can play AvH on de_dust!  Used for prototyping gameplay.
+ Killing monsters or other players awards points in a general fashion
+ Added rank promotion/demotion through pie menu
+ Fixed up gamma correction so it's more compatibile on more systems (it will try different gammas until one works)
+ Fixed major problems with gamma ramp stuff (blatant bugs when generating ramp)

Tag: None
Wednesday, 5/9/01 6:44pm
+ Reworked particles integration with Worldcraft, it's great now!
+ Customizable particle systems are now completely supported in worldcraft in a relatively intuitive and visual fashion

Tag: None
Tuesday, 5/15/01 3:45pm
+ Added collision detection to particles, so they can generate other particle systems
+ Fixed up particle systems so they work right in multiplayer, including when changing levels in multiplayer and using "map whatever" in test mode
+ Added "constrain pitch" flag and "use world gravity" flags to particle systems
+ Better support for starting velocity and generation primitives
+ Added fade-in, fade-out and both fade-in fade-out support for different lifetime types
+ Reset particle system when map changes (completely reworked resetting for clients)
+ Fix slowdown problem where particle systems not getting deleted

Tag: None
Thursday, 5/17/01 10:56pm
+ Added new welder weapon!  This can be used to weld things closed, or weld through certain items!
+ Weldable entities are created in Worldcraft where their hit points, time to weld, weld-open or weld-close and other options are chosen
+ Added tons of cool effects for welding
+ Added progress bar that shows how much time is left on this weld job
+ Added support for destroyable weld-jobs (for welds that are closed, instead of opened).  
+ When closeable weld-jobs are destroyed, or when openable weld jobs are first finished, create a explosion of pieces of the correct material 
+ The welder and wendable entities are ready for use
+ Added default F keys for switching roles easily

Tag: None
Monday, 5/21/01 10:01am

Features
+ First phase of overwatch!  All the code has been written but it needs some tweaking and fixing.
+ Stand still for 5 seconds or so and overwatch kicks in.  An overwatch indicator lights up and a sound plays.
+ While in overwatch, any enemy in view, in range of your weapon, is targetted.  When targetted, your HUD displays range to current target, and automatically starts firing at it.
+ Added "tension" sound that plays a low droning in the background when overwatch has a target, then increases the droning volume and pitch as the target gets closer.

Internals and programming details
+ Reworked some of the user entity variables
+ Pulled Roach class definition into .h file so it could be included and extended
+ Roach has a class name now so it can be queried
+ Renamed user variable enums to be more descriptive and to make bugs more obvious
+ When in overwatch, weapon firing happens on the server, so send events to everyone (don't assume client already played it)
+ Oops, allow construction of FadingTextLabel from ui.txt

Tag: None
Tuesday, 5/22/01 7:03pm
Features
+ Added bot support!  These bots are quite stupid right now but they are useful for testing large numbers of players.  It's really fun to have bots spawn in with names like Citizen, PsychoBoyJack and SquealLikeAPig.  It's about the only time I get to kill them.
+ Completely rewrote the chain of command, for the last time.  It is relatively clean and simple, now I'm going to rewrite the UI side of it.
+ Added support for soldier defection.  Leader rubbing your wrong?  Leave and join a new squad.  No others to join?  Take what's rightfully yours and venture out on your own.  A last resort for abusive superiors.
+ Preparation for implementing the first version of the commander mode
+ Lots of tweaks and fixes to observer mode, as the bots where using it when they died (they basically pound their buttons all the time) and it showed me where some problems were.  See the "no observer targets"?  That was them.

Internals and details
+ Added "defect from squad" option to soldier menu
+ Different "got resources" messages for soldiers, leaders, and commanders
+ Added client sided prediction for welder (should've checked this in earlier, oops)
+ Precache snark for testing (not necessary tho)
+ Fixed up some respawning/points issues, fixed up observer mode 
+ Commented out debug message when a missing EXPORT is detected.  This was causing lots of error messages when using the bots, not sure why but everything still works fine (has something to do with the .dll spoofing of the bots)
+ Various changes to get bots working...this one is a bit scary but it seems to work and botman seems to know what he's doing.  It's on the end of the struct so I think it goes unused...
+ Removed tons of duplicate files that the HPB_bot was using, now it's using the my modified HL headers
+ Added just enough hooks to get bots spawning in and choosing teams
+ Added utility function to see how many clips a current weapon could use
+ Completely reworked command structure
+ Removed SetRole console command


Tag: None
Sunday, 5/27/01 5:18pm
Features
+ Added player hierarchy that shows locations of relevant players.  Draws animated icons depending on whether players are talking, firing, can see an enemy, or are in overwatch.
+ Worked to make sure it is network efficient

Internals and details
+ Updated F key keybinds for debugging
+ Added FillRGBAClipped utility function
+ Removed outdated chain of command, added new player hierarchy
+ Commented out SetRole command
+ Added new player state; enemy sighted, in overwatch, is speaking, etc
+ Added support for drawing animated icons on team hierarchy in generic fashion
+ Much more full-featured
+ Feeble attempt to change chain of command text (not sure if it worked, something's definitely wrong here)

Tag: alpha4
Saturday, 6/2/01  1:18pm
Features
+ Top-down mode!  When a player is a commander, he leaves his body and zooms up above the map.  He can use the mouse cursor to pan around, select teammates, and give them orders.
+ When holding the welder, all weldable areas show as translucent
+ Hiearchy can draw whole map and all players for commander view
+ Fixed jetpack effects not firing if you weren't holding a weapon

Internals and details
+ Added selection box component
+ Increased max speed for top-down panning responsiveness
+ Propagate weaponselect field for top-down mode
+ Added cursor binds for scrolling
+ Added bot config files
+ Added new entities for top-down mode: avh_seethrough, avh_viewheight and avh_viewfloor
+ Added utility function: CreatePickingRay
+ Added drawing of selection effects and orders
+ Removed scoreboard, it was causing problems
+ New input changes to make top-down mode work
+ Changed project settings: copy bot config files after build, added order, scrollhandler and marquee component files, new pm files
+ Tell AvHPlayer what move the player is currently making
+ Fade entities for commander
+ Reworked drawing of hierarchy to fix crash bug when querying world during draw
+ Added impulse for commander mouse click in top-down mode
+ New specials for welder view, commander view, glow effect
+ Added code for click selection, lasso selection, giving and taking orders, top-down support
+ Added code for click selection, lasso selection, giving and taking orders, top-down support
+ Perform selection client-side, give immediate feedback, then receive real selection from server when it arrives
+ Overwatch indicator pulses now
+ Various showing and hiding of components depending on mode
+ Fixed a few bugs with getting info about the hierarchy
+ A couple fixes for showing/hiding the mouse cursor when using the pie menu in top down mode
+ Temporarily allow rank changes after game has started, and allow commander no matter how many teammates, for debugging purposes
+ Changed the predicted movement code to live in .cpp files, finally
+ Added ability to always draw text even when label is fading
+ Added Update() function to all components
+ Added FadingImageLevel support in ui.txt
+ Added MarqueeComponent support
+ Added selection effects

New files:
AvHServerUtil.cpp
AvHSelection.cpp
AvHSelection.h
AvHScrollHandler.cpp
AvHScrollHandler.h
AvHOrder.cpp
AvHOrder.h

Tag: alpha4
Monday, 6/11/01  5:48pm
+ Added colored panel for top down view (allows filtered looking view)
+ Added logout button for top down view
+ Added avh_groundfloor for selection

Internals and details
+ More messages, having to do with rank changes
+ Renamed avh_viewfloor entity to avh_glow
+ Added selection event
+ Fixes to reset view angle when leaving commander mode
+ Various top-down tweaks
+ Added drawing of debug graphical effects
+ Moved utilities into more general-purpose area
+ Barney won't drop his gun anymore, causing crashes because I stripped out most HL weapons
+ Renamed avh_viewfloor to avh_glow
+ Fixed problem with loading particle systems from levelname.ps
+ Renamed selection helper
+ Added new entities to bot linkfuncs
+ Added new utilities functions for picking units
+ Added ColoredPanel, ReloadablePanel and the beginning of ButtonChain
+ Added HideComponents
+ Fixed hidden translate components bug
+ Added ability for components to be reloaded on vidinit (needed for sprites)
+ Labels no longer start with "default text"
+ Fixed up top down movement
+ Tried to get client-side selection prediction working but it's not quite there
+ More entities, new constants, new selection event
+ Handler for UI while in commander mode
+ Team hierarchy reloads properly after a map change
+ Team hierarchy draws squad's hierarchy for soldiers
+ Team hierarchy: other fixes
+ Fixed overwatch firing for you when another player enters/leaves overwatch
+ Fixed cut and paste typos for weapon constants
+ Added functions to draw debugging circles easily
+ Added selection event 
+ Changed hard-coded chat commands to constants
+ Removed AvHSelection, now it's in AvHSelectionHelper
+ Bug fixes for defecting soldiers
+ Refactoring
+ Heavy MG can be bought again
+ Removed order giving for now
+ Enemy sighted works better now
+ Changed selection to use selection helper
+ Cleaned up StartTopDownMode
+ Wrote StopTopDownMode
+ Renamed SelectUnits to SetSelect
+ Refactored AvHHud
+ Fixed problem where leaving commander mode caused angles to be screwed up
+ The right UI components are now shown as roles change
+ Selection effects cleared after leaving top down mode
+ Selection is predicted, but is currently #ifdefed out because it selects everything right now
+ Made top-down camera a lot less bouncy, still not great though
+ Don't allow selection of spectators (!)
+ Bad looking lines
+ Being able to exit commander mode (now fix dead cam when leaving)
+ Having matches end safely
+ Selecting something that is already selected causes effect to be cleared locally and not resent
+ Pie menu doesn't come up after restarting map (variables in AvHHud::Init?)
+ Bots cause immediate crashing
+ Pie menu and maybe other HUD elements disappear after map switch
+ Overwatch activates when in top-down mode
+ Team hierarchy not updating/drawing as soldier
+ Team hierarchy not drawning anything in soldier mode
+ Overwatch is drawn even when not in overwatch
+ Can't move when game starts
+ Make team hierarchy show up when first becoming a soldier
+ Test out enemy sighted functionality
+ Draw selection effects at feet

Tag: none
Thursday, 6/14/01  2:13pm
New features
+ Added tech tree!  Each team has a tech tree with nodes that can be open, closed or researched.  The tech tree is reset at the end of each match.
+ Reworked upgrades to be efficient and forward thinking.
+ Now the commander can see all upgrades on screen and can choose to research different nodes.  Hovering over each tech will show an explanation for what that tech does.  Open techs are clear, closed techs are red, researched techs are green.  All players get notified of a research in progress, and are told what the technology does.  All tech research is cheat-proof and localized correctly.
+ Cleaned up weapon dropping to use real weapon models and amount of ammo left.  Cleaned up weapon HUD so it is much more accurate (don't draw ammo when not holding a weapon, don't draw expendable weapons when out of ammo, etc.)
+ Lots of little bug fixes including: round resets better now (doesn't crash, chain of command reset right, spawn back in ready room), promotion/demotion works better, jetpack works when not holding a weapon, etc.

Internals and details
+ util.cpp, cl_util.h: Improved localization function to work with STL strings and to add a # if needed
+ input.cpp: Sending of tech research events
+ cl_dll.dsp: Added new files
+ hl_weapons.cpp: Fixed bug where jetpack effects weren't firing if you weren't holding a weapon
+ hl_weapons.cpp: Changes to use new upgrade system
+ hl_baseentity.cpp: Changed string to be const
+ weapons.cpp: Unhide weapons HUD when picking up a weapon
+ tripmine.cpp: Fixed bug where tripmine would sometimes explode when touching the world
+ player.cpp: Keep HUD up to date when dropping a weapon
+ hl.dsp: New files: AvHSpecials.cpp, AvHTechNodes.h, AvHTechNodes.cpp
+ ggrenade.cpp: Doubled grenade damage, added experimental "bullet cam"
+ game.cpp: Added mp_bulletcam variable
+ client.cpp: Moved iuser4 into iuser3
+ cbase.h, cbase.cpp: Changed string parameter to be const
+ pm_shared.cpp: Moved iuser4 into iuser3, removed alien movement abilities temporarily, migrated to new upgrade system
+ UIManager.h : Always at least set output component to NULL for good measure
+ UIHud.h, UIHud.cpp: Misc vidinit fix, change StopMusic() to public to music can be reset at the end of the match
+ New files: AvHSpecials.cpp: Utility functions dealing with upgrades
+ New files: AvHTechButtons.h, AvHTechButtons.cpp: UI component for drawing tech tree in commander mode
+ New files: AvHTechNodes.h, AvHTechNodes.cpp: Representation for team tech tree 
+ AvHUIFactory.cpp: Support for new component "TechButtons"
+ AvHTitles.h: New constant for title
+ AvHTeam.h, AvHTeam.cpp: Team now manages tech tree, cleaner resetting at the end of match
+ AvHSquad.h, AvHSquad.cpp: Cleaner resetting at the end of match
+ AvHSpecials.h, AvHSpecials.cpp: Reworked entity constants, integrated iuser3 and iuser4, added tech tree contants, added tech tree utility functions
+ AvHScrollHandler.cpp: Compute screen coordinates of marquee selection correctly
+ AvHPlayer.h, AvHPlayer.cpp: Removed superfluous topdown functions, removed old armor system, added new tech tree support, cleaner and simpler weapon dropping, added tech researching, removed old pie-nodes-changing-cost stuff, weapon HUD fixes, resetting game fixes
+ AvHParticleSystemEntity.cpp: Moved iuser4 into iuser3, removed alien movement abilities temporarily, migrated to new upgrade system
+ AvHMessageID.h: New tech tree constants, removed old placeholders
+ AvHMarineEquipment.h, AvHMarineEquipment.cpp: After using the last mine, it now disappears from your HUD correctly
+ AvHCommanderModeHandler.h, AvHCommanderModeeHandler.cpp: Watch for tech nodes pressed, send up to server
+ AvHConstants.h: Removed old tech constants, added new
+ AvHEvents.cpp, AvHEntities.cpp: Moved iuser4 into iuser3
+ AvHHud.h, AvHHud.cpp: Added new researching, removed old armor system, moved iuser4 into iuser3, cleaner localization
+ AvHGamerules.h, AvHGamerules.cpp: Moved tech tree into team, removed old armor system, removed givearmor cheat (this should go back in)
+ delta.lst: Increased resolution of iuser4 for upgrades, add fuser2
+ ui.txt: Added research UI components
+ titles.txt: Added localized pop-up help text for all upgrades, also localized tech category names
+ resolution-dependent layout text files: Made font sizes and types look better in all resolutions, add scheme for tech nodes

Tag: none
Monday, 6/18/01  1:56pm
New features
+ Weapon and armor upgrades are now in and functional
+ Weapon effects now take upgrade level into account (every weapon plays a different attack sound for each upgrade level.  Muzzle flash only happens when weapon is upgraded past level 0, view "shake" is affected by upgrade level (the higher the upgrade, the more the view shakes when firing), the heavy machine gun emits smoke only when upgraded, firing is louder and can be heard farther away with each level of upgrade, lots more)
+ Added research progress status bar that displays when researching tech
+ Turrets now use weapon upgrades, turret firing plays different sounds depending on upgrade level, only muzzleflash when upgraded, turrets get strengthened by armor upgrades
+ Mines, turrets, resource nodes, completed weld jobs and players are all strengthed through armor upgrades
+ New console commands: giveupgrade #, removeupgrade #, botleader

Internals and details
- cl_dll.dsp: Not sure what changed here, it looks like the whole file?
- enginecallback.h, eiface.h, AvHMarineWeapons.h: Minor #include change to allow testbed to compile
- client.cpp: When weld jobs are done, don't draw in special alpha mode (indicating that they are weldable)
- hl.dsp: Added player upgrade files
- tripmine.cpp, player.cpp, ggrenade.cpp: Tripmines, players and grenades now take into account armor and upgrade level when taking damage
- New files: AvHPlayerUpgrade.h/.cpp: Central place where armor and weapon upgrades are taken into account
- AvHWelder.cpp, AvHSonicGun.cpp: Weapon upgrades are taken into account when doing damage
- AvHTitles.h: New titles
- AvHPlayer.h/.cpp: Refactoring upgrade code
- AvHBasePlayer.h/.cpp: Changed includes for testbed, weapons use weapon upgrade level to do more damage
- AvHBasePlayerWeaponConstants.h: Standardized weapon constants, there are now four sounds for every weapon, tweaked punch values, changed ROF for MG and HMG
- AvHSpecials.h/.cpp: Refactoring
- AvHServerUtil.h/.cpp: Added utility function for account for effects of armor generally (used by all weapons, players)
- AvHMachineGun.cpp, AvHGrenadeGunc.cpp, AvHNukeGun.cpp: Weapons have four sounds now, one for base level, then a new firing sound for each level of upgrade
- AvHEvents.cpp: Weapon effects now take upgrade level into account
- AvHEntities.h/.cpp: Resource entities can now be armored (in Worldcraft), weld jobs now can be strengthened through armor upgrades
- AvHConstants.h: New console commands: giveupgrade #, removeupgrade #, botleader, added research progress status bar that displays when researching tech
- AvHGamerules.h/.cpp: New console commands: giveupgrade #, removeupgrade #, botleader, added research progress status bar that displays when researching tech, refactoring for upgrades, remove check for num commanders temporarily
- AvHHud.h/AvHHud.cpp: Audio/visual feedback for research, added mouse-over help text
- AvHMessage.h: Added turret command back in
- AvHMarineEquipment.h/.cpp: Changed hard-coded strings to constants, turrets now use weapon upgrades, turret firing plays different sounds depending on upgrade level, only muzzleflash when upgraded, turrets get strengthened by armor upgrades
- AvHMarineEquipmentConstants.h: New constants for turrets 
- AvHOrder.h: Added #include guards
- AvHTeam.h/.cpp: Minor refactoring in preparation to fix rank demotion bug
- AvHTechButtons.cpp: Draw cost of upgrade on each tech button, localize category properly
- UIHud.cpp: Fixed bug where music wasn't starting again after the round ends and restarts
- New files: STLUtil.h/.cpp: string functions and home for STL functions
- util.dsp: Added STLUtil.h/.cpp
- ui.txt, resolution config files: Make researching look nicer (too bad it doesn't yet)
- titles.txt: Make researching look nicer (too bad it doesn't yet)
- avh.fgd: Added "maxarmor" field to resource nodes
- avh.ps: Added particle smoke for full upgraded heavy machine gun


Tag: none
Friday, 6/22/01  8:50pm
New features
- Added animated sprite cursor support for context-sensitivity in top-down mode.  Unfortunately, they draw below UI components, can there's nothing I can do about it, so this was probably wasted work.
- Cleaned up all sound effects, in preparation for getting a Sound Guy.  There are proper placeholder sounds everywhere, ready to be replaced and tested.
- Added scripting language called LUA.  I'm testing this out for being able to script victory conditions, dedicated server customization, etc.  Hello world is all that works right now, type "lua hello.bin" at the console with cheats on to see it work.  There is now a LUA bytecode compiler in the root directory that will build .lua scripts for use with NS.
- Added high-quality .mp3 support through Worldcraft.  Load up the "soundtest" map and press the buttons and prepare to be wowed.
- Added particle system editing tool.  Type "editps <psname>" at the console, you'll get a message indicating whether it found it or not.  Then hit F4.  Tweak away!  This is so satisfying I wish we could work it into the game somehow...?
- Added UI slider support
- Lasso selection and basic order-giving is now working perfectly and is nicely predicted on the client.  This had to be reworked quite a bit but it's good now.  Now you can only give orders to proper locations, ie, you can't tell a marine to move to the top of a bookshelf, or outside the world.

Internals and details
tri.cpp: Changed circles to glow
input.cpp: Music on by default for Crin
cl_util.h: Include change for testbed
cl_dll.dsp, hl.dsp: Added .fgd and liblist.gam to custom build, new files
hl_weapons.cpp, weapons.cpp: Removed old select event
avh.fgd: Added special sound entity
liblist.gam: Cleaned up and updated game description
ui.txt: Added particle editing controls
titles.txt: Added new titles for particle editing
config.cfg: Bound F4 to edit particles
800_textscheme.txt: Tweaks
client.cpp: Fixed sound caching bug, propagate team to client
world.cpp: Fixed weird bug where particle templates weren't being downloaded correctly on a map change (not sure why this is so wrong but it is)
util.h: Made ENTINDEX macro const correct
tripmine.cpp: Replaced hard-coded strings with nice constants as part of SoundGuy preparation
linkfunc.cpp: Pass through for new entity
util.dsp, MathUtil.h, MathUtil.cpp: Fixed major problems with lasso selection
UIHud.h, UIHud.cpp: New cleaner sound support for special sound effects through Worldcraft
UITags.h, UIManager.*, UIFactory.cpp, UIComponents.*: Added slider support
main.cpp, testbed.dsp: Added new testbed support, I hope I use it more, it could really help
pm_shared.h, pm_shared.cpp, pm_debug.h: Removed PM_GetEntity support, it's totally broken, must fix this soon
New files: AvHAmbientSound.*: High-quality .mp3 playback through worldcraft, kick-ass!
New files: AvHParticleEditorHandler.*
AvHSoundListManager.*: Small bug fixes
AvHBasePlayerWeaponConstants.h: Cleaned up all sound effects, in preparation for getting a Sound Guy.  There are proper placeholder sounds everywhere, ready to be replaced and tested.
AvHConstants.h: New components, new console commands, lots more
AvHOrder.*, AvHSelectionHelper.*, AvHSharedUtil.*, AvHSpecials.h: Lasso selection and basic order-giving is now working perfectly and is nicely predicted on the client.  This had to be reworked quite a bit but it's good now.  Now you can only give orders to proper locations, ie, you can't tell a marine to move to the top of a bookshelf, or outside the world.
All weapon files: Added virtual utility function for getting the point at the end of the weapon's barrel, used to emit effects
AvHWelder.cpp: Fixed heinous welder bug where the progress bar status being saved in the player, not the target..it was working too ?!
AvHTitles.h: Particle editing constants
AvHTechButtons.cpp: Pulled tags out into constants, fixed tech buttons bigger than they look bug, tech cost draws properly
AvHEntities.*, AvHEvents.cpp: Pulled tags out into constants, fixed heinous welder bug, pulled out last hard-coded sound effects into constants for Sound Guy
AvHGamerules.cpp: Added basic LUA support, added "editps" console command
AvHHud.*: Added animated sprite cursor support but disabled it, added editps functionality, added ambient .mp3s, updated selection effects
AvHMarineEquipmentConstants.h, AvHMarineEquipment.cpp: Cleaned up all sound effects, in preparation for getting a Sound Guy
AvHPlayer.*: Propagate team with role down to client, ability to force SendMessage() even cheats are on, selection effects, overwatch fix after dropping a weapon, particle template propagation fix
AvHPieMenuHandler.cpp: Pulled out last hard-coded sound effects into constants for Sound Guy
AvHParticleSystem.*, AvHParticleSystemManager.*: Refactoring to edit particle systems in real time
StratHL.dsw: Added LUA to workspace


Tag: none
Friday, 6/29/01  6:42pm
New features
+ Super-enhanced top-down mode:  Reworked interface to be like a standard RTS, like Starcraft.  Modular array of tech buttons
with sub-menus, enhanced tool-tips showing the cost and pre-requisites for technologies, polished marquee selection, added a
mini-map (zero-lag no matter your ping), fixed bouncy camera, added hotkeys for all buttons and actions, researched technologies
now disappear and allowed buildings are enabled (ala Starcraft).
+ Added first version of alien wall-jumping and alien flight (Joust-style).  All predicted, so they are zero-lag as well.
+ Finally got player model switching right.  Now when you switch roles (soldier/leader/commander/alien#), your player model changes as well.
+ Added avh_mapextents entity.  This entity defines the boundaries of the map so the mini-map doesn't allow scrolling off into lala-land.
+ Added rest of useful attributes to in-game particle editing: render mode, generation shape/parms, velocity shape/parms, beginning of vortex effect
+ Fire map triggers when game starts or ends (untested)

Internals and details
cl_dll/util.cpp: Don't localize empty strings
input.cpp: Mini-map support
cl_dlls.dsp: New files
hl_weapons.cpp, weapons.cpp: Added wall-jump and flight events
client.cpp: Precache wall jump and flight sounds, player models
hl.dsp: Copy topdown.cfg as part of custom build
New files: "Game names.txt", Checkin.txt, Bugs.txt
linkfunc.cpp: Added avh_mapextents
bot_start.cpp: All bots try to be squad leader
New files: StaticLabel.h, ReloadableComponent.h (was ReloadablePanel.h), LabelButton.h, InvisiblePanel.h/.cpp
StaticLabel.h: A label that doesn't resize depending on its text, in order to draw in the special non-additive way that labels seem to
ColoredPanel.*: New constructor, draws as gradient now
InvisiblePanel.*: Just like it sounds
MarqueeComponent.cpp: Simplified drawing to use vguiSimpleBox
ReloadableComponent.h: Now an interface, not from Panel
UIFactor.cpp: Added support for InvisiblePanel and StaticLabel
UIComponents.h/.cpp: Added support for InvisiblePanel and StaticLabel, localized all label text
Removed: ReloadablePanel.h: Replaced with ReloadableComponent.h
UIUtil.*: Added utility function that I no longer need right now: UIKeyCodeToChar()
UIManager.cpp: Replaced ReloadablePanel with ReloadableComponent
pm_shared.*: Added PM_PlaybackEvent() doesn't quite work yet though, support for map extents, flight and wall jumping, fixed camera bounciness, added mini-map support
PS Docs.htm: Added .html docs in case the author's web site drops off the face of the planet
New files: AvHScrollPanel.*, AvHLogoutComponent.*: Added this component in name only because vgui doesn't support components with names
AvHHotKey.*: Files for all the events and keybind stuff associated with hotkeys in top-down mode
AvHActionButtons.*: New UI component that handles tech tree and nested button controls
LineDrawer.*: Added utility function for drawing non-overlapping lines in a box
AvHTechNodes.*, AvHPlayer.*: Reworked tech tree so it's much more general and simpler
AvHPlayer.*: Added support for player models, revised tech tree in a big way, fixed bug where "spawn sound not precached" (problem with SetPlayMode and the ready room), send map extents down when switching to top-down mode
AvHUIFactory.cpp: Removed AvHTechButtons and added AvHActionButtons, added ScrollPanel and LogoutComponent
AvHTeamHierarchy.*: Added mini-map and view window support to control
AvHTeam.*: Greatly simplified code with new simpler tech nodes
AvHSpecials.*, AvHPlayerUpgrade.cpp: Renamed upgrade constants for the last time
AvHScrollHandler.*: Usability tweaks: Don't scroll when marquee selecting, scrolling via ScrollPanel instead of ColoredPanel
AvHParticleTemplate.*, AvHParticleSystem.*, AvHParticleEditorHandler.*: Added rest of useful attributes to in-game particle editing: render mode, generation shape/parms, velocity shape/parms, beginning of vortex effect
AvHMessage.h: Removed outdated tech constants, added menu choices, code yellow, code red, etc.
AvHMarineEquipmentConstants.h: Added wingflap and walljump sounds (probably should create a new file for this?)
AvHHud.*: Map extents, top-down hotkey support, new top-down UI components, new ActionButtons support, support for researchable and non-researchable tech
AvHGamerules.*: Map extents, new simplified tech nodes, new ClientUserInfoChanged during work to get player models working (is this needed?), fire map triggers when game starts or ends (untested)
AvHEvents.cpp: Removed particle line for player waypoints, added walljump and flapwings events
AvHEntities.*: New avh_mapextents entity, AvHWeldable upgrades updates uses new tech tree constants
AvHConstants.h: Minimap support, player models, new top-down UI controls, hotkey config files, new particle editing controls
AvHCommanderModeHandler.*: Minimap support, new action buttons support, hotkey support, usability tweaks
ui.txt: Changes for new top-down ui, more particle editing, scheme changes
New file: topdown.cfg: Needed to rebind keys when entering top-down mode
titles.txt: Tons of new titles for tech and stuff
bot.cfg: Removed useless bot settings
avh.fgd: Added vortex checkbox for avh_customparticles, added avh_mapextents
textschemes.txt: Tweaks for new topdown UI
checkin.txt, AvH TODO.txt: Regular update



Tag: none
Tuesday, 7/10/01  8:42am
New features
+ Added concept of reinforcements.  Now lives must be purchased ahead of time by the commander, and the total number is visible at all times to all marines.  When a player dies, he respawns back in the game if there is at least one reinforcement left.  So if the commander bought two reinforcements, the next two marines that die will be able to come back.  This idea fixes a lot of problems: 1) it means that if a team has careless players, the team points are automatically used to pay to bring back these people 2) the marines by default are more precious 3) the marine team can bulk up and rush by choosing to buy reinforcements instead of tech or weapons, enabling them to play very aggressively 4) this also gives the commander more urgency (long skill curve) as he will want to buy reinforcements only when needed, so he'll want to watch battles and be ready to pay for them if it looks like he needs them (stressing micro)
+ Added ability to place buildings!  From the commander mode, just press build->turret and it draws the turret at your mouse cursor, showing where it would go if you clicked.  It draws red or green depending if the location is valid and looks pretty cool.  Works for turrets, siege turrets, phase gates and camera towers.
+ Added siege turrets, phase gates and camera towers!  Siege turrets do massive damage at long range but only fire every 5 seconds or so, and they have a minimum range so they can't hit targets close to them.  They also do splash damage so they'll break nearby glass and be effective on groups of aliens.  Nasty, and so cool in first-person.  The phase gate is linked to another phase gate and allows instant travel between them.  It makes a cool sound, flashes your view hot white and fades it back, and leaves a cool fading particle cluster where your body entered.  Soon this will work for equipment too, so you could drop a weapon in one side and have it pop out the other.  Camera towers give resources to the marines.  They don't do anything flashy right now, not sure if these are going to fit in.
+ Useables!  In looking for more things for the commander to do and to make micromanagement important for him, I stumbled across a cool idea I've always wanted in a game.  In cyberpunk, there's the recurring theme of the hacker who hacks into a compound just as his team of baddies bust in the front door.  The hacker disables the room cameras and security systems and watches out for the team actually inside.  I was watching a bot walking around and he walked over to a light switch and turned it on, letting me (as the commander) see that area much more easily.  I thought, wouldn't it be SO cool if I could just click that light switch with my mouse?  The commander is "jacked in" anyways, so it's perfectly conceivable that he have access to all electronics.  It still means the commander isn't killing aliens but he can facilitate and control the environment for his troops.  Imagine how cool it would be to have him tell a squad to move to the end of a darkened hall, just as they get there, the elevator doors open and the elevator is arriving to meet them.  Or he could close doors to prevent aliens from coming in a certain way.  So now your mouse cursor changes to a hand whenever you're over something that can be used, just left-click and it activates it.
+ Fixed some nasty bugs, jetpack crashing when tapping it quickly, map switching causing crash or the wrong particle systems being generated
+ Updated sound library with new version, removes some hitching that happened when loading .mp3s

Internals and details
tri.cpp, input.cpp: Added building placement
ev_hldm.cpp: Added cheezy particle trail to shotgun pellets
world.cpp: Fixed nasty map switch bug that was corrupting game rules (also fixed related particle initialization problems)
weapons.cpp: Precache new buildings, building events, removed snark, weaponbox
New file: turretconst.h: Pulled out common turret constants for overriding turrets (siege turret)
turret.h, turret.cpp: Made turret more override-friendly and generic for deployed turret and siege turret (now they can have different sounds)
tripmine.cpp, testbed/main.cpp: Renamed CalculateDamageLessArmor() to be consistent
player.h/player.cpp: PackDeadPlayerItems() now virtual so a weaponbox isn't dropped for AvHPlayers
ggrenade.cpp: mp_bulletcam is now a constant
gamerules.h: Made destructor virtual, changed InstallGameRules() to be a bit more generic
game.cpp, AvHServerVariables.h: Added new multiplayer variables (mp_testing, mp_camtowerhealth, mp_siegehealth), organized
client.cpp: Tried to change weldable look (didn't work), no longer set play mode before spawning, read deathmatch setting from variable (?), added effects for USEABLE entities
linkfunc.cpp: Added three new entities
UIHud.cpp: Change to support updated FMOD
UIManager.cpp: Default cursor is now arrow instead of hand
pm_shared.cpp: Save predicted player origin so we can use that wherever possible, especially when playing back events
AvHTechNodes.cpp: Bug fix, set researchable to false
AvHTeam.*: Added concept of reinforcements for a team
AvHSpecials.h: Added new constants for useable, upcoming visibility
AvHSharedUtil.*: Lots of utility functions for placing buildings identically on server and client
AvHServerUtil.*: Mostly building-related server utils
AvHPlayer.*: Reinforcements support, override PackDeadPlayerItems to drop weapon instead of weaponbox, place building support, crash fixes (NULL team), refactored HandleTopDownInput() to be cleaner and for USEABLE and buliding support, reset top down mode when resetting player
AvHParticleTemplate.*: Allow fetching particle systems by name, not by index
AvHParticleSystemManager.*: Allow creation of particle systems at a location (for phase gate, useful elsewhere)
AvHParticleEditorHandler.cpp: Move hierarchy components out of the way when editing systems
New file: AvHParticleConstants.h: Named particle systems used by the game
AvHOrder.*: Added new order: ORDERTYPEL_USE (shows hand where you can toggle lights and stuff), allow toggling of useables
AvHMessage.h: Added BUY_REINFORCEMENTS
AvHMarineEquipmentConstants.h: Lots of new constants for phase gates, siege turrets, camera tower, changed welder barrel length (still incorrect)
AvHMarineEquipment.*: Added siege turret, camera tower, phase gate.  Made turrets more generic, changed to call more shared functions
AvHHud.*: Reinforcements support, building placement (ghosted buildings), started to add range drawing support but didn't finish because not useful, simplified context cursors, use predicted position for hierarchy
AvHGamerules.*: Removed death message ("so and so <AKed> so and so"), cleaned up game rules installing and world initialization, reduced costs for most all weapons, added set team console command, reinforcement support, mark all useables appropriately, fixed divide by zero when defecting, take camera towers into effect when giving teams incremental resources
AvHEvents.*: Use predicted origin wherever possible (for jetpack light and elsewhere), added new building events (phase gate effect, getting hit by siege, your view change when getting hit by siege), shotgun shoots buckshot now, create all particle systems by name now, fix jetpack crash when tapping quickly, added drawing of range (not needed)
AvHEntities.*: AvHResource can return it's resource contribution (doesn't give points until fully built), fixed up looping sounds (finally)
AvHConstants.h: New constants for building entities and others
AvHCommanderModeHandler.cpp: Reordered buildings to be more like Starcraft 
AvHAmbientSound.cpp: Commented out ASSERT that started firing after updating to new FMOD.  I've checked my values and they look fine...look into this?



Tag: mongo (very near alpha5)
Monday, 8/13/01  12:13pm

Super mongo-mega check-in.

- Finalized all Natural Selection entities.  Renamed all of them so they are no longer avh_ they are the more standard weapon_, func_, item_, etc.  

- Added new info_gameplay entity.  This entity lets maps customize tons of game behavior.  Things a map can control via this entity include:
	- Humans vs. Humans and Aliens vs. Aliens support (!)
	- Ability to change respawn cost, initial number of hives, how often alien resources are given out, how much aliens get from each hive, starting marine points, starting alien points, and lots more!

- Added command stations.  When a marine touches a friendly command station, and if his team doesn't have a commander already, he becomes the commander and immediately goes to the top-down view.  When he logs out, he appears next to the command station.

- Added weapon_ entities for all the marine weapons.  This allows mappers to create interesting scenarios where you don't have to buy all your weapons

- Renamed entities to func_weldable, func_seethrough, func_viewheight, env_gamma, env_particles, env_particles_custom

- Moved overbrightening into a map entity.  Now a map can set the monitor gamma.  The entity is called env_gamma.

- Aliens now spawn at spawn points near an active hive.

- Preliminary work to strip down NS for mapping/technology build.  This will make the game unplayable, but fully functional for mapping.

- Removed func_viewheight.  The commander camera is now always at one height.  This height is set through the info_mapinfo entity.

- Renamed "StratHL" game directory to "ns".  So the game type is now officially "ns"!

- Reworked client-side weapons.  Much cleaner code, it still has problems though.

- Added graphical alien pie menu
	+ Reworked pie menu to allow sprite nodes and connectors

- Added bare-bones team scoreboard (default is the tab key)

- Removed squad leader role.  Now the commander makes all equipment and weapon purchases.  Removed rank menu, concept of promotion and defecting.

- Added first pass of alien weapons.  Added spit gun, ensnare gun, spore cloud and claw attack.

- Added first pass of alien upgrades.  Added speed, armor, regeneration and cloaking.

- Increased rate that tripmines check so fast aliens can't run by without triggering them.

- Added knife weapon for all marines.  Can you say, Counter-strike?  A melee weapon was really needed so when you run out of ammo AND points, you can still conceivably win.

- Lots of changes and fixes for round resetting, pre-game warm-up, ready room.
	+ Add periodic message indicating that game won't start until both teams have players
	+ Update victory conditions to end whenever either team has no non-commander players with points and ability to respawn
	+ Remove outdated console commands, move couple hard-coded ones into constants
	+ Play victory or loss sound when the game ends, depending whether your team won or lost

- Hives now "scream" in many different ways when they take damage.  They also make a satisfying sound when they are killed.

- Camera towers are fully functional now.

- Added basic commander visibility.  The commander can't see hives or aliens that his teammates can't see.  As soon as a teammate can see an alien or hive, the commander is able to see it.  This will be extended to draw blips as well.  This will also be basis of the alien's unified hive mind.

- First pass at marine weapon "feel" effects.  Smoke puffs where bullets hit, tweaked view punching.

- Ripped out broken weapon models and put in basic Half-life models.  Fixed reload, draw, holster, fire animations so they're much better, but not perfect yet.

- Reload all sprites on a map change (pie menu, elsewhere)

- Added "you're under attack" messages.  When a building your team owns, or a teammate gets hurt, you get a message that says "your base is under attack" (different sounds for each side).  The commander can hit space to jump immediately to the site of the alert.

- Added to alien UI.  Now there is an egg in the upper right corner of the screen showing that you can respawn.  If you don't have enough points to respawn, it shows the egg with an X through it.  Also added an animated hive in the upper left, one for each hive you have online.  Thanks JayDog!

- Fixed nasty bug where quitting the game while in topdown mode messed up all your keys

- Added "need order" and "acknowledged" as special commands so they blink red and can affect waypoints (but don't yet)

- Added player's name to message that is sent to commander when a player kills an enemy: "Squeal like a Pig earned points for killing an enemy!"

- Added "this weapon can't be dropped" message

- Changed mod info to direct players to http://www.natural-selection.org 

- Added nice assert that lets you report a bug automatically.  When the assert pops up, it shows as much of the stack trace as it can, lets you type in your own comment, then you can hit a button to e-mail a bug report to bugs@overmind.org.  This isn't fully implemented yet, but it's close.

- Fixed bug where hitting escape while in top-down mode when back to the Half-life menu, now it cancels whatever action you're doing instead.

- Reworked how target_mp3s are propagated.  Now if you join a game after they have started playing, they will start playing for you too.  There's still one problem where they don't start playing approximately where they are on everyone else's machine but it's close.  Their position now gets transmitted, so we can have moving ambient sounds!

- Added nicer weapon feedback.  The machine gun, shotgun and heavy machine gun have much better feel, leaving smoke puffs on the wall where bullets hit.

- Added teleport particle effect (blue-white particles that freeze and fade), siege blast effect where it hits, also smack your view when you get hit with siege

- Disable weapons before game starts so people don't shoot each other in the ready room

- Added different levels of pain and wounding sounds for all marines and each alien lifeform.  

- Commander uses the nearest marine for audio.  This way he can't "fly" over a hive area and listen in on what the aliens are doing and predict where hives are.

- Allow particle systems to be rotated. This allows particle systems to be created so "up" is really the normal of something, so you can make a system spatter off a wall (there's a teensy bug in this right now)

- Added "listps" command to see the names of all particle systems on the current level

- Particle system entities now work correctly when a player joins the game late

- Added new artwork for shell (stolen from Blue shift and edited).  It seems more professional now.

- Rebuilt cvs repository for local use

Internals and details

General: Emit fatal warning on assignment within conditional

ui.txt: Removed rank commands, lots of tweaks
topdown.cfg: Removed this hack
titles.txt: Added localized strings for scoreboard, made role help more succinct, added "need order" and "acknowledged", added player's name to commander's "enemy killed" message, command station messages
server.cfg: Changed default settings
liblist.gam: Changed mod info to direct players to http://www.natural-selection.org 
delta.lst: Weapon ids are sent across using 6 bits instead of 5, iuser4, fuser1 and fuser2 are now 32-bits
copybuild.bat: Updated to use new ns instead of strathl directory (also fixed bug in script)
config.cfg: Various default useability tweaks
avh.fgd, ns.fgd, avh.ps, ns.ps: Removed old, added new, lots of changes to ns.fgd including new entities and renaming of almost all entities
cl_dll.dsp: Added new weapons, changed custom build to use new "ns" directory, removed AvHHotkey.*

Client changes:
	ammo.cpp: Fixed bug where hitting escape while in top-down mode when back to the Half-life menu, now it cancels whatever action you're doing instead.
	cdll_int.cpp: Renamed "StratHL" game directory to "ns"
	entity.cpp: Reworked how target_mp3s are propagated.  Now if you join a game after they have started playing, they will start playing for you too.  There's still one problem where they don't start playing approximately where they are on everyone else's machine but it's close.  Also, don't simulate temp entities when we're paused.
	ev_hldm.cpp: Added nicer weapon feedback.  The machine gun, shotgun and heavy machine gun have much better feel, leaving smoke puffs on the wall where bullets hit.
	input.cpp: Un-hacked hotkeys in the overhead view so they work properly now, also added team scoreboard
	tri.cpp: Added support for drawing blips
	hl_events.cpp: Split weapon constants into marine and alien files
	hl_weapons.cpp: Predict knife, spit gun, ensnare, claws and and spores, added teleport effect, siege hit effect, siege view hit effect

Server changes:
	client.cpp: Commander uses the nearest marine for audio.  New commander visibility.  New target_mp3 audio propagation.
	combat.cpp: Award a kill to an entity's owner, if possible.  This should make sure mines and turrets and flying projectile entities award kills properly.
	doors.cpp: Don't assert if door starting and ending positions are equal.  I treat ASSERTs as fatal.	
	game.cpp: Removed old server variables, now this stuff is all controlled by a info_gameplay in the map
	multiplay_gamerules.cpp, squeakgrenade.cpp, talkmonster.cpp: Allow assignment within conditional in Valve code
	player.cpp: Aliens now spawn at spawn points near an active hive.  Don't send network message immediately when removing all items, allow top level player to do it (not sure if this is totally right)
	tripmine.cpp: Tripmine checks 20 times a second now to make sure fast aliens can walk through it without tripping it
	weapons.cpp: Precache all alien upgrade events, new alien weapons, knife
	hl.dsp: Added new weapons, changed custom build to use new "ns" directory

Bot changes:
	bot_start.cpp: Bots don't try to promote themselves anymore (because we don't have promotion)
	dll.cpp: Try to allow adding bots when running via dedicated server (not working though)
	h_export.cpp, util.cpp: Change game directory to ns.
	linkfunc.cpp: Removed old entities, added all new ones.
	HPB_bot.dsp: Changed custom build to copy to the "ns" directory

Particles changes:
	particles.dsp: Build options changed (not sure why, not looking into it right now)

Mod changes:
	pm_shared.cpp: New way of using map extents (view height), fixed bug where the movement code wasn't detecting when alien upgrades were purchased, fixed bug where you could jump straight up even in mid-air, don't allow commander mode to scroll before the game starts.
	AvHActionButtons.cpp: Optimization: Now fills a rectangle to draw grid lines, instead of a line
	AvHAmbientSound.*: Ambient sounds can now move, updated mod directory, removed ASSERT because something changed in new version of fmod, so FSOUND_STREAMs aren't internally the same after being copied (?)
	AvHBasePlayerWeapon.*: Cleaned up prediction big-time.  Weapons can now generically specify whether they fire under water, whether they are droppable, and their idle and reload anims
	AvHBasePlayerWeaponConstants.h: Moved constants into new file
	AvHCommanderModeHandler.*: Fixed bug where mouse up on the logout button (usually after a drag select) logged you out.  Added equipment menu, removed research buildings menu.
	AvHEntities.*: Removed, renamed, reworked and improved many entities
	AvHConstants.h: Tweaking constants, removing old entities, adding new entities, new HUD sounds, new sayings
	AvHEvents.*: New alien weapon events, new alien upgrade events, knife event, blip drawing, fixed some weapon animations, welder event fixes
	AvHFlamegun.cpp, AvHSonicGun.cpp, AvHHeavyMachineGun.cpp, AvHMachineGun.cpp, AvHGrenadeGun.cpp, AvHNukeGun.cpp: Only allowed for marine players, changed slot/position, precache wallpuff
	AvHWelder.cpp: Changed slot/position, don't mark the wielder of the welder in any special way
	AvHTitles.h: Messages for game draw, command station, weapon dropping, game starting
	AvHTeamHierarchy.*: Added new blinking effects for "need order" and "acknowledged", added mini-map (which doesn't work right), new map extents
	AvHTeam.*: Teams now decide whether they've lost or not, commented out soldier/squad code, spawn hives periodically, inject resources for both sides (hives and camera towers), handle team resources
	AvHSpecials.*: Commander visibility, sound propagation, alien upgrades
	AvHSoundListManager.cpp: Changed mod name to use constant
	AvHSharedUtil.*: Added AvHSUTraceVerticalTangibleEntities, support for placing equipment from commander mode
	AvHServerVariables.h: Removed outdated server variables
	AvHServerUtil.*: Added hive utility functions.  Ability to drop equipment from commander mode.
	AvHPlayerUpgrade.*: Added utility function: GetMaxHealth(upgrade, role)
	AvHPlayerHierarchy.*: Added support for "need order" and "acknowledged" commands
	AvHPlayer.*: Support for visible blips, removed defection, removed old morale code, added special PAS origin, alien upgrade support, alien UI code, changed reset game to game status (message), added "listps" command, better weapon dropping, new equipment buying, no more squad leader, lots of utility functions
	AvHPieMenuHandler.cpp: Allow pie menu for alien roles
	AvHParticleSystemManager.*, AvHParticleSystemEntity.*, AvHParticleSystem.*, AvHParticleEditorHandler.cpp: Particle systems can have normals, particle systems get propagated correctly in multiplayer, particle editing hides alien pie menu
	AvHParticleConstants.h: Added new particle system constants for alien weapons
	AvHMessage.h: Order request, order ack, equipment menu, alien lifeforms, alien upgrades
	AvHMarineWeapons.h: Allowing weapons for roles, fixed weapon animations
	AvHMarineWeaponConstants.h: Entity name changes, new sounds, hive assets
	AvHMarineEquipment.*: Removed outdated AvHTurret, deployed turret and camera tower generate alert when damaged, solidity and movetype tweaks
	AvHHud.*: Added visible blips, animated sprites (for hive display), removed outdated GetTextHeader(), removed old gamma code, added alert, new map extents, removed old morale, particle and ambient sound fixes, alien UI, tracking game started state, fixed top-down hotkey, disable weapons before game start, new HUD sounds, view model effects for cloaking, reload sprites on map/video-mode change, pass upgrade costs to alien pie menu
	AvHGamerules.*: Map gamma support, removed player rank, alert support, new map extents, alien hive spawning, team resources, moved resource injection into team, blinking game-won't-start message, moved console commands into AvHConsoleCommand.cpp, alien lifeform and upgrade costs, updated point awarding on kill, reset hives on game reset, fire target on map reset, read lots of settings from info_gameplay, team visibility
	AvHAssert.cpp: Phase 1 of new assert

docs:
	AvH TODO.txt, Bugs.txt, Checkin.txt, ForPlaytest.txt, Map making guidelines.htm: Periodic update

ui changes:
	UIUtil.*: New utility function
	UIHud.*: Visible blips reset their sprites when video mode changes or on a map switch, PlaySong can now start playing partway through a song
	FadingImageLabel.*: Can now fade in a sprite, or a filled color.  Reloads sprites correctly on video mode change or map switch.
	PieNode.*, PieMenu.*: PieMenus can now have sprite connectors, that are drawn and clipped correctly between pie nodes

util changes:
	nowarnings.h: Added detection of tons of new warnings
	MathUtil.*: Added new utility functions (not fully working yet)
	Util.dsp: New files, change of project options that I can't remember

textrep changes:
	textrep.dsp: Mysterious project settings change

testbed changes:
	main.cpp: Commented out most of testbed because other changed caused it to be near impossible to compile (stupid Valve)
	testbed.dsp: New files to test Zassert.  Mysterious project settings change.

New files:
 - AvHMarineWeaponConstants.h:
 - AvHAlienWeaponConstants.h:
 - AvHAlienWeapons.h: 
 - AvHClaws.cpp:
 - AvHConsoleCommands.cpp:
 - AvHEnsnare.cpp:
 - AvHKnife.cpp:
 - AvHMarineWeaponConstants.h:
 - AvHSprites.h:
 - AvHVisibleBlip.*: 
 - StackTrace.*, Zassert.*, ZassertTemplate.cpp, zassert.readme.txt: New files for better asserts and bug-reporting (including stack trace)

 Removed files:
 - AvHHotkey.*: No longer needed


Tag: Alpha6
Monday, 8/21/01  12:07pm

Features and bug-fixes:
	- All marine prediction issues are fixed.  They all feel like there is no lag, all the animation and event problems have been fixed.  Your clip is also predicted
	- Camera towers, turrets and command stations are fully fixed and functional
	- Phase gates teleport players to other phase gates, or back to their respawn if there aren't any other phase gates
	- The alien UI shows the number of hives you have, your current lifeform, whether you can respawn and all your purchased upgrades.  Thanks JayDog!
	- Grenade launcher fire impact grenades now
	- Specator mode works better, not perfect yet though
	- Three new alien weapons: level 1 has a little bite, level four has a nasty slash attack, level 2 has a spike gun (kind of like a regenerating machine gun)
	- Level 2 also has an ensnare attack that can slow down enemies to half-speed for a few seconds
	- Tons of other tweaks and bug fixes
	- This is the first real playable build!

client:
	ev_hldm.cpp - Only play "bullet hit" effects when hitting something not underwater and not a player (not done yet, but started)
	cl_dll.dsp - Added three new alien weapons: the bite attack (currently level 1), the "swipe" (level 4), and the spike gun (level 2)
	chudmisc.h, ammo.cpp - Added clip prediction
	hl_weapons.cpp - Client-side prediction of weapons totally fixed!  Predict ammo count, only try to reload if we have more ammo, added prediction code for three new alien weapons, added debugging code, removed disabling of weapons temporarily
	ui.txt - Moved resource label, removed invalid options of alien ui menu, added labels for debugging weapon prediction
	titles.txt - Added message for command station, added all of Jason's new sprites to the alien pie menu
	config.cfg - Added music by default, removed old gamma toggling

server:
	client.cpp - Allow weapon giving cheat, added code to debug weapon prediction, started to fix observing commander
	ggrenade.cpp - Grenades now explode on contact, grenades use the right damage constant
	hl.dsp - Added glock for testing, added three new alien weapons, added new iteminfo file
	observer.cpp - Relaxed rules for spectating other team members, started to add spectating of commander (not done yet)
	player.cpp - Allow weapons to think before the game starts (oops), much cleaner approach to respawning (let gamerules handle it)
	player.h - virtualized StartObserver so AvHPlayer can override
	tripmine.h, tripmine.cpp - Removed last hard-coded constants, change solidity of mines so players don't get stuck, clean up beams when cleaning up mines between rounds
	weapons.h, weapons.cpp - Added new alien weapons, removed flamer and nuke gun until implemented, removed redundant caching of tripmines, started to add predicted empty sound but stopped
	hl_wpn_glock.cpp - Changes to glock to help understand and debug predicted weapons

shared:
	pm_shared.cpp - Removed wall jumping and weird gravity stuff for now, beginnings of observable commander

game:
	AvHAlienWeaponConstants.h - Constants for three new alien weapons, weaked claw attack from 80 damage to 50
	AvHAlienWeapons.h - Base classes for new alien weapons
	AvHMarineWeapons.h, AvHBasePlayerWeapon.* - Some weapons have muzzle flash now, fixed nasty weapon prediction event playback bug
	AvHBasePlayerWeaponConstants.h - Added three new alien weapon constants, allowed glock to coexist with NS weapons
	AvHEnsnare.cpp - Ensnare gun now halves target speed for a few seconds
	AvHClaws.cpp, AvHGrenadeGun.cpp, AvHSpitGun.cpp, AvHMachineGun.cpp, AvHHeavyMachineGun.cpp, AvHSpores.cpp, AvHNukeGun.cpp, AvHSonicGun.cpp, AvHWelder.cpp, AvHKnife.cpp - Added muzzle flash hooks, moved slot/position code into AvHItemInfo.cpp, tried to increase collision size of spit, changed how bullets fire to get a visible trail for each bullet (not working)
	AvHConstants.h - New alien weapons, added constants for number of upgrades and lifeforms (to draw stuff generically on the HUD), component names for debugging predicted weapons
	AvHEntities.* - Comamnd stations and camera towers can now be killed, hives play random wound sounds when hurt, command stations won't let you log back in for 1.5 seconds after logging out (helps command station hell), command stations stop working when killed, command stations trigger alerts when attacked
	AvHEvents.cpp - Phase gate teleport sound is now predicted, added three new events for new alien weapons, added glock weapons for debugging CSP
	AvHGamerules.* - Cleaned up how players respawn, tweaked some upgrade costs, removed old MG upgrade tech node, reset command stations and mines correctly between rounds, refactored team resource updating
	AvHTeam.* - Moved research into team, cleaned it up.  Cleaned up resource updating, aliens don't lose as soon as all their hives are gone.
	AvHTitles.h - New constant for "command station destroyed" message
	AvHSprites.h - New constants for alien HUD sprites
	AvHTeamHierarchy.cpp - Removed squad leader code for team hierarchy
	AvHPlayer.*: - Added pause for teleporting, added pause for using command station, added ensnaring, better observing, moved research into team, added debug CSP code, tweaking alien speeds, player models fade out on death now, screen fades up from black when starting observer, commander player is drawn (temporary, for spectating commander), added alien UI hooks, only send research messages to players on team
	AvHMessage.h - Removed purchase-alien-spawn message
	AvHHud.* - Added debug CSP code, added new alien UI (hives/upgrades), show resources to soldiers, changed hive animation speed, reload sprites on map change or video mode change
	AvHMarineEquipment.cpp - Lots of tweaks, turrets think properly again (from their solidity and movetype!), phase gates teleport players to other phase gates, camera towers only give resources when built
	AvHMarineEquipmentConstants.h - New command station constants, new deployed mine name
	AvHMarineWeaponConstants.h - Lots of weapon rate of fire and damage tweaks
	
ui:
	FadingImageLabel.cpp, PieNode.cpp - Sprites draw as alpha sprites instead of additively now

hpb_bot:
	bot.cpp - Bots use my tripmine constant instead of hardcoded monster_tripmine
	bot_start.cpp - Bots randomly join a team
	linkfunc.cpp - Added three new alien weapons

misc:
	copydlls.bat, copybuild.bat - Updated with new ns game directory

doc:
	AvH TODO.txt, Bugs.txt, Checkin.txt, ForPlaytest.txt - Perodic updates

New files:
	AvHSwipe.cpp, AvHSpikeGun.cpp, AvHBite.cpp - New alien weapons
	AvHItemInfo.cpp - Put all these functions in one file because they're so dependent on each other



Tag: none
Monday, 8/31/01  6:40pm
- Marine sayings now pick a random saying instead of the same one.  
- Commander HUD: new minimap and commander nice UI
- Egg-laying capability.  The level 2 alien can now spend a couple points to lay an egg.  It makes a squishing sound and it appears on the ground.  Whenever any alien dies, he will respawn at an egg if one exists, even if there are no gives left.  Respawning at an egg destroys the egg.
- Reinforcements can now be bought/used posthumously.  If a reinforcement is purchased and there's a dead player waiting to get into the game, he immediately spawns in!  This includes people that joined the server after the game started.  The person that's been waiting the longest is chosen.
- Gave biting capability to the flying alien (fun!)
- Entering or leaving command mode now does nice fade
- Added some code that will allow the welder to repair different targets and display a progress bar.  Not functional yet.
- Added lots of help text for different actions.  Most of these happen only once so you don't keep seeing the help text you already know about.
	- When you're near an unbuilt turret, you are told to build the turret with your use key
	- When near an enemy hive, you're told "you're near an enemy hive, attack it!"
	- When near a friendly hive, you're told "you're near a friendly hive, it provides you resources...protect it!"
	- When near a command station and your team has no commander, you're told that you're near it and that you can press your use to to become commander
	- When near a phase gate, you're told it's a phase gate and that you can enter it to teleport
	- When near a camera tower, you're told "you're near a camera tower, it gives your team resources"
- Aliens no longer make any sounds while cloaked
- Automatic orders: 
	- Whenever you receive an order, play a sound like "move to waypoint", "deploy turret at waypoint", "attack target", etc.
	- When you complete an order, your player automatically says "order complete" and your order goes away.  The commander hears it too.
- Added network screenshot (hit F12 and everyone in the game will take a screenshot)
- When aliens try to purchase something they already have, it does nothing (used to charge them and buy it again)
- Slowed down marines and aliens around 10%
- Machine gun does more damage (was 8, not 10 dmg per shot), shotgun does less damage (35->27 per pellet), grenade damage increased (125->145)
- Increased health of turret and siege turret, added sounds that play when command station logged into, and logged out of
- Turrets no longer fire at cloaked aliens, siege turrets must see target to fire at it
- Added nice new sprite cursors for pie menu and commander UI
- When ghosting a player while dead, you can now see that player's current orders
- Added commander sayings off the commander HUD (a bit weird, but an experiment)
- Turret, siege turret and mine kills are now credited to the team properly

client:
	tri.cpp: New order drawing
	input.cpp: Added ability to take screenshots from commander mode
	ev_hldm.cpp: Add spark effects for all bullets
	cl_dll.dsp: New files
	hl/hl_weapons.cpp: Added egg layer prediction

dlls:
	weapons.cpp: Cache egg layer and egg
	observer.cpp: Don't allow spectating of enemies anymore, because you could can come back in
	client.cpp: Removed last traces of squad leader.  Moved marine sayings into sound lists.
	hl.dsp: New files

HPB_bot:
	lincfunc.cpp: Added egglayer and egg
	bot_start.cpp: Bots now auto-team

game:
	AvHWelder.cpp: Added some code that will allow the welder to repair different targets and display a progress bar.  Not functional yet.
	AvHTitles.h: Moved hard-coded strings into constants file
	AvHTeamHierarchy.*: Removed slow minimap, replaced with nice sprite-based UI.  Removed last traces of squads and squad leaders
	AvHTeam.*: Removed old squad leader code.  Reworking commander orders.  Now when a player is allowed to respawn, the player that's been waiting the longest will come back.
	AvHSprites.h: Added order and cursor constants
	AvHSpecials.h: Tag marine equipment and buildables
	AvHSoundListManager.cpp: Max number of sound lists is now 200
	AvHPlayerHierarchy.*, AvHPlayerUpgrade.cpp, AvHMachineGun.cpp, AvHSonicGun.cpp, AvHKnife.cpp, AvHHeavyMachineGun.cpp: Removed last trace of squad leader role.
	AvHSharedUtil.*: Return height hit, check for marine buildables, don't add players to hit test, look for marine items, some debug code
	AvHSelectionHelper.cpp: Reworking selection
	AvHPlayer.*: New order giving, removed last trace of squad leaders, added bite gun for level 3, added egg laying, added help text
	AvHParticleEditorHandler.cpp: Removed leader and commander pie menus.  Removed assert.
	AvHOrder.*: Orders can now be completed and automatically go away.  Build orders complete when building is completed, welding orders can be given, etc.
	AvHMarineWeapons.h: Server-side welding
	AvHMarineWeaponConstants.h: Machine gun does more damage (was 8, not 10 dmg per shot), shotgun does less damage (35->27 per pellet), grenade damage increased (125->145)
	AvHMarineEquipmentConstants.h: Increased health of turret and siege turret, added sounds that play when command station logged into, and logged out of
	AvHMarineEquipment.*: Turrets no longer fire at cloaked aliens, siege turrets must see target to fire at it
	AvHItemInfo.cpp: Added egg layer to hud
	AvHHud.*: Sprite cursors, networked screenshot, added special alien cursor, added minimap creation, when spectating a player, draw that players orders, calculate bytes read correctly when receiving strings over the network, added commander sayings
	AvHGameRules.*: Changed costs for many items in commander HUD, remember time game started so we can respawn player that's been waiting the longest, added ability to respawn at eggs, non-player kills are now credited to the right team
	AvHEvents.cpp: Added egg laying event, reworked how orders are drawn
	AvHEntities.*: Abstracted explosion code, command stations now need to be used, not just touched, hive solidity bug fixed, only one commander allowed per team now
	AvHConstants.h: New HUD sounds for orders, new order enum names, removed old order enums, added team_egg entity, new marine sayings
	AvHConsoleCommands.cpp: Bots can no longer go back to the ready room, setteam hack allowed even with cheats off to workaround bug when playtesting, added netscreenshot and buildminimap commands
	AvHCommanderModeHandler.cpp: Remove code_yellow and code_red commands
	AvHBasePlayerWeaponConstants.h, AvHAlienWeapons.h: Added egg layer weapon
	AvHBasePlayerWeapons.*: Mark all weapons as marine items
	AvHAlienWeaponConstants.*: Tweaked spit damage, spike damage and more
	AvHActionButton.cpp: No longer paint background of action buttons, that will be handled by new commander HUD sprite 

doc:
	AvH TODO.txt, Bugs.txt, Checkin.txt: Regular updates

ui:
	UIManager.cpp: Added sprite cursors
	UITags.h: Added basesprite and rendermode tags
	UIFactory.cpp, UIComponents.*: Added SpritePanel and DummyPanel components
	FadingImageLabel.*:  Starting to add support for animation (?)

base:
	config.cfg: added new commands for taking net screenshots, building minimap, etc
	copybuild.bat: don't copy source directory when propagating build
	titles.txt: new help messages
	ui.txt: alien membrane, more commander UI stuff, sprite cursors


New files:
	mod/AvHMiniMap.*: New minimap
	mod/AvHEggLayer.cpp: New egg layer
	mod/AvHAlienEquipmentConstants.h: Added egg laying constants
	ui/SpritePanel.*: New tiled sprite panel for drawing full screen alien egg and commander UI
	ui/DummyPanel.h: New invisible component for correct cursor drawing


Removed files:
	AvHSquad.*: Squads and squad leaders are gone
	AvHMarineWeapons.cpp: No longer needed



Tag: Pre-1108
Wednesday, 9/12/01, 11:22am

Features:
	- Added new height and FOV for each alien
	- The commander can click on the useable target (elevator, door) instead of only the button/switch itself
	- Added slightly customizable minimap shading according to height
	- Reworked minimap completely, now it generates a sprite for each resolution and automatically uses those
	- Minimap is scaled correctly, centered, and draws blips in the right place (used to be distorted, assumed that maps were square)
	- Added new better assert mechanism, which allows bugs to be automatically e-mailed to me
	- Lots of tweaks and bug fixes for fonts

cl_dll:
	vgui_SchemeManager.cpp: Slightly better error checking

dlls:
	client.cpp: Added zassert dialog on sys_error
	hl.dsp: Added new minimap files

HPB_bot: 
	bot_start.cpp: Bots autoassign
	linkfunc.cpp: Added egg and egglayer hooks

mod:
	AvHAssert.cpp: Added zassert
	AvHMiniMap.*, AvHConsoleCommands.cpp: Reworked minimap entirely
	AvHConstants.h: Added constants for commander HUD sprites
	AvHEntities.*: Added min view height to map info
	AvHGamerules.*: Added min view height to map info, reworked mini-map, mark targets of useables as useable as well
	AvHHud.*: Added min view height to map info, reworked mini-map, removed some old dead code, hid some components for movie making, don't draw mouse cursor for move order
	AvHLogoutComponent.*: Added reading of class properties (oops)
	AvHOrder.cpp: Toggle all useables with the same target when any of them are clicked
	AvHTeamHierarchy.*: Add hooks for drawing blips according to health status, draw minimaps correctly for different aspect-ratios, assuming map is centered, only draw alive players
	AvHSharedUtil.h: Added some #includes that are now evidently necessary
	AvHPlayer.*: Add support code for min view height, now have different FOV and height for different roles

pm_shared:
	pm_shared.cpp: Added min view height to map info

ui:
	SpritePanel.cpp: Bug fix when drawing sprites
	UIComponents.cpp: Read scheme font for labels
	UIUtil.*: Added UIBlendColor utility function

util:
	util.dsp, Zassert.*, ZassertTemplate.cpp: Integrated Zassert into NS, allow the window to pop up and shut down HL properly

base:
	1024_textscheme.txt, 800_textscheme.txt, ui.txt, titles.txt - Font tweaks, ui tweaks to make UI look great for gameplay movie
	ns.fgd - Added minheight for minimap shading


Tag: Post-1108
Thursday, 9/13/01, 6:25pm

Features:
	- Updated Natural Selection with new Half-life 1108 patch in preparation for voice support and spectator mode

Tons and tons of files (almost all of them)


Tag: Post NSTR
Monday, 10/22/01, 2:02pm
Features:
	- Created the NSTR, a stripped down version of NS
	- Added first hooks for dramatic events for HLTV
	- Maps now reset correctly (doors, breakables, etc.)
	- Sprite panels (commander HUD) now compensates for gamma change correctly
	- Added trigger_random
	- Added voice support

cl_dll:
	hl/hl_weapons.cpp - Removed new 1108 client side HL weapons (I need these user variables for my own NS purposes)
	hl/hl_baseentity.cpp - Needed to add this function for some reason
	vgui_TeamFortressViewport.cpp - Changes to make scoreboard work in commander mode
	chudmisc.h, message.cpp - No idea why MessageRemove() was added
	input.cpp - Added "gotoalert" command (oops)
	entity.cpp - Filter audio or waypoint entities from rendering (shouldn't matter but plaguebearer complaining that func_waypoints increase r_speeds), refactored heinous HUD_TempEntUpdate
	cl_dll.dsp - Added support for new target dir (NSTR), added SliderPlus, moved LineDrawer into utility file

dlls:
	weapons.cpp - Don't precache certain weapons and items in the NSTR
	tripmine.cpp - Added dramatic events for mines
	player.h - Made GiveNamedItem virtual (so weapons aren't given in the NSTR)
	player.cpp - No longer precache grunt, commented out HL-specific cheats
	multiplay_gamerules.cpp - Moved HL voice out of here into AvHGamerules
	hl.dsp - Added support for new target dir (NSTR), added voice helper
	func_break.* - Added support to reset breakables
	doors.* - Added support for resetable doors, preliminary support for new fadeable doors, added door definition to doors.h
	client.cpp - Commented out assert dialog to get back good HL error dialog (ie, "tfc2.wad couldn't be loaded"), proper particle system culling, hooks for new fadeable doors, allow lag compenstation, precache sounds differently for NSTR
	cbase.h - Allow all entities to be reset
	bmodels.cpp - Moved CFuncWall definition into cfuncwall.h

doc:
	checkin.txt, bugs.txt, AVH Todo.txt - Regular updates

engine:
	anorms.h - This looks like it was updated with 1108 but I forget to check it in

HPB_bot:
	linkfunc.cpp - Renamed shotgun for consistency, added trigger_random (oops)
	HPB_bot.dsp - Added support for new target dir (NSTR)
	h_export.cpp - Removed support for other mods, debugging code

mod:
	AvHTitles.h - Message saying you must join a team to edit particles
	AvHTechButtons.cpp, AvHActionButtons.cpp - Moved util line drawing code 
	AvHTeamHierarchy.cpp, AvHSelectionHelper.cpp, AvHOrder.cpp, AvHMiniMap.cpp - Changed "groundfloor" to "waypoint"
	AvHSharedUtil.* - Changed "groundfloor" to "waypoint", added debugging code to find weird turret placement but on ns_spacestation 
	AvHSpecials.h - Added enum for proper particle culling, renamed some enums
	AvHServerUtil.* - Don't do damage or build structures in NSTR, new fadeable code
	AvHPlayer.* - Fixed bug where too many network messages (removed old messages), added dramatic event on player death, added IsSpectator utility functions for dramatic events, help text only appears when facing entity, new way to propagate particle templates
	AvHPieMenuHandler.cpp - Removed pie menu for NSTR
	AvHParticleTemplateServer.* - Getting templates is now case-insensitive, reworked sending of templates
	AvHParticleTemplateClient.cpp - Count bytes received for strings properly, 
	AvHParticleTemplate.* - Removed old bounding radius, now we use real culling
	AvHParticleSystemManager.*, AvHParticleSystemEntity.*, AvHParticleSystem.* - Reworked and refactored particle systems for culling and better positional updating, fixed particles upside-down bug, added culling
	AvHParticleEditorHandler.* - Fixed bugs when moving sliders, added debug code for tracking down slider engine bug
	AvHMarineEquipmentConstants.h - Renamed construction sounds to not have "SCV" in them
	AvHHud.* - Removed outdated network messages and hooks, draw special sprite for NSTR, started to add player ID system, reset gamma when game starts, PS culling changes, notification of gamma change
	AvHGamerules.* - Added dramatic event hooks, particle system changes, reset entities, added voice helper and manager
	AvHEvents.cpp - Removed scatter on bullets (?), debug code
	AvHEntities.* - Added trigger_random, renamed "groundfloor" to "waypoint", added support for resetable entities, renamed mp3 entity, added TriggerBroken() to weldables, use null model instead of welder model, new targets for hive
	AvHConstants.h - Removed ancient classnames, added support for new build directory, renamed entities, removed old entities
	AvHConsoleCommands.cpp, AvHCommanderModeHandler.cpp, AvHBasePlayerWeapon.cpp - Remove stuff for NSTR

pm_shared:
	pm_shared.cpp - Don't allow ducking or footsteps when in commander mode, removed commander "freeze" before game starts
	pm_debug.h - Debug code


ui:
	UIUtil.* - Added draw line functions (from old LineDrawer.*)
	UITags.h - New tags to align SpritePanels
	UIManager.* - Cleaner notification of gamma change so any component can compensate
	UIFactory.cpp, UIComponents.* - Added support for SliderPlus and Slider2 (trying to fix broken sliders)
	SpritePanel.* - Now aligns correctly for all resolutions, compensates for gamma
	PieNode.*, PieMenu.* - Changed concept of color bias to use more generic GammaAware
	MarqueeComponent.cpp, FadingImageLabel.cpp - Moved util code

util:
	STLUtil.* - Added lowercase string utility function
	ZAssert.cpp - Touched up assert text

base:
	ui.txt - Fixed up sprites in commander HUD so they are aligned correctly in all resolutions, changed to new sliders
	localassert.h - Compilation changes
	types.h - Added min/max macros, added mapper build define
	titles.txt - Changed wording in ready room to allow entrances instead of doors, aligned particle editing messages so they can be seen while console is open, added "VOICE" for 1108
	ns.fgd - Added new commander alpha to func_doors (allow fade for commander and invisible from ground), commented out HL weapons, removed outdated env_particles, modified weldable targets, removed func_seethrough, removed team_breach, changed weapon_welder to item_welder, changed weapon_mines to weapon_mine
	delta.lst - Added commas, not sure if this is necessary
	config.cfg - Reworked and cleaned up config for NSTR
	400_textscheme.txt - Make low-res look better font-wise

new files:
	cfuncwall.h, doors.h - Added these so they could be inherited from
	AvHVoiceHelper.* - Added voice support
	AvHDramaticPriority.h - Settings and constants for HLTV
	SliderPlus.* - Possible alternate slider to fix engine slider issues
	GammaAwareComponent.h - Interface to react to gamma changes


Tag: Alien work
Monday, 10/30/01, 8:49pm
Features:
	- Alien wall-running!
	- Alien adrenaline!
	- Level 1 leap ability
	- First version of hand grenades
	- Added energy bar to marine jetpacks (ala Tribes)
	- Alien flight has been improved slightly but still needs more work
	- Added backup pistol for marines, functions just like glock from CS
	- New alien weapon ordering (new weapons "unlocked" as new hives are born)
	- New marine weapon ordering (mimic CS because it was annoying trying to relearn)
	- ns_seethrough backwards-compatibility fix
	- Added gestation!  You're encased in a pod and see a progress bar when you upgrade lifeforms
	- Added most code to support different sized players (different "hulls" for aliens and marines)
	- Added new footsteps for aliens, including big heavy footsteps for the level 5 (variable speed too)
	- Added deploy sounds to most weapons
	- Added new step size for different aliens, so big aliens can step over big things without jumping

base:
	ui.txt - Added jetpack energy and gestation ui changes
	server.cfg - Changes for running NSTR test server
	titles.txt - Gestation and jetpack titles
	ns.fgd - seethrough backwards-compatibility
	motd.txt - Updated ancient MOTD
	delta.lst - Added fuser3

cl_dll:
	hl/hl_weapons.cpp - Added hand grenade, pistol, leap, new jetpack code
	ammohistory.h - Allow 10 weapon positions now
	cdll_int.cpp - Added custom NS hulls
	cl_dll.dsp - Added new files
	input.cpp - Alien ability support

dlls:
	ggrenade.cpp - Timed grenades no longer explode on touch
	func_break.cpp - Fixed bug ("SOLID_BSP without MOVETYPE_PUSH")
	player.cpp - Fixed bug where the correct damage level wasn't being returned (caused pain/wound sounds not to play)
	player.h - Added GetAdrenalineFactor()
	hl.dsp - Lots of new util files, plus files for hand grenade and pistol
	client.cpp - Adrenaline, player hull and footsteps changes
	weapons.cpp - Wall jump, flight and leap event changes

doc:
	Checkin.txt - Regular update

HPB_bot:
	linkfunc.cpp - New leap weapon, renamed some entities

New files:
	AvHAlienAbilities.* - 
	AvHAlienAbilityConstants.h - 
	AvHConstantUtil.* - 
	AvHGrenade.cpp - 
	AvHHulls.h - 
	AvHMovementUtil.* - 
	AvHPistol.cpp - 
	AvHSoundConstants.h - 

mod: 
	AvHMarineWeapons.h - New pistol and grenade
	AvHMarineWeaponConstants.h - New pistol and grenade constants
	AvHMarineEquipmentConstants.h - Jetpack, wings
	AvHMachineGun.cpp, AvHHeavyMachineGun.cpp, AvHGrenadeGun.cpp, AvHSonicGun.cpp - Added deploy sound, more ammo by default
	AvHItemInfo.cpp - Reworked item placement
	AvHHud.* - Gestation, adrenaline, alien abilities
	AvHGamerules.cpp - Fixed potential weirdness caused by player quitting and not being reset.  I assumed that players were created new, but they're not.  This may fix the bug where people sometimes can't connect after the server has been up for a bit.
	AvHEvents.cpp - Pistol, grenades, leap and more
	AvHEntities.*, AvHServerUtil.cpp - Backwards compatibility for seethroughs
	AvHConstants.h - Gestation constants, more
	AvHBasePlayerWeapon.* - Added support for weapons that can fire as fast as you can pull the trigger, added concept of adrenaline
	AvHConsoleCommands.cpp - Ability to switch new weapons...is this function being called?
	AvHClaws.cpp, AvHBite.cpp - Claws pump adrenaline, deploy super-fast and vary pitch according to adrenaline
	AvHAlienWeaponConstants.h - Added adrenaline pitch factor for claws
	AvHBasePlayerWeaponConstants.h - New weapons, leap
	AvHPlayer.* - Adrenaline and gestation UI, hulls, jetpack, adrenaline effects, gestation, fixed pain/wound sounds
	AvHMessage.h - New alien abilities
	AvHWelder.cpp - Fixed welder animation
	AvHTitles.h - New gestation titles and messages
	AvHSprites.h - Added adrenaline and jetpack sprites
	AvHSpecials.h - Added UPGRADE_NONE, updated alien abilities
	AvHSpecials.cpp - Removed old alien upgrades
	AvHSharedUtil.* - New utility functions
	AvHPlayerUpgrade.* - Added gestation time

pm_shared:
	pm_shared.cpp - Tons of changes for: wall-running, custom hulls, custom variable-speed footsteps, jetpack energy (and smoother operation), custom step size

ui:
	UIUtil.* - Added utility functions for drawing custom progress bar


Tag: Alien work
Monday, 11/13/01, 11:27am
Features:
	- Added new scoreboard (still got one or two small bugs: player muting doesn't work after joining, wrong team name sometimes displayed)
	- Alien webs!
	- Primal scream!
	- Phasing-in effects when dropping equipment and buildings
	- Fixed network overflow problems when connecting to a server with tons of particle systems
	- Compensate for gamma on cursors, selection marquee and minimap
	- Added working (but pretty ugly) version of hive sight.  Also shows commander alien blips that are near marines but not in sight
	- Waypoints don't draw "behind" you anymore (when in first-person and given an order by commander)
	- First pass for cocooning
	- Overwatch is back in
	- Added "player <eviscerated> player" death messages back in, using team colors
	- Much better alien flight, feels right now
	- Egg-laying works much better, now just waiting for art before tweaking it
	- Current weapon is now holstered when building equipment

cl_dll/hl:
	hl_weapons.cpp - Added primal scream, webspinner and cocoon
	hl_baseentity.cpp - Added max walk speed to player so different roles can have different walks

cl_dll:
	vgui_TeamFortressViewport.*, vgui_ScorePanel.* - Increased max teams, changed team colors (allow aliens vs. aliens and fronts vs. fronts), general scoreboard support
	tri.cpp - Start of marine head-mounted laser lights
	StudioModelRenderer.cpp - Debug code to track down player animation bugs and beginning of marine head-mounted laser lights
	death.cpp - Added "player <eviscerated> player" death messages back in, using team colors
	cl_dll.dsp - New files
	chudmisc.h - Removed constants to separate header so they don't have to be duplicated everywhere

dlls:
	weapons.cpp - New events for phasing in matter and stoping the primal scream
	tripmine.cpp - Mines now use correct animation extension
	teamplay_gamerules.h - Use new header for constants instead of duplication
	teamplay_gamerules.cpp - Various changes for scoreboard, also don't show "person joined x team" when they join, changes for proper localization
	player.* - Added debug code to catch missing animations, added GetMaxWalkSpeed()
	plats.cpp - Pulled class definition out of .cpp into header so other code knows about them
	observer.cpp - Spectators are on the spectator team, not the no-team
	multiplay_gamerules.cpp - Use GetMaxWalkSpeed() for emitting footsteps
	hl.dsp - Added new alien weapons, removed outdated visible blip stuff
	game.cpp - Set default team list (though it seems to be reset for some reason)
	doors.cpp - Removed ASSERT that was firing when doors were reset outside their knowledge, should be OK
	client.cpp - Renamed commander vis enum

doc:
	checkin.txt, AvH TODO.txt - Regular updates

HPB_bot:
	util.cpp - Bots now obey player max speed for footsteps instead of hard-coded value
	linkfunc.cpp - New entities
	bot.h - Bots use include instead of hard-coding
	HPB_bot.dsp - Added linking to util.lib and define DEBUG, added AvHAssert.cpp

mod:
	AvHBasePlayerWeapon.cpp, AvHAlienWeapons.h, AvHAlienAbilities.*, Every weapon - Removed GetAllowedForRole() now that commanders are gone and aliens never drop their weapons.  Weapons can never be used by commanders, gestating aliens or cocooned players.
	AvHTitles.h - New titles for team and cocoon
	AvHTeamHiearchy.* - Minimap is now gamma-aware
	AvHTeam.* - Removed old visible blips, added new team names
	AvHSprite.h - Added sprite constants for hive mind and marine blips
	AvHSpecials.h - Overwatch is now treated like a temporary upgrade, renamed a few constants for consistency
	AvHServerUtil.* - Added new phase-in effect when dropping equipment or buildings, added utility function
	AvHPlayerUpgrade.cpp - Added cocooning support (largely treated like gestation)
	AvHPlayer.* - Added primal scream, added TeamID() for scoreboard, made the process of looking like an egg generic (cocoon and gestate use it), re-enabled overwatch (but not for bots), when a player is killed while cocooned, he doesn't die, he's back to his old self!  Reworked how sound names are propagated.
	AvHPieMenuControl.* - Query pie-menu control so it can be disabled and re-enabled (for scoreboard)
	AvHParticleConstants.h - New system for phase-in effect
	AvHMovementUtil.cpp - Level 1 can duck again
	AvHMarineWeaponConstants.h, AvHMarineEquipmentConstants.h, AvHMarineEquipment.h - Proper animation extensions
	AvHMarineEquipment.cpp - Turrets shoot at all monsters on the other team, not all entities on the other team, try to fix turret solidity, holster weapon when building turret
	AvHItemInfo.cpp - New weapons
	AvHHud.* - Reworked blips and hive sight, added concept of cocooning, started to add drawing of health of players, fixed up map extents to not assume the hud has been initialized when message sent, don't draw waypoints when behind the player, mouse cursors are gamma-aware, 
	AvHGamerules.* - Gamerules now inherit from TEAMPLAY, not MULTIPLAY, remove webs when map changes, player killed messages, new code to make sure team names are right when team types are the same (for the scoreboard), TriggerAlert caused crash when we were cheating by fighting in the ready room, new visibility
	AvHEvents.* - New marine head-laser lights (kinda), new alien events, new phase-in event, blip drawing
	AvHEntities.* - Eggs are now animating, hives tagged as monster, eggs fall and animate better, added webs
	AvHEggLayer.cpp - Eggs can't be placed in small areas anymore
	AvHDramaticPriority.h - Cocooning priority is really high
	AvHConstantUtil.* - Role to upgrade mask function used for aliens and marines now
	AvHConstants.h - Added teams, cocoon role, webs, new alien weapons
	AvHBasePlayerWeaponConstants.h - New alien weapon constants
	AvHAlienWeaponConstants.h, AvHAlienEquipmentConstants.h - New constants for cocoon, webs, scream

pm_shared.cpp:
	pm_shared.cpp - Added wall-running for level 2 alien, some refactoring, use player maxspeed, enum renaming, wall-running no longer slows you like crouching does, tweaked flight model, tried to fix click-bounce in top-down mode

ui:
	UIHud.* - Playing a song now initializes the sound system if it isn't intialized already, removed old visible blips stuff
	MarqueeComponent.* - Marquee is now gamma-aware

base:
	1024_textscheme.txt - Added new font styles for scoreboard
	config.cfg - Changed default keys a bit to be more standard
	ns.ps - Added particle system for phase-in effect
	titles.txt - Titles for scoreboard and cocooning
	ui.txt - Various ui tweaks

New files:
	mod: AvHWebSpinner.cpp, AvHPrimalScream.cpp, AvHCocoon.cpp - New alien weapons
	AvHVisibleBlipList.* - New alien hive sight
	gameshared/teamconst.h - New include to avoid duplication of constants elsewhere (scoreboard)
	dlls/plats.h - Needed to detect doors for web-placement

Removed files:
	mod/AvHVisibleBlip.* - Outdated hive sight


Tag: Mod expo build
Tuesday, 12/4/01, 1:51pm
Features:

  - Better egg-laying
  - New heavy machine gun model
  - New hive model
  - New alien pie menu artwork
  - Webs don't catch teammates
  - Soldier animations fixed up (including new "final" player animation system for Josh B.)
  - Disabled hive sight
  - Fixed some spectating bugs
  - Added alien sayings
  - Level 1 alien uses small hull, and displays much better
  - Progress bar for building all structures
  - Alien sounds for pie menu and weapon/ability selection
  - Removed grenade (for demo purposes)
  - Removed message when becoming commander (for demo purposes)
  - Added mp_demoing (for demo purposes)
  - Undid small stepsizses for smaller aliens
  - Fixed overwatch/cloaking in readyroom or while in wrong role
  - Added egg model for gestation
  - Gamma-aware alien pie menu
  - Moved alien HUD elements down so player death announcements are visible
  - Removed alien HUD display of adrenaline and resources (for demo purposes)
  - Fixed some problems when placing buildings on sloped surfaces
  - Soldier aim and fire blending anims ares now consistent
  - Added drop physics to camera tower
  - Bots can now use all marine weapons and some alien weapons correctly
  - Bots now taunt and ask for orders
  - Bots parse SetOrder, SetRole, WeaponPickup, AmmoX, AmmoPickup, WeaponPickup and ItemPickup messages
  - Fixed some bugs with the equipment weight (also, equipment that is "stowed" weighs a bit less then when it's "held")
  - Fixed "gotoalert" so it's not a separate keybind, it uses "jump"
  - Added nice selection circle instead of old solid green
  - Added "commander awarded points" event
  - Removed func_waypoint, added func_nowaypoint
  - Added ability to create particle systems on model events (7000, 7010, 7020, 7030)
  - Mine weapon is now a AvHBasePlayerWeapon
  - Fix of weird sound popping when game starts
  - Team join entities are no longer visible
  - Hives can no longer be kicked around, eggs now animate and can fall, eggs make screaming sound when destroyed, webs brightened
  - Slow down player when damaged, play correct hurt sounds
  - Much Much More

base:
	ui.txt - Added alien sayings, various tweaks
	titles.txt - Tweaking
	ns.ps - Added particle system for doing melee damage, not being used currently because it looks bad
	ns.fgd - Removed func_waypoint, added func_nowaypoint
	motd.txt - Updated
	config.cfg - Updates for expo
	bot_names.txt - Added new bot names from people in the forums and mod community

cl_dll:
	hl/hl_weapons.cpp - Added "commander points awarded" event
	tri.cpp - Added new selection circle
	StudioModelRenderer.cpp - New "final" player animation system, hooks for marine head lasers
	input.cpp - Allow adding bots from top down mode, along with new "goto alert" system
	entity.cpp - New particle system events 
	ammo.cpp - Different weapon select sounds for each side
	cl_dll.dsp - Project changes for some reason

dedicated:
	dedicated.dsp - Changed build options to build dedicated server on local system (probably a bad idea to change this)

dlls:
	weapons.* - Mine weapon is now a AvHBasePlayerWeapon, added "commander points awarded event"
	util.h - MESSAGE_BEGIN now emits text to the log when testing (to track down overflow bug)
	turret.cpp - Fixed turret deploy when AI touches it bug
	tripmine.cpp - Tripmine is now an AvHBasePlayerWeapon
	teamplay_gamerules.cpp - Doesn't assume team and model are linked (for scoreboard I believe)
	player.cpp - Changes to allow different weapon selection sounds for each side
	observer.cpp - Tweaks for observers
	game.cpp - Added mp_demoing
	hl.dsp - New build options for some reason
	enginecallback.h - Debugging code to help find overflow bug
	client.cpp - Precache alien sayings, and new alien select weapon sounds.  Things that fade away for commander are now marked SOLID_NOT and EF_NODRAW

doc: 
	Checkin.txt, AvHTODO.txt - Regular updates

HPB_bot:
	util.cpp - Return team for NS
	linkfunc.cpp - Removed func_waypoint, added func_nowaypoint
	engine.cpp, bot_client.* - Bots parse SetOrder, SetRole, WeaponPickup, AmmoX, AmmoPickup, WeaponPickup and ItemPickup messages
	dll.cpp - Default bot skill is now 4 instead of 2
	bot_start.cpp - Refactored playmode
	bot_navigate.cpp - Lame flight imitation for flier, stop following when the target crouches
	bot_combat.cpp - Added NS weapons for bots, taunt after a kill 20% of the time, search for all non-cloaked enemy targets
	bot.* - Basic voice command support, alien morphing (removed because it was causing random crashing)

mod:
	AvHAlienEquipmentConstants.h - Web tweaks
	AvHAmbientSound.* - Fixed sound popping when game starts
	AvHBasePlayerWeapon.cpp - Hack: aliens can't pick up weapons
	AvHBasePlayerWeaponConstants.h - Added weapon size and constants
	AvHBite.cpp - Now only slash weapons can hurt webs
	AvHClaws.cpp - Weapon hit feedback now done client-side
	AvHConstants.h - Removed func_waypoint, added func_nowaypoint, alien sayings, alien sound effects, new alien lifeform cost constants
	AvHEntities.* - Team join entities are no longer visible, seethroughs now ignore their seethrough parameter, changed waypoint to nowaypoint, hive is now a CBaseAnimating, hives can no longer be kicked around, eggs now animate and can fall, eggs make screaming sound when destroyed, webs brightened
	AvHEvents.* - New selection circle, commander points received event, play alien melee attack feedback client-side, step #2 of marine eye beams, cleaned up overwatch mode and cloaking state
	AvHGamerules.* - Added GetIsDemoing(), upgrade costs are now stored in the gamerules instead of the player, remove webs and eggs on level cleanup, fixed up and tweaked weight system
	AvHHud.* - Cleaned up overwatch mode and cloaking state, added GetIsAlien(), added generic progress indicator, fixed up goto alert, added "use" order sound effect, hid some of the uglier components for demo purposes (adrenaline, resources when not commander), moved some of the alien UI down so we could see death messages, fixed bug where you could be cloaked after leaving the game or switching teams
	AvHMarineEquipment.* - Tripmine is now an AvHBasePlayerWeapon, turrets build properly with progress indicator, turrets are now solid sometimes (always?), moved building sizes into constants, all buildings are droppable now
	AvHMarineEquipmentConstants.h - Building sizes
	AvHMessage.h - Added COMMANDER_SCROLL
	AvHMiniMap.cpp, AvHOrder.cpp, AvHSharedUtil.* - Updated to use new waypoint system
	AvHMovementUtil.cpp - Level 1 alien is always small
	AvHSelectionHelper.* - Removed old code
	AvHServerUtil.* - Updated to use new waypoint system, added custom sound names for each team type
	AvHTitles.h - "Attack nearby commander station" message
	AvHTeamHierarchy.cpp - Tried uselessly to color blips by health..it's just not being propagated
	AvHSpecials.h - New alien cloaking representation, removed waypoint, added nowaypoint
	AvHServerVariables.h - Added mp_demoing
	AvHPieMenuHandler.cpp - Added alien pie menu sounds
	AvHParticleConstants.h - Added new melee feedback particle system
	AvHPlayer.* - Removed GetEffectiveTeam(), moved upgrade costs out of player into gamerules, added generic progress bar, fixed player weight calculation, spectators move faster, fixed bug where your wasn't used correctly when displaying messages about your immediate environment, when hatching from eggs, appear a bit higher than it, don't display message to commander when becoming commander, slow down player when damaged, play correct hurt sounds

pm_shared:
	pm_shared.cpp - Fixes for bouncing commander view (!), fixes for shaky commander view (!), changed stepsize

ui:
	UIPieMenu.cpp - Set root node color and font appropriately
	UIHud.cpp - Removed an ASSERT that could fire occasionally when alt-tabbing away while the game is starting, don't init music here (to fix sound popping when game starts)
	PieNode.* - Cleaned up clipping for connectors (still not quite right), pie menu is now gamma-aware, removed hard-coded color scheme 
	PieMenu.cpp - Removed hard-coded color scheme
	MarqueeComponent.cpp - Marquee is now gamma-aware

util:
	STLUtil.* - Streamlined syntax of LowerCaseString()

New files:
	ctripmine.h 


Tag: PC Gamer build
Monday, 12/31/01, 1:51pm
Features:
	- Added new building-oriented tech tree.  Most of it is currently disabled for PC Gamer due to lack of art.
	- Tons of new help text for many different situations (alien weapons, alien abilities, hacking, building, etc.)
	- Updated particle system code to use new field names (to avoid occasional "token name too long" error when compiling)
	- Added new trigger_presence entity
	- Updated .FGD with PS entity field names, removed outdated entities and fields
	- Updated materials.txt from mapping forum goers
	- Added build times and resource costs for all buildings and tech to skill.cfg for easier balancing and tweaking without changing code
	- Better feedback for marine weapons
	- Added first pass at look-at-player-and-see-his-name-and-friend/enemy-status (player ID)
	- Added many settings to the GUI (auto-help, center player id, tournament/casual mode, music enabled, music volume, etc.)
	- Voice tweaks (allow while commanding, only talk to selected when commanding, observers can hear other observers and visible players, spectators can hear other spectators and visible players)
	- Propagate commander mouse movement to the server (allows auto-help messages when hovering mouse over something, also needed for record/playback support)
	- Much better hull support (but hull 4 still doesn't activate touch for some reason)
	- Radius damage is now gamerules-aware (friendly fire works more properly in general)
	- Ducking works nearly perfectly now, for marines and every alien type (the view sinks a bit too much still though)
	- Wall-crawling while falling now slows you to a stop instead of stopping instantly
	- Allow bunny-hopping for aliens with speed upgrade
	- Welder works better, and can now repair damaged buildings (shows progress bar)
	- I _think_ I fixed the occasional "player overflowed" error when players join a server
	- Minimaps are now generated as centered, and the minimap scale is now right
	- Hives no longer spawn in if they are blocked by a player.  They wait until the area is free, then spawn.
	- Slowed down all players
	- Mark particle system for deletion when turned off, don't delete it immediately (fixes bug where all particles are deleted immediately)
	- Added "animation speed" field for entity.  Don't crash or ASSERT if sprite couldn't be loaded, just don't draw.
	- HMGs have slower ROF then MGs, do more damage though, tweaked view shaking
	- Order-giving works better (esp. noticeable at marine start on ns_bast)
	- Animated phase gate
	- Phase gates now work round-robin instead of random
	- Fixed target_mp3 bug where the wrong sounds were being played
	- Eggs are now cleaned up when the next game starts
	- All fired targets fire USE_TOGGLE instead of USE_ON or USE_OFF

base:
	ui.txt - Modified for new research system
	titles.txt - Many new help messages
	StratHL.dsw - Added ZHLT projects
	materials.txt - Updated to use ns.wad
	listenserver.cfg, server.cfg - Removed old junk, updated
	config.cfg - Changes for PCG
	ns.fgd - Removed leave game entity, updated alpha flags for seethroughs and doors, added trigger_presence, removed marine weapon entities, changed particle system field names, changed func_nowaypoint to func_nobuild
	ns.ps - Added particle system for phase gates, changed all particle system field names
	bot_names.txt - Fixed spelling error for Autolycus


cl_dll:
	hl/hl_weapons.cpp - Removed TFC/HL weapons code that stores and propagates weapon settings differently
	chudmisc.h, message.cpp - Refactoring and player id code.  Don't display help messages when auto help is off.
	input.cpp - Allow voice while commanding
	ev_hldm.cpp - Better feedback for marine weapons
	entity.cpp - Renamed NOWAYPOINT to NOBUILD
	cl_dll.dsp - Added more files to post-build copy
	cdll_int.cpp - More hull changes

dlls:
	weapons.cpp - Added new tech tree buildings, allow welder in the mapper build
	tripmine.cpp - Ignore monsters when tracing tripmine beam (untested)
	hl.dsp - Added new files to project and to post-build copy
	game.cpp - New server variables for tech build time and cost
	func_break.cpp - Pulled out CPushable definition into separate file
	cbasedoor.h, doors.h, doors.cpp - Removed flags I added that are no longer needed
	combat.cpp - Radius damage is now gamerules-aware.  Also, don't paint decals when not doing damage.
	client.cpp - Visibility tweaks and fixes, seethrough capability for doors, only set size for role every tick

doc:
	Checkin.txt, AvH TODO.txt - Regular updates

HPB_bot:
	dlls/linkfunc.cpp - Renamed some entities, pass through for new marine tech tree buildings
	dlls/bot.cpp - Renamed NO_OP to MESSAGE_NULL

mod:
	AvHWelder.cpp - Welder works better, and can now repair damaged buildings (shows progress bar)
	AvHVoiceHelper.cpp - Voice tweaks (allow while commanding, only talk to selected when commanding, observers can hear other observers and visible players, spectators can hear other spectators and visible players)
	AvHTitles.h - Tons more help text
	AvHTechNodes.* - Reworked the tech tree, allow multiple prerequisite techs
	AvHTeamHierarchy.* - Minimap now works properly
	AvHTeam.* - Upgrades and tech are now tracked per team.  Tech nodes can be deactivated if their pre-requisite buildings cease to exist.
	AvHSpecials.* - Refactored ids.  Entities can have an fuser3 AND be either sighted/non-sighted.  Added fuser4 enum to allow different menus depending what's selected.
	AvHSoundConstants.h - Renamed vent to duct
	AvHSharedUtil.*, AvHServerUtil.* - Reworked for new tech tree system
	AvHPlayer.* - Extensive help system, send particle templates gradually (fixes player overflowed bug), track current mouse position while in commander mode, don't give named items in mapper build, point cost of message IDs now handled by gamerules, new player speeds, tweaked visibility system (treated as a mask), fire special targets when entering/leaving commander mode.
	AvHParticleTemplateServer.cpp - New particle system field names
	AvHParticleSystemManager.* - Mark particle system for deletion when turned off, don't delete it immediately
	AvHParticleSystemEntity.cpp - New particle system field names (still read old names for backwards-compatibility), mark particle system for deletion when turned off, don't delete it immediately, added "animation speed" field for entity
	AvHParticleSystem.cpp - Don't crash if sprite couldn't be loaded, just don't draw
	AvHParticleConstants.h - New particle field name constants, new phase gate idle particle system
	AvHOrder.cpp - Don't offset orders from commander (causing order-giving bug on ns_bast, no longer needed)
	AvHMovementUtil.cpp - Use proper hulls for different players and duck state
	AvHMinimap.cpp - Write out minimap sprites centered
	AvHMessage.h - Lots of reworking, removing old messages, renaming new ones
	AvHMarineWeaponConstants.h - HMGs have slower ROF then MGs, do more damage though, tweaked view shaking
	AvHMarineEquipmentConstants.h - Tons of new equipment constants (esp. for new marine tech buildings and phase gate)
	AvHMarineEquipment.* - Phase gates are now animated and work via round-robin.  Added new marine tech buildings.
	AvHHulls.h - New hull constants
	AvHHud.* - Player ID support, always draw NS sprite, tried to fix gamma-reset-on-crash bug, tech node changes, don't draw alien UI when dead, compensate for mouse hotspot (-1,-1)
	AvHGamerules.* - Better friendly fire support, always allow players to join in casual mode (at least for PCG), cleaned up tech tree (moved into AvHTeam), moved build time and cost into generic skill.cfg, don't mark commander stations as useable by commander, visibility changes
	AvHEvents.cpp - Modified weapon firing punch angle
	AvHEntities.* - Removed leave-game entity, changed seethrough to seethroughdoor, removed dated seethroughwall, added trigger_presence, hives don't spawn in on players, tried to fix solidity with AvHEgg (this is the one bit of code that changed after making the PCG build)
	AvHConstants.h - Updated and removed entities, overwatch takes 6 seconds instead of 4, constants for commander station targets, etc.
	AvHConsoleCommands.cpp - Let gamerules decide whether we can join or not
	AvHCommanderModeHandler.* - Lots of changes to allow multiple menus, depending what's selected
	AvHClientVariables.h - Added cl_autohelp and cl_centerplayerid
	AvHBasePlayerWeapon.cpp - Allow weapons to fire in mapper build (so welder works)
	AvHAlienWeaponConstants.h - Increased level 1 bite damage from 40 to 60
	AvHActionButtons.* - Allow multiple prerequisites, updated to new tech tree
		

pm_shared:
	pm_shared.cpp - Don't play footsteps when ducked (wallcrawling doesn't count as ducking), reworked ducking, tweaked flier gravity, allow bunny-hopping for aliens with speed upgrade, renamed NO_OP to MESSAGE_NULL

ui:
	UIHud.cpp - Fixed bug where music would stop playing after a couple songs
	UIFactory.cpp - Don't create pie menu controls in the mapper build

util:
	Zassert.cpp - Tried e-mailing ASSERTs automatically but that would probably get annoying real quick


New files:
	BuildQC.bat - Added my own buildqc.bat (probably not needed)
	nshulls.txt - New hulls.txt that all maps will be compiled with
	skill.cfg - Contains build times and resource costs for all buildings and tech
	ns.qrk, ns_tex.qrk - New versions of the Quark entity definition files (not adding to CVS because they are binary)
	cpushable.h - Refactored this out
	mod/AvHBuildable.* - New subclass for anything buildable
	mod/AvHHelp.cpp - All player auto-help goes here
	mod/AvHTechID.h - New enum for tech ids


Tag: NSTR2
Wednesday, 1/30/02

Features:
	- Commander Mode, v2.0 (new order-giving/placement code, entity culling for commander, func_illusionary changes, minimap changes, info_mapextents changes)
	- Added zooming for commander mode
	- Tweaked fonts and colors for all resolutions
	- New UI sprite scaling so the same sprites can be used for all resolutions
	- Added env_fog entity
	- Tech tree changes to allow all buildings to research independently (for new building-centric tech tree)
	- Fixed up PAS for commander for sounds and target_mp3s
	- Lots of small changes for the NSTR2 (setculldistance, high-detail only PS, changed startcommandermode to teleport you to commandstation)
	- Experimented with players ferrying resources around
	- New resource towers (they emit particles, added ability to tweak resource towers for efficiency, it shows output change)
	- Experimented with modifying Zoner's tools to add one-way portals
	- Added the concept of custom data for particle systems (allows worldwide modification of particle systems)
	- Added reasonable hive sight (now that sprite scaling works)

base:
	ui.txt, titles.txt, skill.cfg, config.cfg - Regular updates
	ns.ps - Added PS for new resource tower
	ns.fgd - Updates for Commander Mode v2.0 (added env_fog, added new flags to func_illusionary, added team flags to trigger_presence, added "don't draw map background" to info_mapinfo, changed default env_gamma to 2)
	listenserver.cfg - Updated to be the same as server.cfg
	delta.lst - Updated comments
	*textscheme.txt - Update fonts and colors to look decent
	StratHL.dsp - Added hlbsp and hlrad projects to workspace
	types.h - Set #define for mapper build

cl_dll:
	vgui_TeamFortressViewport.cpp - Fixed doubled-cursor problem with scoreboard (only show sprite cursor, not Windows cursor)
	util.cpp - Attempt to make CreatePickingRay more accurate (view bob, punch, etc.)
	StudioModelRenderer.cpp, tri.cpp - Added support for sprite scaling
	input.cpp - One step towards adding keyboard scrolling to commander mode
	cl_dll.dsp - New files
	ammo.cpp - One step towards adding keyboard scrolling to commander mode

common:
	const.h - Added flag to try to make HLCSG support one-way portals

dlls:
	weapons.cpp - Added alien sight events
	player.cpp - Renamed AvHSU to AvHSHU
	hl.dsp - Added files to project
	game.cpp - New tech vars
	client.cpp - New commander culling, precache changes for NSTR2, refactored AddToFullPack(), renamed AVH_USER3_VIS_SPECIAL_COMMANDER, propagate weaponmodel for PS for some reason, 

doc:
	Checkin.txt, AvH TODO.txt - Regular updates

HPB_bot:
	linkfunc.cpp - Added env_fog and func_resource hooks

mod:
	AvHActionButtons.* - Action buttons can be busy, so researching buildings don't draw their buttons when selected
	AvHAlienAbilityConstants.h - Constants for alien sight
	AvHBasePlayerWeapon.cpp - Changes that might be needed in the future for sprite scaling for the commander (ie, if the commander needs a view model to hook the call in StudioModelRenderer)
	AvHClientVariables.h - Added high detail variable
	AvHCommanderModeHandler.* - New support for researching buildings, don't draw all main menu buttons in the NSTR
	AvHConsoleCommands.cpp - Added setculldistance, modified startcommandermode to teleport player nearby, removed give/remove upgrade commands because they don't easily work with new tech tree changes
	AvHConstants.h - Regular update
	AvHEntities.* - Added "team x only" flags to trigger_presence, refactored AvHMapInfo, added AvHFuncResource, added AvHFog, modified command station to allow resources to be dropped off, command station visibility change to allow marines vs. marines
	AvHEvents.* - Added alien sight events, refactored entity list
	AvHGamerules.* - Refactored team visibility, refactored team upgrades, refactored map extents, added GetIsMapperBuild(), added func_resources to watch for team upgrades, alerts don't trigger in the NSTR
	AvHHelp.cpp - No help in NSTR, renamed selected units to selected (because now buildings can be selected)
	AvHHud.* - Refactored hud drawing, refactored map extents, added fog, removed research at the HUD level (now it's stored in entities), added commander PAS for mp3s, added high-detail PS, removed old tech buttons
	AvHMarineEquipment.* - Added hack to test ferrying resources from turrets, big temporary changes to try to get solidity working for buildings
	AvHMarineEquipmentConstants.h - Added func_resource size constants
	AvHMessage.h - Added func_resource adjustment actions
	AvHMiniMap.* - Refactored map extents, coloring changes, added 512x384 and 320x240 minimap exporting
	AvHMovementUtil.cpp - Renamed AvHSU to AvHSHU
	AvHOrder.* - Renamed AvHSU to AvHSHU, fixed ASSERT when order given when no players are selected (maybe select command station automatically when command mode starts?)
	AvHParticleConstants.h - Added func_resource
	AvHParticleSystem.* - Added custom data, changed vortex to high-detail flag, changed so lifetime and scale can be changed at runtime, changed ASSERT(this->mSprite != 0) to emit error message and delete the particle system
	AvHParticleSystemEntity.* - Added concept of custom data, moved entity linkage to .cpp
	AvHParticleSystemManager.* - Added concept of custom data
	AvHParticleTemplate.* - Changed vortex flag to high-detail flag
	AvHPlayer.* - Added fog support, added concept of carrying resources, changed research to be per entity not per player, changed PAS, added start of special alien sight, various small mapper build changes, added resource adjustment actions, 
	AvHScrollHandler.* - Added zooming support
	AvHSelectionHandler.cpp - Renamed GetPlayerUnderMouse()
	AvHServerUtil.* - New utility functions
	AvHSharedUtil.* - Added return codes for waypoint checking, renamed AvHSU to AvHSHU, commander mode v2.0 selection changes (now ray starts at first point in world), researching changes
	AvHSpecials.h - Renamed AVH_USER3_VIS_SPECIAL_COMMANDER to AVH_USER3_VIS_SPECIAL_TOPDOWN (in case I allow spectating of commander mode, or something like that)
	AvHSprites.h - Sprite changes for new sprite scaling in HUD
	AvHTeam.* - Reworked resarch in a big way, now there's a research manager that handles everything.  If a tech node is given when a building is created, it is now taken away when there are no more buildings of that type
	AvHTeamHierarchy.* - Refactored map extents
	AvHTechNodes.* - Technodes now allow technology to be "researched" multiple times.  This is used for continually upgrading func_resources.  Maybe this should've been implemented as multiple technologies?
	AvHTitles.h - Regular update
	AvHVisibleBlipList.cpp - Updated drawing code to use triapi.  It's called during the RenderNoZBuffering() phase so they are always visible.
	AvHVoiceHelper.cpp - Allow all players in the NSTR to always hear each other

pm_shared:
	pm_shared.cpp - Refactored mapextents, don't play alien5 footsteps in NSTR, commander doesn't collide with anything (PM_FlyMove()), commander isn't never classified as stuck in the world, added zooming

ui:
	PieNode.cpp - Take parent's position into account when drawing (trying to fix software issues with the pie-menu)

utils/common:
	bspfile.h - Added new constant for one-way portals

zhlt/common:
	bspfile.h - Added new constant for one-way portals

zhlt/hlbsp:
	writebsp.cpp, surfaces.cpp, qbsp.cpp, hlbsp.dsp, bsp5.h - Attempt at adding one-way portals

zhlt/hlcsg:
	textures.cpp, brush.cpp, hlcsg.dsp - Attempt at adding one-way portals


New files:
	AvHResearchManager.* - New class to handle all research
	AvHMapExtents.* - New class for map extents
	AvHHudRender.cpp - All HUD drawing happens here, added sprite scaling

Removed files:
	AvHTechButtons.* - Outdated commander mode tech buttons
	hlcsg/debug - Added binary files by accident
	hlvis/Super_Debug - Added binary files by accident
	


Tag: NSTR2 final release
Monday, 2/25/02
	- Experimented with adding a camera to the commander HUD that shows the world from the viewpoint of the current selection. It can be done, but it's more work
	then it's worth right now
	- Tons of NSTR2 bug fixes and updates
	- Added ability to place resource towers only on top of func_resources.  It animates, plays sounds and can be upgraded properly.
	- Updated .fgd names to be more descriptive and not to be cut off in Worldcraft
	- Moved lots of turret values into skill.cfg for easy balancing
	- Added hotgrouping of units and buildings, moving to units or buildings when double-tapping, and camera tracking
	- Fixed up event playback for commander.  The commander is now actually inside the room that he's above (so his viewpoint is different then his position)
	- Reworked spawning code so when cheats are on, aliens can spawn without an active hive
	- Added func_seethroughdoor entity
	- Refactored gamma code to be much cleaner (to fix bug where non-1.0 gamma ramp not restored when exiting the game)
	- Reworked selection, much cleaner and working almost perfectly now.  Lasso select now works like Stacraft (people take precedence over buildings, friendly over enemy, multiple people allowed, only one building allowed, no lassoing of enemies, etc.)
	- When an alien is wallrunning, he uses the light value from the ceiling instead of the floor (not sure how well this works though)
	- Resources are selectable, shows how many resources are left.  Resource towers are selectable and can be upgraded.  
	- Resource towers can be built, they play their animations properly and generally act right.
	- Allow all buildables to be selected.  Added menu support for infantry gates.  Updated other building menus.
	- Fixed all turret, building and egg solidity problems!
	- Fixed bug where trying to join team 2 when on team 1 caused nasty things to happen, fixed "StartPlaying" bug
	- Fixed ancient spawn bug where player would occasionally spawn in on other team side (I think), added research complete and upgrade complete sounds
	- Fixed bug where ending map while in commander mode does weird things, fixed bug where the wrong particle systems could sometimes be generated

base:
	titles.txt - Regular update
	skill.cfg - Moved many turret variables out of code and into skill.cfg
	ns.fgd - Renamed many fields so they are readable in Worldcraft
	copydlls.bat - Copies to laptop now instead
	config.cfg - Regular update
	types.h, build.h - Put build options here instead of types.h

cl_dll:
	cl_dll.dsp - Added AvHClientUtil.*
	input.cpp, vgui_TeamFortressViewport.cpp - Added hotgrouping of units and buildings, moving to units or buildings when double-tapping, and camera tracking
	tri.cpp, view.cpp - Added but disabled multiple viewports
	util.cpp - Not sure, but must've been fixing something

dlls:
	scripted.cpp, new furniture.h - Refactored class definition out to header
	client.cpp - Precache alien use sounds for NSTR, don't perform "behind commander" check anymore, now that commander origin is different from his viewpoint, always propagate selection to commander, support func_seethrough and func_seethroughdoor, removed special effects on brush entities (doesn't work)
	combat.cpp - Check gamerules when doing damage via melee
	game.cpp - Moved many turret variables out of code and into skill.cfg
	gamerules.cpp, multiplay_gamerules.cpp - Reworked spawning code so when cheats are on, aliens can spawn without an active hive
	weapons.cpp - Precaching changes for NSTR

doc:
	AvH TODO.txt, Checkin.txt - Regular updates

HPB_bot:
	linkfunc.cpp - Added func_seethroughdoor entity

mod:
	AvHClientUtil.* - New utility files and functions
	AvHBasePlayerWeapon.cpp - Try to fix order giving to items
	AvHCommanderModeHandler.* - Removed old hooks, refactored to use new utility functions, allow selecting of func_resources and resource towers, allow selecting of all buildables
	AvHConsoleCommands.cpp - Fixed inability to edit particles when not on a team, added debugging testevent command
	AvHConstants.h - Added hotgroup support, removed glow entity, updated hud sound constants for hotgroups, added func_seethroughdoor entity, added grouping and ugprade complete sounds, brought max map dimension down to 4095 due to networking limits
	AvHEggLayer.cpp - Fixed egg solidity problems
	AvHEntities.* - Added func_seethrough again (and func_seethroughdoor), new animating resource towers, added func_resource, command station reads settings from skill.cfg vars instead of hard-coded constants, removed solidity debugging code
	AvHEvents.cpp - Draw selection circle correctly for brush entities
	AvHGamerules.* - Reworked spawning to allow alien spawning with no active hive when cheats are enabled, fixed bug where trying to join team 2 when on team 1 caused nasty things to happen, fixed "StartPlaying" bug, resource towers are now upgraded, not func_resources (it was a hack when solidity wasn't working), fixed ancient spawn bug where player would occasionally spawn in on other team side (I think), added research complete and upgrade complete sounds
	AvHHelp.cpp - Process help for where the commander looks like he is, not where he actually is
	AvHHud.* - Added hotgrouping of units and buildings, moving to units or buildings when double-tapping, and camera tracking, added support for extra viewports, refactored gamma stuff out into util, fixed particle system bug where the wrong particle systems were being generated (how did this ever work?), fixed bug where ending map while in commander mode does weird things
	AvHHudRender.* - Fixed bug where scaled sprites weren't visible at some FOVs, optimization where black commander background is now drawn only at the size of the screen, not in the whole world
	AvHMapExtents.cpp - Clip map extents to +/- 4095
	AvHMarineEquipment.* - Moved constants into variables, updated buildables, updated resource towers
	AvHMarineEquipmentConstants.h - Renamed models for consistencey, moved various constants into variables, updated various sizes
	AvHMarineWeaponConstants.h - Reduced clip size to encourage marines to advance as squads
	AvHMessage.h - Added hotgroup support
	AvHPlayer.* - Added debug code for blips (for debugging server side stuff graphically), hotgroup support, removed blips from mapper build, allow respawns when no active hive but cheats are enabled
	AvHResearchManager.cpp - Send alert when research finishes
	AvHSelectionHelper.* - Reworked selection, much cleaner and working almost perfectly now.  Lasso select now works like Stacraft (people take precedence over buildings, friendly over enemy, multiple people allowed, only one building allowed, no lassoing of enemies, etc.)
	AvHServerUtil.cpp - Allow damage to be done in NSTR, fix solidity problems, fade func_seethroughdoors
	AvHSharedUtil.* - Grouping utility functions, updates and bugfixes, sentry turret uses own model and size, support for resource towers, tracing updates and fixes
	AvHSpecials.* - Updated constants (removed viewheight and glow), added func_resource, renamed reinforcements to infantryportal
	AvHTeam.cpp - Updated tech tree, constants and order, allow siege to be researched, allow multiple turret upgrades
	AvHTeamHierarchy.cpp - Reset fixes to team hierarchy and sanity check
	AvHTechID.h - Added TECH_INFANTRYPORTAL
	AvHTitles.h - Regular updates
	AvHWelder.cpp - Have welder use MG animation temporarily so he's not running around with arms out


pm_shared:
	pm_shared.cpp - Commander stays inside the world now, added MOVETOGROUP support, wallcrawlers use ceiling light when wallcrawling

util:
	Util.dsp, added GammaTable.* - Overbrightening code
	MathUtil.* - Reworked IsVectorBetweenBoundingVectors()
	

Tag: None
Monday, 3/7/02
	- New alien upgrade system.  When a builder creates a structure, all aliens on his team get a blinking icon on their HUD, showing them that they have a free upgrade to choose, which they can then choose off the pie menu.  When an upgrade building is destroyed, a random upgrade from this category is immediately taken away from every player.  In this way, upgrades are coherent and grouped, yet can still be chosen by each player to suit each person's playstyle.
	- Added special sounds when aliens construct buildings
	- Added deploy sound to all marine buildings when finished construction
	- Added special sound when alien falls and takes damage (instead of HL sound)
	- Egg-laying is offically gone
	- Added infantry portal
	- Better bot support: bots now rejoin teams after a game ends, bots morph into aliens on their own (!) and they buy alien upgrades.  They're not smart, but they do it.
	- New alien upgrades: 
	- Silence (makes footsteps and lots of other sounds next to inaudible!), 
	- Redemption: The hive tries to "save" aliens with this ability.  If an alien is very hurt, far from the hive, and can see an enemy, the hive will try to teleport the alien back to the safety of the hive (not the upgrade for everyone but great for hit-and-runners)
	- Clairaudience: (not implemented yet) Allows aliens to hear as if they are somewhere else (great with hive sight)
	- Better armor: all damage is reduced by 50% 
	- Builder no longer wall-runs
	- Alien pie menu now looks good (finally) without any weird sprite clipping or misaligned or out of order sprites
	- Alien pie menu displays tool tips when hovering over different icons (see attached pic)
	- New placeholder art for new alien upgrade system, new pie menu layout
	- Tons of tech tree and marine building improvements (researching can be cancelled for refund now, UI updates correctly no matter what happens and no matter what's selected, can no longer build things from building until it's completed <menu is blank>, tech tree is almost all filled in now, command station is selected automatically when logging in)
	- Visibility reworked.  Now it works properly for all alien structures, marine structures, webs, hives, everything!
	- Added "motion-tracking" upgrade.  When researched (at the observatory), it means all moving aliens show up as red blips to all marines!  Very expensive and deep in the tree of course.
	- Fixed various buildings sinking into the floor bugs
	- Fixed player ID system so it works up and down and will never detect yourself
	- Added much better scoreboard.  It still gets some colors wrong, but it now tracks buildings and kills for players.
	- New standardized animations for all buildings
	- Added "bigdig" (all buildings are constructed automatically) and "hightech" (all research finishes instantly) cheats
	- Refactored and standardized buildings in general, including their building/research status (also added destruction effects for all buildings)
	- Added help text for all upgrades
	- Tons of other little issues and fixes

base:
	BuildQC.bat, skill.cfg, ui.txt, titles.txt - Regular update
	build.h, config.cfg - No longer NSTR2 build

cl_dll:
	hl/hl_baseentity.cpp - Regular update
	hl/hl_weapons.cpp - Removed egg layer, added four alien research weapons
	util.cpp - Fixed bug where UI bounces around when view angles are punched
	vgui_ScorePanel.cpp - Refactored crappy-ass score panel.  It's not perfect, but it's better.  Removed TFC code, added DEAD and COMM tags to scoreboard.
	cl_dll.dsp - Added building gun, removed egg layer

dlls:
	cbase.h - Changes to base entity for cleaner code in general
	client.cpp - Added special sound when alien falls and takes damage (instead of HL sound), added special sounds when aliens construct buildings, added deploy sound to all marine buildings when finished construction
	game.cpp - Added tons more tech times and costs to skill.cfg
	h_cycler.cpp - Made IsAlive() const correct
	hl.dsp - Added AvHBuildingGun.cpp and AvHAlienEquipment.cpp, removed AvHEgglayer.cpp
	maprules.cpp - Added TeamID() stuff for cleaner scoreboard support
	player.*, multiplay_gamerules.cpp - Cleaner scoreboard support
	teamplay_gamerules.cpp - Cleaner scoreboard support, 
	weapons.cpp - Added new alien building weapons, infantry portal, removed egg layer

doc:
	AvH TODO.txt, Checkin.txt - Regular updates

HPB_bot:
	dlls/bot.cpp, dlls/bot_client.cpp, dlls/bot_start.cpp - Better bot support: bots now rejoin teams after a game ends, bots morph into aliens on their own (!) and they buy alien upgrades.  They're not smart, but they do it.
	dlls/bot_combat.cpp - Attempted to fix problem where aliens fire at their own teammates that join a new team after a previous game ends
	dlls/linkfunc.cpp - Regular update

mod:
	AvHActionButtons.cpp - Variable renaming
	AvHBasePlayerWeaponConstants.h, AvHAlienWeapons.h, AvHAlienEquipmentConstants.h - Added new alien structures
	AvHAlienWeaponConstants.h - Modified spit weapon, removed egg laying, added building gun
	AvHBasePlayerWeapon.cpp - Updated comment
	AvHBuildable.* - Tracks the builder, hooks into gamerules when buildings are created or destroyed
	AvHCommanderModeHandler.* - Added research menu, refactored, fixed bug where help text wasn't being displayed, update buttons/menus constantly to catch changes without having to reselect
	AvHConsoleCommands.cpp - Added "bigdig", "hightech" and "addcat" cheats
	AvHConstants.h - New alien upgrade system, teams changes for scoreboard fixes, new alien builder weapons, alien fall/pain sounds
	AvHEntities.* - Major refactoring of hives, AvHBaseBuildables, resource towers, new visibility system
	AvHEvents.cpp - Event for building alien structures, alien silence support, removed egglaying, tried to make spit short-range (doesn't work yet)
	AvHGameRules.* - Builder hooks for score tracking, general cheat code support, changed point award system, great new visibility system
	AvHHelp.cpp - Refactored buildings
	AvHHud.* - New alien upgrade system, fixed player ID system, fixed progress bar lingering around bug, added support for researching
	AvHHudRender.cpp - New alien upgrade system
	AvHItemInfo.cpp - New alien buildings, removed egg layer
	AvHMarineEquipment.* - Refactored buildings
	AvHMarineEquipmentConstants.h - New alien construction sounds, smaller infantry portal
	AvHMessage.h - Researching of faster reinforcements, research cancelling, motion tracking, new alien upgrades
	AvHPlayer.* - New visibility system, added concept of player class and TeamID() for scoreboard status and team, renamed blip lists and changed how they are updated, added redemption ("pull-back"), added alien team upgrades, added support for silence upgrade, fixed bug in GetSpeeds() that was causing an ASSERT, added motion-tracking, added enemy dection (promity) for aliens too, added ability to research, fixed bug in UpdateAlienUI()
	AvHPlayerUpgrade.cpp - Updated comment
	AvHResearchManager.* - Added ability to cancel research for refund
	AvHServerUtil.* - New visibility system, removed old unused functions, added alien armor support, track the builder of an structure, moved explode into general utility function, construction effects can be alien, motion-tracking support
	AvHSharedUtil.* - Add support for infantry gate, add support for alien buildings and research, changed some buildings sizes, fixed buildings falling through world, fixed infinite loop in AvHSHUServerTraceWaypoint
	AvHSpecials.* - New alien upgrade system
	AvHSpitGun.cpp - Try to make spit a short range weapon (doesn't work yet)
	AvHSprites.h - New alien upgrade system
	AvHTeam.* - New alien upgrade system, new almost-complete tech tree
	AvHTechID.h - Some new tech ids
	AvHTechNodes.* - New utility function to check if actions are legal
	AvHTitles.h - Titles for scoreboard ("playerclass")
	AvHVisibleBlipList.* - operator== and operator!= functions to compare lists of blips (new more standard way of keeping client up to date)

pm_shared:
	pm_shared.cpp - Builder no longer wall-runs, added silence upgrade, play alien falling sound

ui:
	FadingImageLabel.cpp - Setting the text will now reload a sprite.  Changed to allow alien pie menu to change depending on the upgrades that are currently available.
	PieNode.* - Allow pie nodes to be dynamically changed (for dynamic alien upgrade system)
	UIUtil.* - Changed utility function to allow ignoring of screen resolution


New files:
	AvHAlienEquipment.* - New alien structures
	AvHBuildingGun.cpp - Created for level 2 ability to build structures
	

Tag: None (Iron lore playtest #2!)
Wednesday, 3/27/02
	- Scoreboard now shows alien scores, and doesn't show marine scores.  Also draws DEAD and COMM indicators, and scoring is handled properly for aliens (points for kills, buildings)
	- Countdown type is now a variable (mp_countdowntime), server asserts can now be disabled (mp_assert), teams can now be handicapped (mp_marineresoucescalar, mp_alienresourcescalar)
	- Default observer mode is now free cam, not locked cam, don't allow observing enemies in tourny mode, don't allow spectating commander
	- New spawning system.  Fixes bug where players occasionally spawn on the wrong team.
	- Added concept of new abilities/weapons when hives come online or die
	- The builder web weapon now shoots a projectile that leaves a web where it hits
	- Added "killhive", "spawnhive", "killall" and "paralyze" commands for testing (cheats must be enabled)
	- All buildings will animate properly when models are in (active animation, research animation, two idle animations, deploy animation, killed animation, take damage animation)
	- New respawning system for hives and infantry gates
	- Team upgrades are now persistent through death
	- Updated visibility code to work properly with everything, including webs, alien buildings, all buildables, etc.
	- Added tool tips for pie menu, including point cost
	- Added motion-tracking upgrade for marines (all marines can see any moving alien!)
	- Level 1's no longer take falling damage, ever

base:
	config.cfg - For when people get stuck and for testing
	delta.lst - Need 6 bits for iuser3 now
	titles.txt, skill.cfg - Regular update
	ui.txt - Moved radar to upper right so it doesn't interfere with weapons
		
cl_dll:
	cl_dll.dsp - Removed ensnare, added sniper gun and paralysis gun
	input.cpp - Tried to make paralyzation lock view angles, but it didn't work
	StudioModelRenderer.cpp - New user data
	vgui_ScorePanel.cpp - Scoreboard now shows alien scores, and doesn't show marine scores.  Also draws DEAD and COMM indicators, and scoring is handled properly for aliens (points for kills, buildings)
	
cl_dll/hl:
	hl_baseentity.cpp - Regular update
	hl_weapons.cpp - Removed ensnare gun, added paralysis and sniper gun

dlls:
	client.cpp - Resource tower makes gross noises when harvesting, new user data	
	doors.cpp - Less picky ASSERT for doors
	game.cpp - Countdown type is now a variable (mp_countdowntime), server asserts can now be disabled (mp_assert), teams can now be handicapped (mp_marineresoucescalar, mp_alienresourcescalar)
	observer.cpp - Default observer mode is now free cam, not locked cam, don't allow observing enemies in tourny mode, don't allow spectating commander
	player.* - Added bool to choose whether to show new weapons as they are received or not
	hl.dsp, weapons.cpp - Removed ensnare gun, added sniper gun and paralysis gun.  Made web a projectile.

doc:
	AvH TODO.txt, Checkin.txt - Regular updates

HPB_bot/dlls:
	bot_combat.cpp - User data change
	linkfunc.cpp - Removed ensnare gun, added sniper gun and paralysis gun.  Made web a projectile.

mod:
	AvHActionButtons.cpp - Always draw node, whether researched or not
	AvHAlienEquipment.* - Alien resource tower has different model then marine resource tower, all alien upgrade buildings have different models, fixed problem where building wasn't being completed properly
	AvHAlienEquipmentConstants.h, AvHAlienWeaponConstants.h - Regular update
	AvHAlienWeapons.h - Removed ensnare, added sniper gun and paralysis gun
	AvHAssert.cpp - ASSERT can be disabled, server-side
	AvHBasePlayerWeaponConstants.h - Removed ensnare and egglayer, added sniper gun and paralysis gun
	AvHBuildingGun.cpp - Look up cost for buildings properly
	AvHClaws.cpp - Fixed cut-and-paste error where claws where using spit constants
	AvHClientUtil.cpp - User data update
	AvHCommanderModeHandler.cpp - User data update, small menu fixes
	AvHConsoleCommands.cpp - Allow teleport to command station to work regardless of current team, added "killhive", "spawnhive", "killall" and "paralyze" commands for testing
	AvHConstants.h - Regular update (also added player class status for scoreboard)
	AvHConstantUtil.* - User data update
	AvHEntities.* - User data update (no more AvHSelectableUser4), all buildings will animate properly when models are in (active animation, research animation, two idle animations, deploy animation, killed animation, take damage animation), new respawning system for hives and infantry gates, refactored build/research state, fully built structures no longer marked as buildable
	AvHEvents.cpp - Removed ensnare and egglayer, added sniper gun and paralysis gun, user data changes
	AvHGamerules.* - Removed some ancient code relating to chain of command (!), reworked respawn system, clean up all buildables when resetting the level, visibility code much cleaner and works properly for all webs, buildings, etc.
	AvHHelp.cpp - Removed egg layer help, fixed potential logic bugs, added help for alien resource tower weapon
	AvHHud.cpp - Added particle system visibility (may not be completely working yet), added tool tips for pie menu, including point cost, drawing alien resources again, fixed client playmode error, always draw player ID
	AvHHudRender.cpp - Only draw friendly blips with hive sight upgrade, draw enemy blips for marines with motion-tracking
	AvHItemInfo.cpp - Added new weapons, removed old weapons, reordered/moved some weapons
	AvHMarineEquipment.* - New reinforcement system for infantry gates, fixed bug where turrets weren't rotating, user data update
	AvHMarineEquipmentConstants.h - Various building sizes changed
	AvHMovementUtil.* - User data update
	AvHOrder.cpp - Added user4 to TraceTangible
	AvHPlayer.* - Added concept of paralysis, new reinforcing system, hive-dependent inventory, resources are now represented as floats, user data update, added effective player class (for scoreboard), better team-wide upgrades (they persist over death), visibility improvements
	AvHPlayerUpgrade.* - Changed some health values for different roles (this should be pulled out into skills.txt), user data update
	AvHResearchManager.cpp - Hook research complete generically, improved team upgrades, refactored build/research state, hook buildables when research state changes for animation
	AvHSelectionHelper.* - Treat selectables generically, not as buildings, or whatever
	AvHServerUtil.* - More utility functions
	AvHServerVariables.h - Added mp_assert
	AvHSharedUtil.* - TraceTangigble returns iuser4
	AvHSpecials.* - Completely reworked iuser data and upgrades (much cleaner)	
	AvHSwipe.cpp - Fixed cut and paste error where the wrong values were being used
	AvHTeam.* - Resources changed to a float, better team-wide upgrade support, added SpawnHive() and KillHive() for testing, dynamic hive-based alien inventory, fixed up some misplaced data in the tech tree, refactored TriggerRemoveTech(), new reinforcement system, new resource model (based on score for aliens, takes into account resource towers better)
	AvHTechNodes.cpp - Send down and read mAllowMultiples
	AvHTitles.h - Regular update
	AvHWebSpinner.cpp - Webspinner now shoots projectile, links web where it lands
	AvHWelder.cpp - User data update

pm_shared:
	pm_shared.cpp - User data change

New files:
	AvHParalysisGun.cpp, AvHSniperGun.cpp



Tag: None (Internet playtest #1 and #2!)
Tuesday, 4/16/02
    - Hives no longer spawn in on their own, instead, builders now create hives through a "create hive" ability.  Once created, they slowly grow until they are complete
	- Most alien buildings build on their own, and can also be sped up by tended to by one or more builders
	- Added helptext for builder weapons
	- "givepoints" now works for commander (F11)
	- Chat for commander appears correctly
	- "REIN" appears for players that are reinforcing, "DEAD" shows for dead players waiting to be reinforced (or if they just joined)
	- Fixed all reported crashes from Internet Playtest #1 (hitting ESC and reconfiguring during play, viewing scoreboard immediately on server join)
	- Fixed bug where pop-up menu would sometimes stop working
	- Fixed reinforcement "workaround" where players could go back to ready room, then join team immediately (including chat problems sending you back to readyroom)
	- Added mp_latejointime, which is the time (in seconds) that players are allowed to join a team after the game starts, without having to come back as a reinforcement
	- Wrote new networking layer to buffer reliable data out to clients (to reduce or eliminate overflows)
	- Reworked chatting so observers, reinforcers, readyroomers, and players can see chat appropriately
	- Optimized server (visibility performed less often, victory check happens less often).  This was causing the huge lagging at Iron Lore and IPT1
	- Visibility for commander works again (it broke a little while ago)
	- Particle systems are now subject to visibility
	- Some new (or newly-named) server variables for easy balancing and playtesting: 
		- ns_funcresourcevalue, ns_commandstationhealth, ns_hiveinjectiontime, ns_hiveinjectionamount, ns_initialalienpoints, ns_initialmarinepoints, ns_alienrespawntime, ns_alienrespawncost, ns_marineresourcetime, ns_marineresourceamount, ns_alienresourcescalar, ns_marineresourcescalar
	- Aliens with the speed upgrade you can bunny hop
	- Web strands now snap after 50 seconds, cost 1/2 a point, and are nearly invisible
	- Alien melee weapons now require you to press the attack button for each shot (you can no longer hold it down)
	- Alien melee and ranged weapon damage upgrades are now functional
	- Allow players to be selected, then accessing the build menu from there (gives automatic waypoint)
	- Commander menu is now updated constantly, reflecting changes in the tech tree or your current selection
	- func_resources now indicate approximate # of resources inside by the particle steam
	- Resource towers (for both sides) stop making noises when out of resources 
	- Fixed bug where gamma was being set to wrong value on a map reset or change
	- Improved selection issues (clicking is now a small marquee-selection)
	- Buildings no longer float (with the exception of the resource towers, but they are colliding with the func_resources)
	- Fixed HUD problems where health, ammo, etc. weren't being displayed properly in the ready room, after death, etc.
	- Allow aliens to morph down
	- Fixed bug where building is selected after it's placed
	- Hives regenerate nearby players
	- Fixed bug where flier alien view clipped through ceilings 
	- Commander speaks to everyone, not just selection

base:
	ui.txt - Selection marquee is now blue
	types.h - Include std::map 
	config.cfg, server.cfg, listenserver.cfg, skill.cfg, titles.txt - Regular update
	bot.cfg - Regular update
	ns.fgd - Weldables now have target on use (to support disabling of entities through welding), alien hive hitpoints no longer in team_hive
	delta.lst - More changes to networking.  WARNING: Be sure to test everything well after changing this file, it can cause strange things to happen (ladder prediction, water prediction, etc.)

cl_dll:
	hl/hl_weapons.cpp - Removed flamegun, added hive gun
	ammo.cpp - Help text for builder weapons
	cl.dsp - New files (hivegun, pm_debug)
	input.cpp - "givepoints" now works in commander mode
	saytext.cpp - Chat for commander appears correctly
	vgui_ScorePanel.cpp - Fixed crash when holding tab right when joining server, added "REIN" status
	vgui_TeamFortressViewport.cpp - Removed crappy way of handling pop-up menu changes, removed pressing enter to go back to RR (was getting in way of chat, now just use "readyroom" - F4 -)

dlls:
	enginecallback.h, util.h - New networking layer to reduce or eliminate overflowing
	client.cpp - Reworked chatting so observers, reinforcers, readyroomers, and players can see chat appropriately, visibility fixes, propagate team for all entities (for selection)
	func_break.cpp - Breakables weren't caching assets they needed
	game.cpp - Lots of new variables, renamed other variables
	observer.cpp - Don't assume that because you're observing, you're on no team
	triggers.cpp - Pulled class definition out into an include
	weapons.cpp - Precache sparks, add hive gun
	hl.dsp - Profiling options, added hive gun, added hive

doc:
	AvH Todo.txt, Checkin.txt - Regular updates

HPB_bot:
	dlls/bot.cpp - Profiling tests, removed alien lifeform costs (they're hard-coded now, but these bots are for personal use only)
	dlls/linkfunc.cpp - Added hivegun
	dlls/HPB_bot.dsp - Added network metering
	dlls/waypoint.cpp - New network metering

mod:
	AvHActionButtons.cpp - Refactored help text, added help text for weapons
	AvHAlienEquipment.* - Alien buildings now slowly build themselves
	AvHAlienEquipmentConstants.h - Web strands
	AvHAlienWeapons.h - Melee weapons must be pressed for each shot, added hive gun
	AvHAssert.cpp - Only log asserts when mp_assert is 1
	AvHBasePlayerWeaponConstants.h - Removed flamethrower constant, added hive gun constant
	AvHBite.cpp, AvHClaws.cpp, AvHSwipe.cpp - Alien melee and ranged weapon damage upgrades are now functional
	AvHBuildingGun.cpp - When trying to building an alien structure without enough points, you'll get a "not enough points" sound.  Alien building requires button to be pressed each time.  Experimented with allowing aliens to build turrets.
	AvHCommanderModeHandler.* - Allow players to be selected, then accessing the build menu from there (gives automatic waypoint)
	AvHConsoleCommands.cpp - Removed concept of "desired team", fixed specating problems, removed old "setteam" console command, don't allow spectating if allow_spectators isn't set, removed outdated "setrole" command
	AvHConstants.h - Added "reinforcing" player state, added hive gun, removed alien lifeform constants (uses skill.cfg now), toned down regeneration big-time
	AvHEntities.* - Only builders can help build alien structures, improved resetting of weldables (still not right though), use gameplay balancing variables (instead of gameplay object from map), command station has a delay before it can be used again, near-invisible web strands, web strands expire, new particle ideas for func_resources, resource towers stop making noise when out of resources
	AvHFlameGun.cpp - Removed flamegun constants
	AvHGamerules.* - Fixed problemw when moving between teams, removed concept of "desired team", added network metering, added latejoin time, added profiling, visibility is now computed every .5 seconds, removed server-side particle system updating
	AvHHelp.cpp - Only give attack text when near a spawned in enemy hive, not a neutral hive
	AvHHud.* - Tried to fix pop-up menu problems (only bindable to RMB), added help text for builder weapons, fixed bug where pop-up menus sometimes disappeared, fixed bug where gamma was being reset on a map change, selection improvements
	AvHItemInfo.cpp - Regular update
	AvHMarineEquipment.cpp - Infantry portals were phasing in players too high, now there is instant reinforcement time
	AvHMarineEquipmentConstants.h - "fixed" floating buildings by making all buildings the same magical size
	AvHMarineWeaponConstants.h - MG clip doubled, pistol clip increased, shotgun ROF slowed down to match sound effect, HMG ROF increased, HMG damage decreased, 	
	AvHMessage.h - Added build_hive message
	AvHParticleSystem.cpp - Added debugging code to fix particle system visibility problems
	AvHParticleSystemEntity.* - Allow particle systems to be turned on and off (for func_resources)
	AvHParticleSystemManager.cpp - Removed ASSERT that was causing crash when hitting ESC to navigate through menus while in-game
	AvHPieMenuHandler.* - Refactored pop-up menu to allow it to work with non-RMB.  Ran into VGUI problem though, not sure how to proceed.
	AvHPlayer.* - Removed concept of desired team and role (finally!), better scoreboard support, allow morphing down, reset score between matches, fixed bug where building is selected after it's placed, fixed bug where flier alien view clipped through ceilings, added hive gun to builder, particle template template throttling no longer needed
	AvHPlayerUpgrade.* - Alien max healths adjusted, alien damage upgrades added
	AvHSelectionHelper.* - Improved selection issues (clicking is now a small marquee-selection), 
	AvHServerUtil.* - When exploding objects, remove the debris object, fixed visibility, added func_resources and particles to visibility, added profiling code
	AvHServerVariables.h - Added many new server variables for balancing, renamed others (from avh_ to ns_)
	AvHSharedUtil.* - Hives can be built now, but only near unoccupied team_hive entities
	AvHSpecials.h - Added hive constant
	AvHSpikeGun.cpp, AvHSpitGun.cpp, AvHSpores.cpp - Ranged damage upgrade takes effect
	AvHTeam.* - Added motion-tracking upgrade, propagate alien build costs to alien players, hives no longer spawn in on their own, resource update only once per second now
	AvHTitles.h - Regular update
	AvHVoiceHelper.cpp - Commander speaks to everyone, not just selection
	AvHWebSpinner.cpp - Webs costs .5 points

pm_shared:
	pm_debug.cpp - Debugging code (view bounding box of entity you look at)
	pm_shared.cpp - Alien speed upgrade means you can bunny hop (it was using the wrong upgrade)

New files:
	dlls/triggers.h - Pulled class definition out into an include
	doc/Quotes.txt - Various NS-related quotes for posterity
	mod/AvHHive.* - Moved into it's own set of files.  Is created by the builder now, and grows slowly on it's own.
	mod/AvHHiveGun.cpp - Builders create hives now
	mod/NetworkMeter.* - General-purpose networking layer to trickle reliable updates to prevent overflows



Tag: None (Internet playtest #3 and #4!)
Tuesday, 4/30/02
	- Completely rewrote turrets.  The function well now, and are consistent with the rest of the buildables (yay!)
	- New building indicator (high-tech ring on ground)
	- Iconic help for nearby objects (useables, breakables, hives, etc)
	- Added new alien abilities/weapons: parasite, blink, divine wind
	- Added new (but not fully functioning) alien abilities/weapons: paralysis, sniper weapon, umbra
	- New commander UI (blinking alerts, highlighting of logout button, tech tree icons)
	- New marine UI (commander status, resource label, nice minimap, consistent ammo/HUD colors)
	- Added scanner sweep
	- Added droppable health
	- Made marine reinforcements automatic
	- Added nuke for marines
	- Alien resource changes (alpha male gets twice what everyone has, not proportional to their score)
	- Tons of bug fixes and balance changes (hive healing rate reduced, duplicate weapons aren't picked up, mines are selectable again, resource towers don't float)

cl_dll:
	hl/hl_weapons.cpp - Removed glock, added many new alien weapons/abilities
	ammo.cpp, ammo_secondary.cpp, ammohistory.cpp, battery.cpp, chudmisc.h, flashlight.cpp, health.cpp, hud_spectator.cpp, train.cpp - Allow different colors schemes
	death.cpp - Death messages are moved for commander
	ev_hldm.cpp - Error check creation of temporary entities (these failed sometimes in playtests)
	tri.cpp: Moved selection effects to AvHHudRender.cpp
	cl_dll.dsp - New files

dlls:
	client.cpp - Removed "lastinv" command (causing harsh crashing in playtests, fix later), added code to detect errors when sending weapon list to client
	explode.* - Added concept of team to explosion (needed for nuke?)
	func_break.cpp - Mark breakables so they are visible in pop-up help
	game.cpp - Regular update (now that turrets are regular buildings)
	player.* - Added utility function to prevent players from picking up weapons they already have
	turret.cpp - Tried to figure out why turrets were broken, then rewrote them instead
	weapons.cpp - Regular update
	hl.dsp - New files for new turrets and new alien abilities

doc:
	AvH TODO.txt, Checkin.txt, Quotes.txt, Passwords.txt - Regular update

game_shared:
	voice_gamemgr.cpp - Incorporated potential overflow fixes from Mugsy

HPB_bot:
	linkfunc.cpp - Regular update

mod:
	AvHActionButtons.cpp - Added images on tech tree
	AvHAlienAbilityConstants.h, AvHAlienEquipmentConstants.h, AvHAlienWeaponConstants.h - Regular update
	AvHAlienWeapons.h - New alien weapons
	AvHBasePlayerWeapons.cpp - Don't pick up weapon if we already have one of this type
	AvHBasePlayerWeaponConstants.h - Regular update
	AvHBuildingGun.cpp - Don't allow more then three of a building
	AvHCommanderModeHandler.* - Fixed bug where multiply selecting marines wouldn't show player menu, menu tweaks
	AvHConsoleCommands.cpp - givepoints now only available with cheats on, added "alert" command
	AvHConstants.h - Regular update
	AvHEntities.* - Moved AvHBaseBuildable into it's own set of files, cleaned up AvHResource
	AvHEvents.* - Moved some HUD drawing code into AvHHudRender
	AvHGamerules.* - Added connect/disconnect sounds, more cleanup at end of round, add profiling, update victory doesn't happen every tick
	AvHNukeGun.cpp, AvHGrenade.cpp - Changed constant because the number of constants is limited
	AvHHelp.cpp - Updates for new non-HL turrets
	AvHHive.h - Healing balance change
	AvHHud.* - New selection effects, new marine HUD, new tech tree buttons, new help icons 
	AvHHudRender.cpp - Allow scaling of a one-frame sprite (with optional UV coords), refactored drawing of world sprites and orders, added primary HUD color, new selection effects, new help icons, hive sight enhancments, new commander HUD, don't draw hive sight when dead
	AvHItemInfo.cpp - Moved tons of weapons around for ease of use (feedback from playtesters)
	AvHMarineEquipment.* - Added marine nuke, rewrote all turrets, added droppable health, added scanner sweep, no more floating resource towers
	AvHMarineEquipmentConstants.h - Added nukes, scanner sweeps, droppable health, tweaked lots
	AvHMarineWeaponConstants.h - Tweaked LMG
	AvHMessage.h - Regular update
	AvHParticleConstants.h - Added blink effect
	AvHParticleSystemManager.* - Added debug code to track down "too many visible entities" problem
	AvHPlayer.* - Scanner uncloaks cloaked aliens, added notification when commander status changes, can only morph to level 4 with 2 hives, and level 5 with 3, cloaked aliens are much harder to see, hive regenerates nearby players, refactored hive sight (for performance?), some messages are unreliable now (to try to alleviate overflows)
	AvHServerUtil.* - Only draw profile info if significant, "fixed" problem where alien use sounds were playing for marines, scanner support
	AvHSharedUtil.cpp - Regular update
	AvHSpecials.h - Regular update
	AvHSpitGun.cpp - Fixed problem where spit continued to do damage after one hit
	AvHSpores.cpp - Spore balance
	AvHSprites.h - New sprites for new commander UI
	AvHTeam.* - Fixed bug where game ended when everyone died but still had portals or hives left, added droppable health, added nuke, tech tree balance changes, alien resource changes
	AvHTitles.h - Regular update
	AvHVisibleBlipList.* - Added status for blips
	NetworkMeter.* - Added document header

pm_shared:
	pm_shared.cpp - Added kinda crappy blink support

util:
	STLUtil.* - Added BuildAbridgedString

base:
	ui.txt, titles.txt, *.cfg - Regular update
	*textscheme.txt - Added marine status scheme to color the marine HUD
	delta.lst - Added two more bits to the weapon ID, because more weapons were added
	ns.ps - Added blink particle effect

New files:
	AvHUmbraGun.cpp - CREATE: Umbra weapon
	AvHParasiteGun.cpp - CREATE: Parasite weapon
	AvHParalysisGun.cpp - CREATE: Alien paralysis gun
	AvHMarineTurret.* - CREATE: Base marine turret (regular turret, base for siege turret)
	AvHBlinkGun.cpp - CREATE: Alien blink ability
	AvHTurret.* -CREATE: Base NS turret, used for all types of automated enemy detection
	AvHSiegeTurret.h -CREATE: Marine siege cannon
	AvHSharedMovementInfo.* - Helps keeps track of movement over multiple ticks
	AvHDivineWind.cpp - CREATE: Alien suicide ability
	AvHBaseBuildable.* - CREATE: Moved this class into it's own source file
	Passwords.txt - File for tracking passords for all installs and .zips that are archived

Tag: None (Internet playtest #5!)
Tuesday, 5/14/02
  - Ready room chat is visible now
  - New scripting system added to client and server.  Not useable yet for mappers, details to come.
  - New alien energy system
    - Most alien abilities cost energy.  The energy graphic tells you how much energy is needed for your current ability.  If you don't have enough energy, you can't use your ability.
    - Energy comes back slowly
  - New alien resource indicator
    - Graphical indicator shows you how many points you have
    - Hovering over an alien lifeform or builder ability will show you how many points you'll have left if you use it
  - New alien upgrade system
    - Aliens must gestate to get an upgrade
    - Only one upgrade from each category is allowed.  There are multiple levels to each upgrade now.
    - More intuitive way of choosing upgrades from pop-up menu
    - Alien abilities now have three levels (speed, armor, silence, etc.)
  - "128 HUD sprites bug should be fixed", let me know if you see it
  - Picking up and dropping alien weapons should no longer happen
  - Gamma and brightness adjustment added to installer
  - Aliens can travel through phase gates now :)
  - Builder spit increased to 20 damage (up from 12)  
  - Cleanup health, pistols, nukes at end of round
  - Commander artwork updated 
    - Tech buttons are scaled properly now
    - Logout button becomes highlighted when you hover your mouse over it
    - New tray for hotgroups (not implemented yet)
    - Blinking orange light tells you when you have a non-urgent alert (research is done, hit jump/space)
    - Blinking red light tells you when you're under attack (hit jump/space)
  - Some new overwatch artwork, new "build ring" artwork
  - New marine blip artwork
  - Orders artwork (there were some messed up orders)
  - Using various commands at dedicated server console no longer crashes
  - New version of hera, area between marine start and NW hive redone, glass can't be shot through, lots of other changes
  - Fixed bug where NS doesn't think you're in the ready room after joining the server
  - Pistol damage increased from 8 to 18
  - Crash when using next weapon fixed
  - Armory now plays its animations properly
  - ** Dead command stations can be rebuilt with welder (this is a quick test to see how it affects gameplay)
  - Alien respawn cost of 5 (only pay if you have it, you always respawn)
  - Marine respawn cost of 3 (only pay if team has it, you always respawn)
  - Fixed bug where dead alien players sometimes got stuck waiting to respawn
  - Added missing sound wind3.wav
  - Alien resource towers increased from 12 to 22 points
  - Removed display of NS logo
  - Added AVH_DEVELOPER_BUILD for things that shouldn't be shipped
  - Added trigger_script for scripting system
  - Added debug command for particles (cl_particleinfo), but don't use it quite yet, it has some problems
  - Added code to allow sub-models to have different draw modes
  - Added mp_networkdebug for tracking down overflows
  - Started to add level 5 in, including his weapons and charging
  - Added "run x" and "clientrun" scripting commands (where x is the script name)
  - Added "killcs" (kills command station) and "killhive" commands when cheats are enabled

base:
	ui.txt, titles.txt, skill.cfg, listenserver.cfg, server.cfg, config.cfg - Regular updates
	ns.fgd - Added trigger_script for scripting system
	build.h - Added AVH_DEVELOPER_BUILD	for things that shouldn't be shipped

cl_dll:
	hl/hl_baseentity.cpp - Added checksum
	hl/hl_weapons.cpp - Removed outdated weapons, notify HUD about needed energy for current weapons
	cl.dsp - Added scripting files
	health.cpp - Moved health over for alien, so it doesn't overlap energy indicator
	hud_redraw.cpp - Chat draws in ready room now
	input.cpp - Allow client-side scripts to override client input, added cl_particleinfo
	StudioModelRenderer.cpp - Added code to allow sub-models to have different draw modes
	tri.cpp - Added support for cl_particleinfo

common:
	exefuncs.h - Supposed fix for dedicated server with HL1109

dedicated:
	engine.cpp, sys_ded.cpp - Supposed fix for dedicated server with HL1109

dlls:
	cbase.* - Added checksum
	cdll_dll.h - Fixed chat in ready room
	client.cpp - Fixed problem where players weren't officially in the ready room (playmode was undefined)
	enginecallback.h, util.h - Added mp_networkdebug for tracking down overflows
	game.cpp - Regular update
	hl.dsp - Added scripting and weldable files
	weapons.cpp - Started to add level 5 in, including his weapons and charging

doc:
	AvH TODO.txt, Checkin.txt, Passwords.txt - Regular updates

HPB_bot:
	linkfunc.cpp - Added trigger_script and weapon_charge

lua:
	lua.dsp - Updated lib with more files
	lua.lib - Updated with library functions

mod:
	New files: AvHAlienEnergyConstants.h - Rates for abilities and weapons
	New files: AvHAlienWeapon.* - New base class for alien weapons (long overdue)
	New files: AvHScriptClient.cpp - Client script bindings
	New files: AvHScriptServer.cpp - Server script bindings
	New files: AvHScriptShared.cpp - Shared script bindings
	New files: AvHScriptManager.* - Manages running scripts
	New files: AvHWeldable.* - Moved weldable into it's own set of files
	AvHAlienAbilities.* - Added charge, updated leap as it now inherits from AvHAlienWeapon
	AvHAlienAbilityConstants.h - Added charge constants, updated cloaking constants for new alien upgrade system
	AvHAlienWeaponConstants.h - Spit does 20 damage
	AvHAlienWeapons.h - Alien weapons updated to extend AvHAlienWeapon
	AvHBaseBuildable.cpp - Added armory animations
	AvHBasePlayerWeapon.* - Changes to allow weapons to not use ammo, but still have a cost
	AvHBasePlayerWeaponConstants.h - Added charge, removed cocoon
	AvHBite.cpp, AvHBlinkGun.cpp, AvHBuildGun.cpp, AvHClaws.cpp, AvHCocoon.cpp, AvHDivineWind.cpp, AvHEggLayer.cpp, AvHEnsnare.cpp, AvHHiveGun.cpp, AvHParalysisGun.cpp, AvHParasiteGun.cpp, AvHSniperGun.cpp, AvHSpikeGun.cpp, AvHSpitGun.cpp, AvHSpore.cpp, AvHSwipe.cpp, AvHUmbra.cpp, AvHWebspinner.cpp - Refactored so alien weapons extend from AvHAlienWeapon.
	AvHClientUtil.* - Regular update
	AvHClientVariables.h - Added cl_particleinfo
	AvHConsoleCommands.cpp - Fixed possible crashing when typing console commands into a dedicated server, refactored LUA support, added "run x" and "clientrun" scripting commands (where x is the script name), added "killcs" (kills command station) and "killhive" commands when cheats are enabled
	AvHConstants.h - Regular update
	AvHDramaticPriority.h - Added priority for gestating an upgrade
	AvHEntities.* - Added trigger_script, moved func_weldable into it's own file, added marine respawn cost, added ability to restore command stations with welder
	AvHMarineWeapons.h, AvHKnife.cpp, AvHMachineGun, AvHHeavyMachineGun.cpp, AvHPistol.cpp, AvHGrenadeGun.cpp, AvHGrenade.cpp, AvHFlameGun.cpp, AvHWelder.cpp, AvHNukeGun.cpp - Marine weapons now extend AvHMarineWeapon (long overdue)
	AvHEvents.cpp - Added charge event
	AvHGamerules.* - Added scripting support (including world checksumming)
	AvHHelp.cpp - Added profiling and huge performance improvement for help text (it was computing every tick and didn't need to)
	AvHHive.cpp - Attempt to fix problem where hives aren't respawning players properly (still not right)
	AvHHud.* - Added new alien energy (and system) and resource sprites.  Added client-side scripting.  Removed net screenshots because we're out of network messages.  Fixed 128 HUD sprites error by moving many sprites into multiframe sprites (cursors, orders, etc.).  Added support for cl_particleinfo.  Added new alien upgrade system.
	AvHHudRender.cpp - New alien energy and resource indicators, added drawing support from scripts, added cl_particleinfo client variable, added overwatch indicator, new commander HUD artwork tweaks
	AvHItemInfo.cpp - Updated to get rid of ammo for all alien weapons, use energy instead.  Moved some weapons around.
	AvHMarineEquipment.cpp - Added respawn cost for marines, aliens can use phase gates now
	AvHMarineWeaponConstants.h - Pistol damage tweaked
	AvHMessage.h - Added charge ability
	AvHMovementUtil.* - Added utility functions for alien energy system
	AvHOrder.cpp - Regular update
	AvHParticleSystem.cpp - Added support for cl_particleinfo, debugging functionality
	AvHPlayer.* - Refactored gestating for upgrades, added client scripting support, removed network screenshots (out of message), new alien upgrade system, morphing not allowed until game starts, profiling info added, HUGE performance enhancements (blip think, enemy sighted think!), fixed observer problem where you could observe enemy, cap alien resources
	AvHPlayerUpgrade.* - New alien upgrade system
	AvHServerUtil.* - New alien upgrade system
	AvHServerVariables.h - Regular update
	AvHSharedUtil.* - Added AvHSHUGetTime()
	AvHSpecials.* - New alien upgrade system (phew!)
	AvHSpikeGun.cpp - Spike gun uses new energy system
	AvHSprites.h - Regular update
	AvHTeam.* - New team upgrade system, killcs console command

pm_shared:
	pm_shared.cpp - New alien upgrade system (silence), started to add level 5 charging, leap works when on the ground now, new alien energy system, flight uses energy

New files:
	scripts/buildtest.lua
	scripts/movetest.lua
	scripts/ns_test.lua
	scripts/tritest.lua
	testbed.bat

ui:
	UIUtil.* - Updated to allow more functionality (for drawing multiple bars)

util:
	New files: Checksum.* - Used to track named checksums for testing and verification
	CString.h - kMaxStrLen was interfering
	STLUtil.* - More utility functions
	Util.dsp - Added Checksum.*


Post-crash checkin
------------------
Post-crash checkin.  Restored @Backup from around 4/16.  Contains changes for last four weeks of development.

Tuesday, 5/28, NSIPT7
---------------------
O Redo repository and get @Backup setup again 5/22
O Fixed max entities problem (this was the main server crash we saw) 5/22
O Rework hive sight 5/23
O Web stuff 5/23
	O Webs now affect friendly aliens in tournament mode
	O Webs are now permanent
	O Web energy cost increased to .2
	O There is now a team limit on webs, if you try to build more, you'll get a message saying your team is at the max
	O Webs slow down marines more
	O Do scan to make sure there aren't too many webs in one area
	O Solidity problems for web...how to destroy yet not block the player?  Welder removes webs now!
O Moved resource tower gun to second slot, as 1 hive is needed
Buildable command stations!
	O Fix command station entity (make it functional, stop it from floating)
	O Menus, costs
	O When command station is destroyed, only allow kick out commander if there are none left for team
	O Make command stations buildable, but first one starts built
Allow building recycling for cash
	O Get half points back, unless it's destroyed before it finishes
	O Works for most buildings, but not turrets...fix
	- Test recycling
O Added first pass of shotgun artwork 5/24
Fix problem where selecting command station didn't change the menu
- Add alien turret (using offensive chamber)
	- Added basic code...but it's crashing
		- Try marine model
		- Fixed it, it was a NULL ping sound (note to self: random crashes in the engine occur when playing a NULL sound name)
	- Now it's firing, but it's blocking itself
- Secondary alien building functions
	- Defensive chamber heals friendly players
	- Movement chamber teleports friendly player to nearest hive
	- Sensory chamber marks enemies for hive sight
O Flier has spikes with one hive
O Fix hive respawning (again)
O Fix marine respawning (ASSERT)
O Fixed bug where alien upgrades weren't being cleared between levels, causing eventual overflows for alien players after many games
Rework minimap
	O Refactor naming to "entity" instead of "player" 5/23
	X See NSIPT8
Fixed bug where "couldn't play sound "/" message displayed when using the level 4 melee
Added first pass of level 4 artwork (thanks a ton Mojo!)
Added first	pass of shotgun (thanks Def_One!)
Added first version of ns_penumbra (thanks Yamazaki!)
Added second version of ns_freon (thanks Narby!)
When in testing mode (mp_testing = 1), your resource level will actually be the current number of entities 


base: 
	ns.fgd - Made command station a point-based entity
	buildzip.bat, assets.txt, titles.txt, skill.cfg, listlist.gam, motd.txt - Regular update
	
client:
	ev_hldm.cpp - Play ricochet sounds quieter, because HL didn't normalize their sounds
	cl_dll.dsp - Started to refactor player hierarchy to entity hierarchy

dlls:
	weapons.* - Added hook so weapons could set their time to fade out after they hit the ground
	util.* - New utility function UTIL_CountEntitiesInSphere
	player.* - Added DestroyAllItems(), to deal with player items appropriately (part of max entities fix)
	observer.cpp - Reinforcement refactoring
	client.cpp - Role sounds are precached a bit differently, they're called rolex_whatever now, part of fix where game was crashing when no sounds for a list were found, also reinforcement refactor
	cbase.h - Virtualized SetBoneController() so alien offensive chamber could work without bones
	hl.dsp - Added alien turret, refactoring minimap

doc:
	Checkin.txt, AvHTODO.txt - Regular updates

mod:
	New files: AvHAlienTurret.* - Offensive chamber that shoots spit
	New files: AvHEntityHierarchy.* - New name for old AvHPlayerHierarchy.*.  Ready to refactor for working minimap.
	Removed files: AvHPlayerHiearchy.* - Moved into AvHEntityHierarchy.*
	AvHAlienEquipment.* - Added new turret instead of old offensive upgrades chamber, added secondary functions
	AvHAlienWeapon.* - Reduced times where alien weapons are dropped and picked up again (but didn't eliminate, they are still being instantiated somewhere)
	AvHAmbientSound.h - AvHEntityHierarchy refactoring (for new minimap)
	AvHBaseBuildable.* - Added building recycling, mark mapper placed buildables so they aren't destroyed at the end of the round
	AvHBasePlayerWeapon.* - Max entities fix, added animation empty fire
	AvHBuildingGun.cpp - Don't perform max # check for offense chambers (only for upgrade buildings)
	AvHCommanderModeHandler.* - Added recycling, added fix for occasional crash when selecting command station with some lag
	AvHConstants.h - Reinforcment refactoring, renamed role sounds to be less confusing
	AvHEntities.* - Track number of web strands to enforce limit, reworking of webs in general, removed duplicate code for AvHResourceTower
	AvHEvents.* - Don't play machine gun or pistol sounds louder when upgraded, changed welder from looping sound to periodic sound
	AvHGamerules.* - Minimap refactoring, hive sight "under attack", reinforcement refactoring, don't delete entities marked as permanent (it was deleting hives!), allow players to join the opposite team until this can be fixed for real (server retry gets around this code so this is just an inconvenience), things build fast with cheats
	AvHMachineGun.cpp, AvHPistol.cpp, AvHPistol.cpp, AvHHeavyMachineGun.cpp, AvHGrenadeGun.cpp - Tweak weapon deploy volume, as Valve's sounds weren't normalized
	AvHSonicGun.cpp - Tweak weapon deploy volume, as Valve's sounds weren't normalized, started to use new reload method (reload each shell)
	AvHWelder.cpp - Tweak weapon deploy volume, as Valve's sounds weren't normalized, welder clears webs now, welder no longer makes ambient hum, slight refactoring of variable names away from Valve style
	AvHHive.cpp - Mark hives as persistent so they aren't deleted on level cleanup, new hive sight support, reinforcement refactoring and fixes
	AvHHud.* - Minimap refactoring, reinforcement refactoring, new hive sight fixes, recycling support
	AvHHudRender.cpp - Hive sight sprite changes
	AvHItemInfo.cpp - Moved resource tower to second slot
	AvHMarineEquipment.* - Tried to make nuke sound play, extended shake duration to sound length, reinforcement refactoring, mark command stations as mapper placed, so they aren't deleted on level cleanup, support for point-entity buildable command stations
	AvHMarineEquipmentConstants.h - Removed extra knife sounds, tweaked HMG ROF for sound purposes, added marine deploy weapon volume so our sounds are normalized
	AvHMarineWeapons.h - Started to add special animations for shotgun
	AvHMessage.h - Added support for recycling
	AvHMovementUtil.cpp - Tweaked costs for swipe and web
	AvHParasiteGun.cpp - Parasite works properly in tournament mode now
	AvHParticleSystem.cpp - Temporary fix for bast.  It was creating crazy amounts of particle systems and should be investigated immediately.
	AvHPlayer.* - Refactored size for role code for movement chambers, deal with inventory properly (entity leak), increased web ensnaring effects (put weapon away!), reinforcement refactoring, tweaked speeds so marines are a little slower, and speed upgrade works properly again (now level 1 can generally outrun marines), added recycling support, play destroy egg sound when killed when morphing, new hive sight, EffectivePlayerClassChanged() refactoring
	AvHSelectionHelper.* - Player hierarchy refactoring
	AvHServerUtil.cpp - Sensory chambers contribute to hive sight
	AvHSharedUtil.cpp - Changed "entity blocked by whatever" message to be logged for PR/screenshot purposes
	AvHSiegeTurret.cpp - Reduced tracking rate for siege
	AvHSoundListManager.cpp - Error-checking, don't play sounds if none are found
	AvHSpecials.h - Added recycling and persistent masks
	AvHTeam.* - Track number of webs for team, fix for premature victory condition (again), fixed bug where alien upgrades weren't being cleared between levels, causing eventual overflows for alien players after many games, recycling support, spawn in command center when game starts
	AvHTeamHierarchy.* - Refactoring player hierarchy to entity hierarchy, updated tons of variables names
	AvHTitles.h - Regular update
	AvHTurret.* - Put in slower, randomish rate of fire for turrets for sound variance and drama, don't play ping if no ping sound specified (crashing with offensive tower)
	AvHVisibleBlipList.* - New hive sight (different states for different targets)
	AvHWebSpinner.cpp - Limit total webs, limit webs in sphere



Monday, 5/3, NSIPT8
-------------------
O Hive hitpoints tripled (6000) 5/27
O Added secondary alien building functions (this happened on Monday so some have played it)
(defensive structures heals nearby players and structures, movement chamber teleports player back to nearest hive, sensory chamber sees enemies, offense chamber is like a turret)
O Spike attack energy cost increased slightly, web rate of fire increased to 2 web per second instead of 1 per 2 seconds
O Removed siege turrets while I rework them into real artillery role
O Marine armor and damage upgrades toned down considerably
O Marine respawn cost higher
O Alien resource tower and hive costs increased
O Resource nodes now have 150 resources instead of 300
O Ammo pack cost reduced to 1 point (was 2)
O Tweaked weapon speeds (welder weighs, slow grenade launcher, lighten shottie, etc.)
O Marine building changes
      O Rename armory to arms lab
      O Rename weapons factory to arsenal
      O Add ability for marines to get more ammo by using the arsenal
O LMG artwork and animations
O HMG artwork and animations
O Pistol artwork and animations
      O Including empty reload
O Show level of alien in scoreboard
      O Also, don't show rank for opposing teams
O Give points for building a hive (to 5)
      O Increased points for building resource towers also (3)
O Weapons factory changes (now called the "arsenal")
      O Gives ammo to current weapon slowly when used
      O Help message when near
O Tons of new alien sounds
O Hive sight that shows you EVERYTHING under attack.  If something comes under attack all the way on the other side of the map, it will blink red so you can do something about it.  It's not just players and hives anymore, it's everything.  I haevn't been able to repro the hive sight not showing up bug, but that will likely be fixed as well.
O Showing state for aliens (LVL1, LVL2, GEST, DEAD, etc.).  The state for a player only shows for his team.
O Movement chamber must be "used" to teleport (instead of just touching it)
O Help messages for both friendly and enemy alien structures.
O Def chambers should heal everything on your team
O Tons of balance changes (hive hitpoints way up, marine respawn cost up, weight/speed tweaks, tons more) 
O The ability to walk up to the arsenal (what used to be the weapons factory) and hold your use key to resupply your current weapon with ammo, slowly.
O Removed mines temporarily while they are fixed and new artwork integrated
O Alien turrets fire smoothly now (client-side weapon spit effects)
O Defensive chambers now also heal other buildings, hives, etc.
O New hive animations (two idle animations, two flinches when attacked, death animation, scared when touched by enemy on other team)
O Hera is back
O Penumbra has been updated (Monday's version, but for everyone)
O Fixed grenade launcher aiming
O New marine HUD sounds
O Level 1 spiky footsteps
O Level 1 view model (!)
O Increase hive sight to be unlimited
O Fixed bug where rebuilt hives weren't full health when spawned
O Level 1 view model for bite, parasite, leap and divine wind!
O Turret ping is quieter
O HMG does more damage now
O Fixed breakables, func_doors, func_door_rotatings, and func_buttons receiving damage 5/30
O Hive spawn in 3 minutes now, sentries down to 500 hp instead of 1000
O Fixed bug where empty sound was playing twice (once on client, once on server)
O Toned down carapace a lot, cranked up HMG damage
O Added "invul" cheat (type once to make yourself invulnerable, type again to turn off)


base:
	skill.cfg, titles.txt, liblist.gam, config.cfg, buildzip.bat - Regular updates

cl_dll:
	hl/hl_weapons.cpp - Updated weapons with real NS artwork (added constants and propagated data to client)
	ammo.cpp - Reduced HUD sound volume now that sound effects are normalized
	com_weapons.cpp - Allow passing a negative number for a view model anim to play no anim
	entity.cpp - Propagate data for correct weapon behavior
	vgui_ScorePanel.cpp - Show player status for players on your team (LEV1, GEST, COMM, etc.)

dlls:
	weapons.* - Fixed bug where empty sound was playing twice (once on client, once on server), renamed weapons factory and armory, fixed idle and reload sync problems between client and server
	tripmine.cpp - Added new mine artwork
	client.cpp - Added level 1 footsteps, propagate data for weapons
	ggrenade.cpp - Replaced hard-coded sounds with constants
	hl.dsp - Experimented with pushable/buildables for siege turret

doc:
	AvH TODO.txt, Checkin.txt - Regular updates

HPB_bot:
	linkfunc.cpp - Renamed weapons factory and armory

mod:
	New files: AvHPushableBuildable.* - Experimented with pushable/buildables for siege turret
	AvHAlienAbilities.* - Proper anims for alien abilities
	AvHAlienWeaponConstants.h, AvHAlienAbilities.h - Removed outdated v_leap.mdl (!)
	AvHAlienEquipment.* - Movement chamber needs to be used to teleport, get points for building resource tower, defense chambers heal buildables too, improved sensory chamber (still has problems though), removed duplicate hive classname
	AvHAlienTurret.*, AvHAlienEquipmentConstants.h - Moved chamber firing into an event, added turret constants
	AvHAlienWeapon.* - Switch alien weapons quickly, renamed CheckValidAttack()
	AvHAlienWeapons.h, AvHBite.cpp, AvHParasiteGun.cpp, AvHDivineWind.cpp - Animation constants and changes with new artwork
	AvHBaseBuildable.* - Allow alien buildings to regenerate, renamed weapons factory and armory
	AvHBasePlayerWeaponConstants.h, AvHBasePlayerWeapon.* - Added resupply (from arsenal), better animation support (for both view model and player model)
	AvHBlinkGun.cpp, AvHBuildingGun.cpp, AvHClaws.cpp, AvHCocoon.cpp, AvHEggLayer.cpp, AvHEnsnare.cpp, AvHFlameGun.cpp, AvHHiveGun.cpp, AvHNukeGun.cpp, AvHParalysisGun.cpp, AvHPrimalScream.cpp, AvHSniperGun.cpp, AvHSpikeGun.cpp, AvHSpitGun.cpp, AvHSpores.cpp, AvHSwipe.cpp, AvHUmbra.cpp, AvHWebSpinner.cpp, AvHWelder.cpp - Added different deploy times (this should be refactored a bit more)
	AvHMarineWeapons.h, AvHMachineGun.cpp, AvHPistol.cpp, AvHSonicGun.cpp, AvHKnife.cpp, AvHMine.cpp, AvHHeavyMachineGun.cpp - Constants and tweaks to make weapon anims and times correct with new artwork, added different deploy times (this should be refactored a bit more)
	AvHGrenade.cpp, AvHGrenadeGun.cpp - Added different deploy times (this should be refactored a bit more), refactored grenades
	AvHBuildable.* - Default point cost for anything buildable is 1
	AvHCommanderModeHandler.* - Renamed weapons factory and armory
	AvHConsoleCommands.cpp - Added "invul" cheat
	AvHConstants.h - Removed duplicate hive class name, added more player class types for scoreboard info
	AvHEvents.cpp - Moved offense chamber firing into event, fixed duplicate empty sound (now it's an event, not server-side), weapons play view model anim in weapon (not event), started to add grenade event for grenade gun
	AvHGamerules.cpp - Breakables and buttons take damage like they should, points added for buildables correctly, weapon weights tweaked
	AvHHelp.cpp - Help for arsenal, help for alien building secondary functions (help me, I need to be rewritten!)
	AvHHive.* - Hives are base buildables now (bug with allowing use to speed building), added other hive anims for hurt, death, bad-touch, fixed bug where hives didn't get full health when they were initially built (after being killed once)
	AvHHudRender.cpp, AvHHud.* - Help sprites moved into one animated sprite, select sound volume reduced (now that sound is normalized)
	AvHMarineEquipmentConstants.h, AvHMarineEquipment.* - Renamed weapons factory and armory, added ammo resupplying
	AvHMarineWeaponConstants.h - Regular update
	AvHMessage.h - Renamed weapons factory and armory
	AvHMovementUtil.cpp - Tweaked spike energy cost
	AvHPieMenuHandler.cpp - Sound volumes tweaked because sound is normalized now
	AvHPlayer.cpp - Added more effective player classes for scoreboard, send player class every time role changes (more network usage, always updated), changed hive sight to always be visible when under attack, all entities added to hive sight, not just players
	AvHPlayerUpgrade.cpp - Toned down carapace and marine upgrades
	AvHServerUtil.cpp - Toned down carapace and marine upgrades, removed redundant hive class name, all buildables are subject to visibility rules
	AvHSharedUtil.cpp - Renamed weapons factory and armory, hive is now a buildable
	AvHSoundConstants.h - Added level 1 footsteps
	AvHTechID.h, AvHSpecials.h - Renamed weapons factory and armory
	AvHSprites.h - Help sprites moved into one animated sprite
	AvHTeam.cpp - Removed mines and siege temporarily while being worked on, removed old code, removed redundant hive class name
	AvHTitles.h - Regular update (alien building help text, effective player classes for aliens)
	AvHTurret.h - Experimented with pushable/buildable siege turrets
	AvHTurret.cpp - Reduced turret volume

pm_shared:
	pm_shared.cpp - Added level 1 footsteps


Monday, 5/10, NSIPT9
--------------------
Minimap rewrite
  Works now.  The commander can see all friendly buildings (blue), friendly players (green), enemy buildings and players that are in LOS (red), hive locations (white) and more.  There are also some animated sprites for different player states, like a blinking exclamation mark when an enemy is in sight of a player, a red "x" where a player died, etc.  Some of these sprites work, some don't.  The overall color scheme and ease of reading this information still needs tweaking, but this build should allow the commander to keep track of all his troops and enemies, no matter where they are.
  Draw portion of the minimap for soldiers (non-commanding marines).  Soldiers can see around them, but not as much as the commander.  KNOWN ISSUE: soldiers can't see their fellow players, or even themselves on the map.  This will be added.
  Minimap rectangle replaced with a circular nub, so it's no longer wildly inaccurate.
  All minimaps regenerated, only one sprite needed now, and it's scaled accordingly.
  NOTE: The minimap has to do a fair amount of tricky updating to make sure it doesn't send more info that it has to, and in order to not adversely affect NS network performance.  Please be on the lookout for network performance changes (though I think it's quite efficient).

New commander UI
  It's now a 3x4 grid, instead of 3x3.  The build, advanced build menus are always available, and there's now an "equip" menu as well.  The equip menu gives you access to health, ammo, and all weapons.  These three menus should never go away, so you can always have access to all buildings and equipment without selecting a building!  To do research, and to upgrade buildings, you still need to select the building, but you should NEVER have to select the command station, and you will never have to scroll back to your base, select something, then scroll back to the battle to do somethin

Customizable commander hotkeys
  Many actions in commander mode can be customized.  This may not be fully working yet, but try binding keys to the "build", "Advanced build" or "Equip" menu in the control config area.  There is also half-working support for scrolling around with whatever keys you want (though there are problems with it still).

  Fixed components not getting first gamma change (minimap esp.)
  Fixed bug where entities disappearing in some congested areas (go crazy with buildings now!)
  Fixed hive sprites not showing up (I think, please verify)
  Fixed minimap not showing up
  MG clip increased to 50 bullets
  Grenade launcher increased to 300 points damage (up from 145, it's super powerful now, watch it)
  Removed marine blood, made alien blood yellow
  Removed slowdown when hit, until thought through
  New marine knife model in! (thanks DefOne!)
  New builder view model in! (thanks DefOne!)
  Changed bot names to they don't mess with stats
  New version of bast: tweaks to prevent getting stuck in the engine room and on the slanted elevator
  Many more webs are allowed now (now that visible entities problem is fixed)
  Builder chambers moved around: Sensory chamber with 1 hive, def chamber with 2, movement and offense with three
  Level 1 no longer floating, his animations are fixed.  He shouldn't poke through the walls and actually looks somewhat fearsome now! (thanks Mojo!)


base:
	ui.txt, titles.txt, skill.cfg, liblist.gam, config.cfg, buildzip.bat, bot_names.txt, assets.txt - Regular update

cl_dll:
	input.cpp - Better support for scrolling

dlls:
	gamerules.cpp - Tried to fix player angle not being used when spawning
	doors.cpp - Public fix for horrible door/sound bug (not sure if this fully fixes it)
	client.cpp - Fixed visibility bug, may be the cause of overflows

doc:
	Checkin.txt, AvH TODO.txt - Regular updates

mod:
	AvHWebspinner.cpp - Allow more webs now that visible entity problem is fixed, new level 2 view model
	AvHSpitGun.cpp, AvHBuildingGun.cpp, AvHHiveGun.cpp - New level 2 view model
	AvHActionButtons.cpp - Removed accelerator character, now these are bindable via commands
	AvHAlienWeapons.h, AvHAlienWeaponConstants.h, AvHAlienAbilities.cpp, AvHBite.cpp, AvHParasiteGun.cpp, AvHDivineWind.cpp - Updated with new alien view model artwork (with running anims)
	AvHBasePlayerWeapon.* - First-pass at level 1 animated view model (different anims when running and walking)
	AvHCommanderModeHandler.* - New commander UI
	AvHConstants.h - Regular update
	AvHEntities.cpp - Marked non-visible entities as nodraw, fixes visible entities problems!
	AvHEntityHierarchy.* - Rewrote minimap
	AvHGamerules.* - New minimap support, more attempts to fix picking up of alien weapons
	AvHHud.* - New commander UI (bindable via hotkeys, added REMOVE_SELECTION for when clicking menu options when no players selected)
	AvHHudRender.cpp - Allow drawing just a portion of a texture when scaling it, draw team hierarchy for soldiers
	AvHItemInfo.cpp - Regular update (moved alien upgrade chambers around)
	AvHMarineWeapons.h, AvHKnife.cpp - Updated with new knife artwork
	AvHMarineEquipment.cpp - Scan update happens more often, in case aliens go cloaked during scan
	AvHMarineWeaponConstants.h - MG clip size increased to 50, grenades toned down
	AvHMessage.h - Update for new commander UI
	AvHMiniMap.* - Minimap now generates one image which it scales, instead of the old crappy way.  Fixes minimap appearing over scoreboard bug in CM.
	AvHParticleSystem.cpp, AvHScriptClient.cpp - Updated extern references to drawing code (ugh)
	AvHPlayer.* - Updated for new minimap (remember killed position).  Updated blood so marines aren't bloody, and aliens emit yellow blood.  Removed slowing when hit (now players fly back when hit though), UpdateBlips() hack (fix when time)
	AvHSelectionHelper.* - Added more functionality for new commander UI
	AvHTeamHierarchy.* - Completely reworked minimap.
	AvHVisibleBlipList.cpp - Blip list wasn't being cleared properly (?)

ui:
	UIManager.* - Set gamma slope for gamma-aware components when they are created (fixes bug where gamma slope is propagated too early)
	


NSIPT10 - NSIPT10b
------------------
O Fix bug where commander that's disconnected still blocks command station
O Add map location entity
O Move alien buildings to pop-up menu
O Draw "resources" near resources (only when cl_autohelp enabled)
O Draw "energy" near energy (only when cl_autohelp enabled)
O Don't add and remove weapons, just disable them
O Change random blinking icon to blinking category, blinking in place where upgrade will go
O Added error messages when trying to build structures when not a builder, or when not enough structures
O A hive is now needed to gestate into flier
O Towers and hives always available, alien turrets need 1 hive, defense and movement chambers require 2 hives, sensory chambers require 3 hives
O New grenade model for grenade launcher
O New world/player handgun model
O New projectile for acid launcher and spikes
O Fixed freezing bug (with looping sound, during scenes of action!)
O Got mines working again
O Updated motd.txt and maplist.txt with new .bsps
O Fixed memory overwrite bug in SDK in scoreboard 
O Reworked player animations now many more are played, no more "airplane marines"!  Thanks for the anims, Mojo and Guy! (there are even a couple death animations in there!)
O Removed egg_die on gestate (now play real sound)
O Add sparks for marines when they are hit
O Added smooth resource adjustment (instead of just setting the number/bar-level, it smoothly increments towards it)
O Added realistic fall damage by default
O Fixed bug where game wouldn't end if a team suddenly had no players
O Inactive hives are now drawn for aliens, so they can find where they're supposed to be created
O Added timelimit command -> When game ends, if timelimit has been reached, it switches the map (as opposed to switching maps in the middle of a game)
O Late join time (mp_latejointime) changed to minutes (not seconds) and now defaults to 1 minute
O Added numeric indicators and labels for alien resources and energy
O Updated {alien_alpha to have less blue edges (Merks)
O Updated ns.wad with Terawatt's transition textures
- Level 1
	O Make leap do damage
	O Added flavor animation (picking teeth)
	O Remove cheat where anyone can leap
	- Add predicted/client-side damage feedback sound when touching player?
	O Changes for new view model 
	O Add visual indication to parasite
		- Added code, but it doesn't show up?
- Level 2
	O Give builder web first, instead of spit
	O Removed point cost for webs
	- Change builder spit to be corrosive spit, does damage over time, esp. to welds (give it with 3 hives)
	- Add new view model artwork
		- Do it again
	- Add healing/energy weapon
		- Everything working but event
	- Needs one more ability...
- Level 3
	O New view model (spikes, spores, bite and transition animations)
	- Think about bite more (1)
		O Add new weapon (last one?!)
		O Add artwork
	- Spikes (2)
		- Animations
		- Shoot fast spike model (alternate left/right when shooting)
	- Spores (3)
		- Animations
	- Bombs (4)
- Level 4
	- Add double-jump
	- Rocket-launcher instead of spikes (2)
		O Add basic code
		O Get the artwork for it started
		O Make it explode in goo when it hits
		- Make sure it doesn't hurt self in tournament mode (at least not when it leaves launcher)
		- Make it look nice
	- Change blink to be like BZII blink! (3)
		O Rewrite
		- Fix problems getting stuck
		O Make it easier to blink (don't trace hull, just end point)
		- Add visual indicator?
		- Better sound effects, feedback
	- Umbra (with three hives) (4)
		- Basic code
		- Make it block turrets...and bullets?
		- Make it look better with new artwork and sounds
		- Figure out a new ability for this, the turret thing is a bit hacky and hard to do
- Level 5
	- Artwork
	- Bounding box, size, cost, speeds
	- Huge hitpoints
	- Galloping? (the longer you go in a straight line, the faster you can go?)
		- Add basic speed code
		- Make sound effects
	- Melee (add some spice here...knockback?) (1)
	- Charging attack (2)
		O Got basic thing working
	- Paralysis (3)
		O Seems to be working, though a bit boring right now
	- Primal scream (4)
	- (swallow weapon?)
- Fix iteminfo problem with acidrocket (the mID value is too high, what to do?)
	O Try consolidating all the building IDs down into one ID (ugh, didn't work)
	O Write Valve?
	O Move build actions to pop-up menu!
		O Remove hacky help system
		O Now all resources are spent off menu, never from weapons
		O Room for other builder abilities
O New builder UI
	O All buildings are on the pop-up menu now, so anything that costs points is on the menu
	O Cleans up clutter of weapon icons, makes interface more clear
	O Uses menu help instead of separate help system
	O Workaround for 32 max weapons problem (engine limitation)
	O Update help text to be more descriptive
O New named locations tell players where they are (also works for commander)
	O Draw info_location text nicely
		O Added sprite for soldiers
		O Tweaked position for commander and aliens
O Don't draw health while gestating
O Spit damage upped from 20 to 28
O Added custom button sounds (button1->button10.wav)
O New flashlight sound
O New launcher sounds, brightened launcher artwork (temporary)
O Play special animation when builder is building
	- Only plays once, how to keep playing it?
O New version of bast (locations)
O New version of hera (new warehouse, new layout changes, locations, more)
O Remove costs to respawn on both sides
O Add rewards for kills on both sides (and for building on alien side?)
O Add advanced weapons factory as research
	O Rename arsenal to armory first
	O Add new upgrade command
	O Add code to handle upgrade
	O Build times changed (30 secs to build armory, 120 to upgrade to adv. armory)
	- Tweak code that converts it, it thinks it's buildable and stuck at 0%
- Player animations
	O Create constants from info sent to Mojo
	O Start integrating
		O Walk, run
	O Fix marines quickly for NSIPT10?
O Fix bug where deaths aren't reset when game is
O Both sides now get points for killing enemies!  This should speed up the game.  More points are given for bigger aliens.
O There is no respawn cost for either side now.  This should speed up the game.
O Victory condition fixed (bug #111)
O Machine gun damage increased from 10 to 12 points
O Leap damage reduced to 20
O Acid rocket rate of fire decreased dramatically
O Spore damage reduced from 50 to 45
O Spore radius reduced from 300 to 250 (to line up with artwork)
O Level 5 cost reduced from 100 to 75
O Acid rocket awards points to owner correctly now
O Shotgun range dropped from 4000 to 1000, damage decreased from 27 to 23
O Turret damage reduced from 50 to 43
O Base points awarded for a kill reduced from 5 to 4
O Getting stuck when evolving as a level 5 (bug #113)
O Getting stuck when evolving in small places ()
O Fixed bug #130 (parasite works while in commander mode)
O Reduced stepsize for level 5 (so he doesn't walk over marines instead of charging into them)
O Fixed bug #115 (weapons sometimes red when they shouldn't be on both sides)
O Temporarily removed buggy sensory chamber sight, it was causing players to show up when not visible
O Fixed bug #82 (ghost building not updating when changing your mind about what to build)
O Acid rocket doesn't leave phantoms anymore, works better now also


base:
	buildzip.bat, listenserver.cfg, mapcycle.txt, server.cfg, skill.cfg - Regular update
	liblist.gam - Added training map (enables training button in launcher)
	titles.txt - Regular update.  Added official map location names.
	delta.lst - Increase size for health, propagate iuser3 for weapons (for enabling/disabling weapons according to # of hives)
	ns.fgd - Added info_location 
	ns.ps - Added level 4 blink effect
	ui.txt - Move alien building actions to pop-up menu

cl_dlls:
	hl/hl_weapons.cpp - Removed old weapons, added new weapons, fixed mines, iuser3 enables and disables weapons 
	ammo.cpp - Removed old weapon help system (now it's all on pop-up menu), iuser3 enables and disables weapons
	ammohistory.h - Weapon enabling/disabling works differently now
	StudioModelRenderer.cpp - Removed crash when gaitsequence is propagated as -1 (means we can't have 255 animations, oh no).  Beginning of wall-running model orientation.
	vgui_ScorePanel.cpp - Removed memory overwrite from hlcoder list
	cl_dll.dsp - Added mapcycle.txt to custom build, added new files

dlls:
	animation.cpp - When testing is enabled, report missing animations
	cdll_dll.h - Weapon category #5 is never used, so remove it
	client.cpp - Unbuilt hives are drawn faded out for alien players, propagate iuser3 for weapons (enable/disable state)
	combat.cpp - Wrapped bullet tracing, in preparation for umbra ability (so it could block bullets for players and turrets)
	game.cpp - Fall damage on by default, late join time in minutes (standard with other time settings)
	hl.dsp - Added mapcycle.txt to custom build, added new files
	player.* - Moved player animation specification into general virtual function, quieted flashlight sounds (because sound is normalized)
	weapons.* - Changed blood and blood color, removed old weapons, added new weapons, new events, temporarily removed deploy player animation (constants need to be rethought)

doc:
	AvH TODO.txt, Checkin.txt - Regular updates

HPB_bot:
	dlls/bot.cpp - Updated bot with point cost for level 5
	dlls/linkfunc.cpp - Updated entity names, removed old entity names

mod:
	New files: 
		AvHAcidRocketGun.cpp - Level 4 projectile
		AvHBaseInfoLocation.* - Entity for info_location
		AvHBileBombGun.cpp - Level 3 bomb attack
		AvHBite2.cpp - Level 3 bite attack
		AvHHealingSpray.cpp - Level 2 healing ability

	AvHAlienAbilityConstants.h, AvHAlienAbilities.* - Regular update for leap and charge
	AvHAlienEquipmentConstants.h - Regular update
	AvHAlienWeapon.* - Better default behavior
	AvHAlienWeaponConstants.h - Consolidated view models, correct animations for player models, removed ancient weapons
	AvHAlienWeapons.h - Better default behavior, removed building weapons
	AvHBaseBuildable.cpp - Regular update, don't assume anything about player building, renamed arsenal to armory
	AvHBasePlayerWeapon.* - Reworking for correct player animations and new enable/disable state
	AvHBasePlayerWeaponConstants.h - Removed building weapons, added new weapons
	AvHBlinkGun.cpp - Reworked blinking
	AvHBuildingGun.cpp - Removed this
	AvHCommanderModeHandler.* - Renamed some buildings, armory is now upgraded
	AvHBite.cpp, AvHClaws.cpp, AvHDivineWind.cpp, AvHGrenadeGun.cpp, AvHHeavyMachineGun.cpp, AvHKnife.cpp, AvHMachineGun.cpp, AvHMarineWeapon.*, AvHParalysisGun.cpp, AvHParasiteGun.cpp, AvHPistol.cpp, AvHPrimalScream.cpp, AvHSonicGun.cpp, AvHSpikeGun.cpp, AvHSpitGun.cpp, AvHSwipe.cpp, AvHUmbraGun, AvHWelder.cpp - Reworking for correct player animations and new enable/disable state, new view model artwork, alien weapon refactoring
	AvHMine.cpp - Fixed mine, refactored for new disabled/enabled state
	AvHSpores.cpp - Some refactoring, new view model artwork, removed old code
	AvHWebSpinner.cpp - Some refactoring, new view model, removed old code, no longer costs resources to use, web projectile can ensnare marines without creating web
	AvHConstants.h - Regular update (cleanup, new entities, new classnames)
	AvHEntities.* - New info_location entity, make resource tower sounds very quiet
	AvHEntityHierarchy.* - Quick fix during playtesting...why is this happening?
	AvHEvents.cpp - Removed old events, added new events, fixed infinite loop crash in PlayMeleeHitEffects, added parasite projectile
	AvHGameRules.* - Added timelimit (switches map after a game finishes), added info_locations, tried adding team balance (not sure it works yet), give resources for kills
	AvHHelp.cpp - Removed help for building gun, renamed arsenal to armory
	AvHHive.cpp - Play sequence for non-active hives
	AvHHiveGun.cpp - Removed this
	AvHHud.*, AvHHudRender.cpp - Added info_locations, removed old weapon help system, added smooth resource swelling, lots of alien UI usability changes, fixed problem with ghost building
	AvHItemInfo.cpp - Mark weapons with hive flags, deleted old weapons, added new weapons, fixed mines, changed weapon IDs
	AvHMarineEquipment.* - Renamed some buildings, armory is now upgraded to advanced armory
	AvHMarineEquipmentConstants.h - Renamed some buildings, armory is now upgraded to advanced armory, fixed mine ROF (why doesn't the compiler catch this?), updated player animations
	AvHMarineWeaponConstants.h - Updated player animations, balance changes
	AvHMarineWeapons.h - Refactoring, cleanup
	AvHMessageID.h - Building rename, blinking change
	AvHMovementUtil.cpp - Energy costs tweaking, added new weapons, added charging
	AvHParticleConstants.h - Added umbra effect
	AvHPlayer.* - Added death animations, added more general animation support, leaps do damage, general construct effects, new alien inventory system, added charging, info_locations, galloping, new alien building code, better morphing system (prevents getting stuck), more builder error messages, clear deaths on game end, hide health while gestating
	AvHPlayerUpgrade.cpp - Removed old offensive upgrades
	AvHScriptManager.cpp, AvHScriptServer.cpp - Some enhancements and bugfixes for tutorial
	AvHServerUtil.* - Quieted construction effects (normalized now), temporarily removed sensory chamber sight, added upgrading of armory, wrapped bullet tracing for umbra
	AvHSharedUtil.cpp - Renamed buildings, better is-area-free detection
	AvHSpecials.h - Removed offensive upgrades, added charging, new alien upgrade system
	AvHSpecials.cpp - Removed old offensive upgrades
	AvHSprites.h - New alien upgrade system
	AvHTeam.* - New enabled/disabled system for alien weapons, better victory detection, updated tech tree (removed old junk, added armory upgrade), fixed bug where a commander that leaves the game hogged the station, update resources less often (optimization)
	AvHTechID.h - Renamed buildings
	AvHTitles.h - Regular update

pm_shared.cpp
	pm_shared.cpp - Cleaned up wall-crawling, in preparation for rotating model properly, added charging, updated position free code, only let level 1 aliens cheat with leap :), new level 4 blinking

scripts:
	testbed.bat - Regular update

util:
	MathUtil.cpp - Added float value of RotateValuesByVector



Monday, 6/1, NS RC1
--------------------
O Both sides now get points for killing enemies!  This should speed up the game.  More points are given for bigger aliens.
O There is no respawn cost for either side now.  This should speed up the game.
O Victory condition fixed (bug #111)
O Machine gun damage increased from 10 to 12 points
O Leap damage reduced to 20
O Acid rocket rate of fire decreased dramatically
O Spore damage reduced from 50 to 45
O Spore radius reduced from 300 to 250 (to line up with artwork)
O Level 5 cost reduced from 100 to 75
O Acid rocket awards points to owner correctly now
O Shotgun range dropped from 4000 to 1000, damage decreased from 27 to 23
O Turret damage reduced from 50 to 43
O Base points awarded for a kill reduced from 5 to 4
O Getting stuck when evolving as a level 5 (bug #113) (REALLY, it's fixed this time)
O Getting stuck when evolving in small places ()
O Updated models soldier, machine gun, and handgun world and player models
O Enlarged grenade
O Updated healing spray sprite
O Fixed bug #130 (parasite works while on commanders)
O Reduced stepsize for level 5 (so he doesn't walk over marines instead of charging into them)
O Fixed bug #115 (weapons sometimes red when they shouldn't be on both sides)
O Fixed bug #82 (ghost building not updating when changing your mind about what to build)
O Acid rocket doesn't leave phantoms anymore, works better now also
O Builder level 4 ability
	O Babblers!  Try it, you'll see.
O Primal scream.  The level 5 screams, and gives energy increases, speed increases, ROF increases and damage upgrades to all friendlies in range!  ATTACK!
O Level 4 Umbra ability!  Any friendlies inside the umbra are immune to bullets and turret fire.
O Level 3 Bile bomb!  This is a mortar, meant for taking out bases without a scratch.
O New HMG model (new model, unanimated)
O All view shaking affects players in air as well
O Siege turrets are back!
	O Siege rumbles screen if you're near it when it fires
	O Added siege splash effect
	O Just put them back in, aliens have artillery now as well
O Added concrete and metal sounds when bullets hit them
O Sensory chamber ability - parasites and lightly damages anyone who touches it, has tons of health
O Gibs are now off by default (but can be turned on via server config)
O Limit turret placement to radius around turret factory
O Limit weapon placement to radius around armory/adv-armory
O Limit infantry portals to range of command station (to prevent hiding them)
O Draw range of selected buildings when selected (turrets, etc.)
O Draw min/max range for siege turret when selected
O Removed overwatch (until there's time to do it properly)
O Marine backpedalling and strafing slowed down (I want feedback on this!)
O Fixed bug where dropping your weapon made it look like you weren't either a marine or alien player
O Ladder speed reduced for all players
O A slow-moving marine is slightly faster (frustrating)
O Level 1 speed increased, fixed alien speed upgrade bug (where 2 levels of speed upgrade was faster then 3)
O Added new hive vision mode for the aliens!  Press your flashlight key to see...
O Hive sight now only draws for entities out of sight (back the way it originally was, see if you like it better this way)
O Marines now see enemy blips with new artwork
O Two new sensory upgrades
	O Alien vision mode, for finding enemies and hidden enemy buildings
	O Scent of fear - you can see enemies under attack or that are seriously wounded so you can hunt them down...
O New blip artwork for marine team
O New mine artwork oriented properly (a little big and floaty still)
O Fixed all "invalid sprite x" errors after a level change
O Fix precache error that happens occasionally (move player assets into weapons.cpp)
O Network logging code to track down overflow one and for all
O Networking, overflow and performance enhancements.
O Removed alpha-male double resources (more resource changes coming soon)
O Hive building problems fixed (noticeable on ns_nothing)
O Fixed autobuild for resource towers and offensive chambers
O Don't allow hive building to be sped up
O Turret range reduced
O Removed alpha male resource model
O HMG damage increased, grenade damage decreased, bile bomb damage increased
O Logging for overflows
O Some network message buffering performance enhancements
O Fixed drawing of armor value in HUD
O Added view shakes for grenades
O Removed phase gate particle system, added implosion effect instead
O Removed outdated overwatch target and tension events

base:
	assets.txt, buildzip.bat, config.cfg, liblist.gam, listenserver.cfg, server.cfg, mapcycle.txt, ns.ps, skill.cfg, titles.txt - Regular updates

cl_dll:
	cl_dll.dsp, hl/hl_weapons.cpp - Added babbler gun
	battery.cpp - Fixed drawing of armor value in HUD
	ev_hldm.cpp - Added special ricochet sounds for metal and concrete surface types

dlls:
	client.cpp - Added special alien vision mode
	combat.cpp - Added umbra effects (don't do damage, play "blocked" sound)
	enginecallback.h - Added debugging/logging code for tracking down overflows
	game.cpp - Removed outdated variables
	ggrenade.cpp - Moved grenade damage to a constant, added view shaking when they go off nearby
	hl.dsp - Added babbler gun
	player.cpp - Removed flashlight battery message, not needed for NS
	tripmine.cpp - Moved mine damage to constant (used old HL constant in skill.cfg)
	util.* - View shaking works even in air (not just for gargantuas anymore), removed old network debug code
	weapons.cpp - Moved player assets out of AvHPlayer::Precache and into here (they weren't being called reliably there, fixes precache error), added babbler and bile bomb, removed old weapons, removed old command points sound
	world.cpp - Precache new ricochet sounds

doc:
	AvH TODO.txt, Checkin.txt - Regular updates

HPB_bot:
	linkfunc.cpp - Regular update

mod:
	AvHAcidProjectile.cpp - Removed unneeded linking entity to classname
	AvHAlienEquipment.* - Added auto-build to all alien buildings, added new parasiting ability to sensory chambers
	AvHAlienEquipmentConstants.h - Regular update
	AvHAlienTurret.* - Added auto-building, added damage upgrade (from primal scream), added vertical FOV (doesn't work yet)
	AvHAlienWeaponConstants.h, AvHAlienWeapons.h - Added new alien abilities (primal scream, babblers, bilebomb, umbra)
	AvHBaseBuildable.* - Added auto-build capability
	AvHBasePlayerWeapon.* - Removed outdated adrenaline concept, made ROF generic for primal scream
	AvHBasePlayerWeaponConstants.h - Added babbler id
	AvHBileBombGun.cpp - Implemented bile bomb
	AvHBite.cpp, AvHClaws.cpp - Removed adrenaline
	AvHParasite.cpp - Removed hard-coded parasite damage
	AvHUmbraGun.cpp - Implemented umbra weapon
	NetworkMeter.* - Added logging code to track down overflows
	AvHVisibleBlipList.* - Reworked sprites to be simpler and to allow more types
	AvHTurret.* - Added generic vertical FOV to allow alien turrets to shoot very high and low
	AvHTeam.cpp - Brought siege back, removed alpha male resource model
	AvHSprites.h - Removed outdated sprites, updated visible blips
	AvHSpecials.h - Regular update
	AvHConstants.h - Added new alien weapons, added build ranges
	AvHEntities.cpp - Toned down resource tower sounds (moved to CHAN_BODY to cut down on multiples playing)
	AvHMarineEquipment.cpp - Removed phase particles, added implosion instead, don't select command station on log-in (messy for drawing building radii)
	AvHMarineEquipmentConstants.h - Removed outdated commandpoints event, added siege turret shockwave, tweaked ranges and damage
	AvHEvents.cpp - Regular update
	AvHGamerules.* - Visibility update now updates world for primal scream and umbra, don't update reliable network messages every tick (big optimization)
	AvHMarineWeapons.h, AvHHeavyMachineGun.cpp - Tweaks for new artwork
	AvHHive.* - Hives can no longer be "used" to speed construction, wound sounds play on CHAN_BODY
	AvHHud.* - Removed lots of outdated sprites and sprite code, added building ranges, fixed ghost building problem (bug #82)
	AvHHudRender.cpp - Added primal scream effect, added building ranges for ghost buildings, removed outdated code, removed mapping build sprite, call vidinit() on hive sight sprites
	AvHItemInfo.cpp - Regular update (new weapons, new placement)
	AvHServerVariables.h, AvHMarineTurret.cpp - Removed turret range from skill.cfg (for visible building placement ranges)
	AvHMarineEquipmentConstants.h - Balance changes, removed outdated grenade constants
	AvHMovementUtil.cpp - Primal scream gives energy back faster, added energy usage for new weapons
	AvHPlayer.* - Removed outdated adrenaline concept, added new alien sight mode, primal scream, removed flashlight battery message, fixed morphing problems for level 5 (and others), tweaked marine and alien speeds, fixed triple speed upgrade problem, disabled overwatch, moved player assets out of precache() (wasn't being called reliably), get full energy after a lifeform change, hive sight only draws out of sight now, added scent of fear
	AvHPlayerUpgrade.cpp - Added offensive upgrade back, when under the influence...of primal scream!
	AvHPrimalScream.cpp - Refactoring
	AvHServerUtil.* - Added primal scream and umbra support
	AvHSharedUtil.* - Added support for generic building ranges, fixed morphing problems
	AvHSiegeTurret.* - Added siege shockwave effect, added view shaking effects
	AvHSoundListManager.* - Added debug code, added document headers
	client.cpp, weapons.cpp, AvHEvents.cpp, AvHConstants.h, AvHPlayer.cpp - Removed outdated overwatch target and tension events
	AvHMarineWeaponConstants.h - Moved grenade damage to a constant

pm_shared:
	pm_shared.cpp - Slow down marine strafing and back-pedalling (including footstep sounds), reduced ladder climbing speed 


Monday, 6/8, NS RC2
-------------------
- Fix armor display
	O Now it draws
	- Make current armor change proportionally when max changes
	- Bug: overlapping armor and health in some resolutions
O Siege damage much reduced
O Throttled networking more to combat overflows (4000 to 3000)
O Removed flashlight battery message
O Grenade damage lowered, mine damage lowered, bile bomb damage increased
O Grenade clip lowered, grenade max ammo lowered
O HMG damage increased

O Fixed permaweb bug, bug #167, bug #178, bug #128 (check for dupes first guys, just type a word and hit search, super-fast)
O Limit amount webs a marine can receive, 
O Removed ability for builder to use webs offensively by hitting players, bug #141
O Changed primal scream HUD color to green instead of red (people were getting rightly confused about their weapons being unuseable), bug #165
O Removed "bodysplat" sound when level 1 falls a long distance (bug #142)
O Added code to detect that a level has the right amount of spawns.  This information is printed to the console on level load. (bug #187, bug #169, bug #112)
O Weird "underwater" issues for commander above hera landing pad (bug #49)
O Removed use of "model" command (set the model every tick) (bug #211)
	- TODO: Also remove default model in RR?
O Addressed commander crashing when selecting things (bug #173)
- Added mp_teamresourcehandicap (if set to 1, biases team with less players with extra resources) (bug #202)
	O Changed func_resource to represent resources as a float
- Fixed problem where selection effects sometimes draw after leaving command station (bug #219)
- Bite and spit started could go through walls, as their attacks emanated too far from the player origin (bug #177)
O Reduced spike damage for level 3 (bug #207)
O Don't auto-switch to an empty weapon (bug #194)
O Fixed bug where particle systems weren't being reset properly after a game end, causing wrong or no particles to emit (bug #125)
O Increased spike energy cost by 25%
O Spent a long time narrowing down the jiggling while standing on buildings, it's in Valve's court at the moment
	- Got e-mail back from Yahn, now investigate
O New smaller mine artwork (still a bit floaty)
O Fixed crash when placing tripmines on doors (bug #222)
O Fixed command station healing players (also, retain armor value) (bug #137)
O Started addressing cheating (leap exploit to start) though it's not fixed yet. You should hear a beep ("invalid.wav") when the game detects that you're doing something illegal, though it doesn't do anything about it yet.  Validated selection, research, building, hotgroups, lifeform morphing, upgrade evolution, etc.) (bug #118)  
O Primal scream duration and cost increased significantly, for a more game-altering moment (bug #205)
O Closed bug #101 (blinking no longer goes through walls)
O Don't white-out commander when nukes detonate (bug #91)
O Closed out ladder-speed bug (bug #28)
O Fixed melee attacks not working up or down (bug #117)
- func_buttons now reset properly (bug #4)
	- Lots of stuff has changed reset-wise, but some lifts and doors don't reset right anymore, others work better
O Reworked marine weapons to add randomness to their shots (Machine gun, pistol, shotgun, HMG) (bug #236)
O Increased pistol damage from 18 to 25
O Redemption tweaks (it triggers more often, it won't pull you back if you have no hives, plays a "invalid" sound when it tries to pull you back but you have no hives, it will now pull you back even if not in combat) (bug #238)
O Removed sickness-inducing view shakes when hit with melee, but not taking damage, anti-llama (bug #230)
O Builder healing spray damage/healing increased from 15 to 20
O HMG damage increased from 22 to 28 and range increased about 20% (now that it has such a wide spray)
- Added ready room command and commander voting to pop-up menu so console should never have to be used (bugs that will be fixed not withstanding)
O Added temporarily invulnerable time (default is .1 minutes -> 6 seconds).  Players glow their team color during this time and can't be hurt. (bug #237)
	- TODO: Draw this on view model as well
O Fixed commander ability to change weapons (!) (bug #239)
O Fixed marine progress indicators not always showing up after a map change (bug #24)
O New buggy behavior: the command menu now longer works for MOUSE2!  The code is half-way to being fixed, need to work with Valve on this.  Bind it to a key in the meantime, sorry!
O Moved soldier info_location out of minimap and to bottom of screen for consistency and to get around problems where it doesn't line up under different resolutions
O Fixed bug where hitting "use defaults" in control setup would delete your settings
O Overflow and HUD lag issues
	O Disable network buffering to see if that's the HUD latency (set to -1)
	O Log all network traffic by default
	O HUD lag should be gone from now on, but we might see more overflows
O Addressed various respawning issues (the problem will now be easier to find if it's not fixed).  Respawning changed significantly, (though it should behave the same), so be on the lookout for spawning problems.
O New command center model!  I think you'll agree with me that this rules.  Thanks Squeal and Mojo!
O New armory model!  Newly animated as well.  Looks different for the basic and the advanced versions.  Thanks Erex and Mojo!
O New HMG model!  Animated and sized properly now (I need to change some code to make the fire animation look right).  Thanks BathroomMonkey and DefOne!



base:
	buildzip.bat, config.cfg, listenserver.cfg, server.cfg, titles.txt, ui.txt - Regular updates

cl_dll:
	hl/hl_weapons.cpp - Removed unneeded code here, so random numbers were generated properly on both client and server
	hl/hl_baseentity.cpp - Added stubs for functionality to fix button resets
	cdll_int.cpp - Added test case for Valve to fix D3D artifacts
	death.cpp, health.cpp, hud.cpp, saytext.cpp, vgui_ClassMenu.cpp, vgui_ScorePanel.cpp, vgui_TeamFortressViewport.*, vgui_teammenu.cpp - Refactored team color management
	input.cpp - Fixed bug where command was able to switch weapons via mousewheel (bug #239)
	ev_hldm.cpp - Reworked bullet firing to add random spread (bug #236)
	cl_dll.dsp - Removed AvHBlinkGun.cpp from project (it's a regular alien ability now)

common:
	hldm.h - Reworked bullet firing to add random spread (bug #236)

dlls:
	buttons.cpp, cbase.h, lights.cpp, subs.cpp - Tried to make general fix for buttons, lifts, lights.  Doesn't work yet.
	cbase.cpp - Fixed a crash bug when placing a mine on a moving door.  Not sure if this is the right fix, but I can't figure out how this could be happening.
	game.cpp - Regular update, added document header
	player.cpp - Level 1 doesn't make falling splat sound, dead players shouldn't block spawn points, replaced impulse hard-codes with constants
	tripmine.cpp - Added document header, fixed potential crash bug (when placing mines on doors?)
	weapons.cpp - Added document header, updates for cheat protection, added constants
	weapons.h - Added 0-degree constant, added document header
	hl.dsp - Removed AvHBlinkGun.cpp (it's a regular alien ability now)
	client.cpp - Draw invulnerable players differently
	combat.cpp - Fix bug where melee attacks couldn't aim up or down, reworked bullet firing to add random spread (bug #236)

doc:
	AvH TODO.txt, Checkin.txt - Regular updates

mod:
	AvHAlienAbilities.*, AvHBlinkGun.cpp (removed), AvHAlienWeapons.h - Refactoring for cheat protection, moved blinking in here from separate class
	AvHAlienWeapon.cpp - Web change?
	AvHAlienWeaponConstants.h - Spit gun and bites were shooting through walls, balance changes
	AvHBasePlayerWeapon.* - Reworked bullet firing to add random spread (bug #236), temporarily hacked shotty player animation, removed old adrenaline, don't allow using weapons when invulnerable
	AvHBite.cpp, AvHKnife.cpp, AvHSwipe.cpp, AvHClaws.cpp - Melee weapons don't play hit sounds or punchangle target if they didn't damage them
	AvHConsoleCommands.cpp - Unhacked this to fix some random bug
	AvHConstants.h - Reworked team colors, #define a few more sounds, weapon spread
	AvHEntities.* - Added max ensnare, can't remember why I'm tagging team starts, changed resources functions to floats (for proper handicapping)
	AvHEntityHierarchy.cpp - Workaround to infinite loop encountered during playtest: look into this more
	AvHEvents.cpp - Added "invalid action" event, reworking for random spread for bullet fire
	AvHGamerules.* - Don't pick up empty weapons, added handicapping, check map validity when loaded, reset players just like all other entities, fixed spawn bug code where it was counting non-team spawns
	AvHHeavyMachineGun.cpp - Updated anims and timing for new artwork
	AvHHive.*, AvHMarineEquipment.* - Refactored reinforcements
	AvHMarineEquipment.* - Refactored reinforcements, updated entities for new artwork
	AvHHud.*, AvHHudRender.cpp - Started to add display of marine upgrade sprite, fixed bug where building indicators aren't displayed after a map change, info_location drawing changes, primal scream color tweak, removed old hive drawing code
	AvHMachineGun.cpp, AvHPistol.cpp, AvHSonicGun.cpp - Tweaked for bullet spread
	AvHMarineWeaponConstants.h - Balance tweaks, bullet spread
	AvHMarineWeapons.h - Bullet spread, new HMG artwork
	AvHMessage.h - Added admin commands, explicity defined HL impulses, removed offensive upgrades
	AvHMovementUtil.cpp - Regular update
	AvHPieMenuHandler.cpp - Renamed pop-up menu command, reworked it to be a regular bind
	AvHPlayer.* - Added validation of all impulses (assumes invalid by default, instead of valid), reset players like all other entities, ensnaring fixes, players are temporarily invulnerable when they spawn, preserve health and armor when using command station, fixed up redemption, add hooks for commander voting and going back to the ready room, models can't be changed via the console anymore
	AvHServerUtil.* - Tried to cut down on sound list spam by defaulting to CHAN_BODY, added debugging code for tracking down solidity issues
	AvHServerVariables.h - Regular update
	AvHSharedUtil.* - Reworked colors, moved functions into server util
	AvHSpecials.* - Mark spawn points (can't remember why this is needed), updated comments, removed offensive upgrade code
	AvHSprites.h - Added marine upgrades sprite to be drawn in the future
	AvHTeam.* - Added handicapping, map validity checking, reinforcements happen independently of teams now
	AvHTechNodes.* - Added hooks to support disallowing actions when a building is "busy"
	AvHTitles.h - Regular update
	AvHVisibleBlipList.* - Allow up to 64 blips, don't ASSERT if we exceed them (trying to draw all physents from shared code on client and server)
	AvHWebSpinner.cpp - Don't allow builder to web a player by hitting him
	NetworkMeter.cpp - Allow disabling of network metering by setting rate to -1

	New:	AvHBabblerGun.cpp (forgot to add this last week) - Create a babbler to attack enemies
			AvHReinforceable.* - Generic reinforcing behavior to be shared by hives and inf portals


pm_shared:
	pm_shared.cpp - Added debug code to fix solidity problems, fixed commander/hera-landing-pad bug, added document header

ui:
	PieNode.cpp - Tried to turn off mouse capture so menu can be binded to keyboard and mouse properly


Wednesday, 6/10
---------------
Overflows fixed, mp3s fixed, particles fixed, victory condition fixed!

O Fixed marine build sound looping occasionally, divine wind looping sound problem, sample conversion warnings in console (bug #270)
O Fixed hearing voice comm of enemies when dead (bug #274)
O Fixed missing chat while dead (bug #280)
O Fixed victory condition issue (bug #171)
O Toned down level 5 stepsize (bug $255)
O Workaround for -console problems on NVIDIA cards (bug #269)
O Add spike hit sounds
	O Added graphical effect back in for spikes also
O Fix ambient sound problems (bug #126)
O Fix particle visible particles (bug #127, bug #216)


base:
	config.cfg - cl_centerid is now 1 by default, console fixes for NVIDIA cards (bug #269)
	liblist.gam, server.cfg, listenserver.cfg, skill.cfg - Regular update

cl_dll:
	ev_hldm.cpp - Removed unused code for spike projectile
	tri.cpp - Removed cl_particleinfo drawing differences

dlls:
	client.cpp - .mp3 and particle fixes
	combat.cpp - Removed major cause of lag: redundant server-side decals.  Also removed duplicate texture sound.
	player.cpp - Fixed bug that caused "Battery" message to be sent every tick (this never showed up in HL because they never had a float armor value?)
	player.h - Don't send network messages to bots
	world.cpp - Added spike ricochet sounds

doc:
	AvH TODO.txt, Checkin.txt - Regular update

mod:
	AvHAmbientSound.* - Fixed bug where sound volume wasn't being set for omnipresent sounds, added document headers
	AvHConsoleCommands.cpp - Added "overflow" cheat for debugging
	AvHEntities.* - Fixed bug where .mp3s weren't being processed client-side
	AvHEvents.cpp - Added special spike hit effect
	AvHGamerules.cpp - Profiling and performance tweaks
	AvHHud.cpp - Fixed bug where non-sighted particle systems weren't being drawn for players on the ground (bug #127)
	AvHHudRender.cpp - Removed cl_particleinfo drawing differences
	AvHParticleSystem.* - Visibility fixes (too many PSs drawing, now they expire when not visible for awhile), removed cl_particleinfo drawing
	AvHParticleSystemManager.cpp - Visibility fixes (too many PSs drawing, now they expire when not visible for awhile)
	AvHPlayer.cpp - Draw chat text while dead (bug #280)
	AvHTeam.cpp - Fixed victory condition bug (bug #171)
	AvHVoiceHelper.cpp - Removed unnecessary code, hopefully fixing bug #274
	NetworkMeter.* - More debug info to the log to track down overflows


pm_shared:
	pm_shared.cpp - Removed large differing step-sizes (bug #255)


RC3/4
-----
O Siege turrets don't need LOS anymore, they can fire through walls (test)
O Builder's healing spray can only damage players
O 128 HUD sprites fixed again, and a couple new alien UI sprites (thanks Merks) (bug #352)
O Alien balance!
	O Spawn tower at nearest resource node for team
	O Command station doesn't spawn in when game starts, but before
	O Aliens can now donate their points to the team!  Any alien can hold their +use key on an active hive to donate points back into the pool.
	O Resources adjusted again.  Resource towers contribute 3 points every 5 seconds, and have a total of 240 points each (lasts 5 minutes unless upgraded).  Other then upgrading, towers work identically for both sides.
O Draw player name and location on hive sight
	O Add nice aliens sayings ("Comprox is attacking", "KidC is buiding here", etc.)
O Draw tech descriptions for commander (and updated some descriptions)
O Fixed problems where it looked like the commander could build but couldn't (rough terrain currently prevents building, but at least you'll now generally see the building draw red)
O Drawing location text for marines centered under minimap (again)
O New tanith
O Buildings are built at random angles now for visual interest
O Fixed marine flashlight (this is a BS setting I realized)
O New automation for creating builds and tracking assets
O Fixed pre-spawned towers floating (bug #365)
O Increased siege splash
O Added muzzle flash to siege, made muzzle flash always show for sentries
O Visual turret radii are now correct (ignores height difference when calculating turret range)
O Random building orientations for visual interest
O Make sentries a bit more effective by speeding their turn rate, decreasing their cost from 20 to 16 and increasing their health from 600 to 800, also increased their range from 700 to 800
O Put missing tanith locations in titles.txt
O Hive no longer plays "flinch" animation when dead
O Umbra now blocks only 7 out of 8 bullets
O Make new .wad
O New install process, lots of sounds and sprites removed
O Fixed one of two "shaky" problems when standing on or near buildings or func_resources (thanks MrBlonde!)
O Updated .wad (replaced Quake III placeholder texture)
O New sounds for the level 3 bite, bilebomb, divine wind, parasite and umbra.  This marks the completion of all the non-vocal sounds!
O Removed eclipse and shaft until they are more complete

base:
	New: assets-*.txt, builddiff.bat, buildfull.bat - Files used to create builds and track assets without losing sanity
	New: metamod-NS.txt - File needed for metamod integration
	Removed: buildzip.bat - Now this is builddiff.bat
	assets.txt, bot.cfg, config.cfg, liblist.gam, listenserver.cfg, mapcycle.txt, server.cfg, skill.cfg, titles.txt - Regular updates

cl_dll:
	hl/hl_baseentity.cpp - Regular update
	chud.h, hud_redraw.cpp - Added code to draw centered messages

dlls:
	client.cpp - Added power-armor drawing, tweaked invul drawing
	game.cpp - Regular update
	gamerules.cpp, player.* - Refactored duplicate spawn code
	hl.dsp - Added server tracking of player data (for random resources, will be used for players that have been voted down also)
	weapons.cpp - Added distress beacon

doc:
	AvH TODO.txt, Checkin.txt - Regular updates

game_shared:
	teamconst.h - Added document header, new player constant

HPB_bot:
	bot.* - Bots chatter a lot, to test new hive sight additions
	linkfunc.cpp - Removed old entities when putting together metamod-NS.txt

mod:
	AvHAcidRocketGun.cpp, AvHAlienAbilities.cpp, AvHAlienWeapons.h - Updates for new viewmodel artwork
	AvHAlienEquipment.* - Alien buildings now have an iuser3 type (used for "resource tower is under attack")
	AvHAlienEquipmentConstants.h, AvHAlienTurret.* - Alien turret refactoring and fixing (the view offset in spawn() was causing them to always miss crouched players)
	AvHAlienWeaponConstants.h - Lots of tweaks (new artwork, balance/feel)
	AvHBaseBuildable.cpp - Auto-build can't happen before game starts
	AvHClientUtil.* - AvHCUWorldToScreen now returns true if the position is in front of player
	AvHCommanderModeHandler.cpp - Lots of UI changes, new upgrades, selectable siege
	AvHConstants.h - Regular update
	AvHEntities.* - Updated resource model, removed old junk
	AvHEvents.cpp - Turret velocity is constructed on client in same way as server, instead of being sent across as calculated (network precision issues)
	AvHGamerules.* - Resource model changes, refactoring spawning to fix level 5 redemption bug without code duplication
	AvHHealingSpray.cpp - Spray only hurts players (prevents builders from easily taking out mines)
	AvHHive.* - Added ability for aliens to donate their resources at the hive, bind technology to a hive (so builders can choose the route), fixed bug where death animation played repeatedly
	AvHHud.* - Added visually-smooth energy level, added versatile location code, new hive sight info, refactored to remove extra sprites (128 HUD sprites bug), commander tech help fixes
	AvHHudRender.cpp - Add ability to centered, translated strings, visually-smooth energy level, new hive sight info, draw parasited message, draw marine upgrades, new method of drawing alien upgrades (overlapping and offset)
	AvHMarineEquipment.* - Phase gates must be built and can be destroyed, observatories decloak aliens, hooks for fast reinforcements upgrade, nuke damage increased, commander banning
	AvHMarineEquipmentConstants.h - Turret tweaks, regular update
	AvHMarineTurret.* - Always draw muzzle flash, calculate range in 2D
	AvHMarineWeaponConstants.h - Marine weapons given back their mojo
	AvHMessage.h - Removed unused constants, new upgrades
	AvHMovementUtil.* - Energy updates
	AvHPlayer.* - Added power armor, added "talking" state for hive sight, changes for new resource model, removed max buildings, create buildings with random orientation, added stimpack, tweaked redemption, added new hive sight info
	AvHPlayerUpgrade.cpp - Level 1 armor toned down, power armor changes
	AvHReinforceable.* - Added subclass-changeable reinforce time to allow faster respawns upgrade
	AvHResearchManager.cpp - Added hooks for research starting, for distress beacon sound effects
	AvHServerUtil.* - Added random building angles for diversity, added research started hooks for distress beacon effects, added versatile alien tech tree, hives are always visible, observatories detect nearby aliens, umbra blocks most but not all bullets
	AvHServerVariables.h - Regular update
	AvHSharedUtil.* - Siege don't require a nearby turret factory, only add built buildings for range detection, build problems on client (point contents failing on rough surfaces)
	AvHSiegeTurret.* - Siege no longer requires LOS (so it's actual siege)
	AvHSpecials.* - New constants for phase gates and alien buildings, new marine upgrades
	AvHSprites.h - Big update to hive sight and sprites
	AvHSwipe.cpp, AvHUmbraGun.cpp - Updated for new artwork
	AvHTeam.* - Resource model overhaul (closed system, random initial points), tech tree changes (new marine upgrades), free resource tower at nearest func_resource
	AvHTechID.h - Regular update
	AvHTitles.h - Regular update
	AvHTurret.* - Turrets track range in 2D, turrets can not require LOS if desired (for siege)
	AvHVisibleBlipList.* - Updates for new hive sight info

pm_shared:
	pm_shared.cpp - MrBlonde's fix for player shaking (not sure how well it works)

ui:
	FadingImageLabel.* - Added support for multiple sprite frames (for pie nodes and max sprite problem), added document headers

util:
	MathUtil.* - Added VectorDistance2D, added document headers
	



Pre RC4
-------
- Linux and scripting changes


